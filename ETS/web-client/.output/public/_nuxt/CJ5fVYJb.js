import{u as t,a as i}from"./Bn8s6ksr.js";const a=i(),u=async()=>{try{const e=await fetch(`${a.public.apiBase}/users`,{headers:{Authorization:`${t("token").value}`}});if(!e.ok)throw new Error("Failed to fetch users");return await e.json()}catch(e){throw console.error("Error fetching users:",e),e}},d=async e=>{try{const r=await fetch(`${a.public.apiBase}/users`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`${t("token").value}`},body:JSON.stringify(e)});if(!r.ok)throw new Error("Failed to create user");return await r.json()}catch(r){throw console.error("Error creating user:",r),r}},h=async(e,r)=>{try{const o=await fetch(`${a.public.apiBase}/users/${e}/update`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`${t("token").value}`},body:JSON.stringify(r)});if(!o.ok)throw new Error("Failed to update user");return await o.json()}catch(o){throw console.error("Error updating user:",o),o}},p=async e=>{try{console.log(typeof e),console.log(e);const r=await fetch(`${a.public.apiBase}/users`,{method:"DELETE",headers:{Authorization:`${t("token").value}`,"Content-Type":"application/json"},body:JSON.stringify({userIds:e})});if(!r.ok)throw new Error("Failed to delete users");return await r.json()}catch(r){throw console.error("Error deleting users:",r),r}},l=async(e,r)=>{try{const o=await fetch(`${a.public.apiBase}/users/reset-password`,{method:"PUT",headers:{Authorization:`${t("token").value}`,"Content-Type":"application/json"},body:JSON.stringify({currentPassword:e,newPassword:r})});if(!o.ok){const n=await o.json();throw{status:o.status,message:n.error||"Failed to change password"}}return await o.json()}catch(o){throw console.error("Error change password:",o),o}};export{d as c,p as d,u as f,l as r,h as u};
