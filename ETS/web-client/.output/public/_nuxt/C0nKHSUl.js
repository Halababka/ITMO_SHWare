import{u as i,a as w}from"./Bn8s6ksr.js";const r=w(),u=async s=>{try{const a=await fetch(`${r.public.apiBase}/tasks/${s}`,{headers:{Authorization:`${i("token").value}`}});if(!a.ok){const o=await a.json();throw new Error(o.message||"Failed to get tasks")}return await a.json()}catch(a){throw a}},l=async(s,a,t)=>{try{const o=s?`${r.public.apiBase}/tasks/answers/${s}`:`${r.public.apiBase}/tasks/answers`,c=s?"PUT":"POST",d={taskId:a,materials:t.map(n=>({id:n.id}))},e=await fetch(o,{method:c,headers:{Authorization:`${i("token").value}`,"Content-Type":"application/json"},body:JSON.stringify(d)});if(!e.ok){const n=await e.json();throw new Error(n.message||"Failed to send answer")}return await e.json()}catch(o){throw o}},g=async(s,a)=>{try{const t=await fetch(`${r.public.apiBase}/tasks/answers/grade`,{method:"PUT",headers:{Authorization:`${i("token").value}`,"Content-Type":"application/json"},body:JSON.stringify({answerId:s,grade:a})});if(!t.ok)throw new Error("Failed to grade answer");return await t.json()}catch(t){throw console.error("Error grading answer:",t),t}};export{g as a,u as g,l as s};
