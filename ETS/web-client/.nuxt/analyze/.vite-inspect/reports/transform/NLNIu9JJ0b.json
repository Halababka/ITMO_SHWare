{
  "resolvedId": "E:/Stusy/web-client/helpers/role.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "const runtimeConfig = useRuntimeConfig()\r\n\r\nexport const fetchRoles = async () => {\r\n    try {\r\n        const response = await fetch(`${runtimeConfig.public.apiBase}/roles`, {\r\n            headers: {\r\n                'Authorization': `${useCookie(\"token\").value}`\r\n            }\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch roles');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Error fetching roles:', error);\r\n        throw error;\r\n    }\r\n}",
      "start": 1715794737514,
      "end": 1715794738232,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715794738232,
      "end": 1715794738232,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715794738232,
      "end": 1715794738232,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715794738232,
      "end": 1715794738232,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1715794738232,
      "end": 1715794738232,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "const runtimeConfig = useRuntimeConfig();\nexport const fetchRoles = async () => {\n  try {\n    const response = await fetch(`${runtimeConfig.public.apiBase}/roles`, {\n      headers: {\n        \"Authorization\": `${useCookie(\"token\").value}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch roles\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching roles:\", error);\n    throw error;\n  }\n};\n",
      "start": 1715794738232,
      "end": 1715794738493,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "E:/Stusy/web-client/helpers/role.ts"
        ],
        "sourcesContent": [
          "const runtimeConfig = useRuntimeConfig()\r\n\r\nexport const fetchRoles = async () => {\r\n    try {\r\n        const response = await fetch(`${runtimeConfig.public.apiBase}/roles`, {\r\n            headers: {\r\n                'Authorization': `${useCookie(\"token\").value}`\r\n            }\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch roles');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Error fetching roles:', error);\r\n        throw error;\r\n    }\r\n}"
        ],
        "mappings": "AAAA,MAAM,gBAAgB,iBAAiB;AAEhC,aAAM,aAAa,YAAY;AAClC,MAAI;AACA,UAAM,WAAW,MAAM,MAAM,GAAG,cAAc,OAAO,OAAO,UAAU;AAAA,MAClE,SAAS;AAAA,QACL,iBAAiB,GAAG,UAAU,OAAO,EAAE,KAAK;AAAA,MAChD;AAAA,IACJ,CAAC;AAED,QAAI,CAAC,SAAS,IAAI;AACd,YAAM,IAAI,MAAM,uBAAuB;AAAA,IAC3C;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AACjC,WAAO;AAAA,EACX,SAAS,OAAO;AACZ,YAAQ,MAAM,yBAAyB,KAAK;AAC5C,UAAM;AAAA,EACV;AACJ;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1715794738493,
      "end": 1715794738493,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715794738493,
      "end": 1715794738493,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1715794738493,
      "end": 1715794738493,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715794738493,
      "end": 1715794738493,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715794738494,
      "end": 1715794738494,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715794738494,
      "end": 1715794738494,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1715794738494,
      "end": 1715794738494,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715794738494,
      "end": 1715794738495,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715794738495,
      "end": 1715794738495,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715794738495,
      "end": 1715794738495,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715794738495,
      "end": 1715794738495,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1715794738495,
      "end": 1715794738495,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1715794738495,
      "end": 1715794738495,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715794738495,
      "end": 1715794738495,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715794738496,
      "end": 1715794738496,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715794738496,
      "end": 1715794738496,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715794738496,
      "end": 1715794738496,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715794738496,
      "end": 1715794738496,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715794738496,
      "end": 1715794738500,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useRuntimeConfig } from '#app/nuxt';\nimport { useCookie } from '#app/composables/cookie';\nconst runtimeConfig = useRuntimeConfig();\nexport const fetchRoles = async () => {\n  try {\n    const response = await fetch(`${runtimeConfig.public.apiBase}/roles`, {\n      headers: {\n        \"Authorization\": `${useCookie(\"token\").value}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch roles\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching roles:\", error);\n    throw error;\n  }\n};\n",
      "start": 1715794738501,
      "end": 1715794738520,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1715794738520,
      "end": 1715794738520,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715794738521,
      "end": 1715794738521,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1715794738521,
      "end": 1715794738521,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1715794738521,
      "end": 1715794738521,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1715794738522,
      "end": 1715794738522,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1715794738522,
      "end": 1715794738522,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715794738522,
      "end": 1715794738523,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715794738523,
      "end": 1715794738523,
      "order": "normal"
    }
  ]
}
