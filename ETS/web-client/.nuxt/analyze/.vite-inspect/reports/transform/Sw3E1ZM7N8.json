{
  "resolvedId": "E:/Stusy/web-client/helpers/notification.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "const runtimeConfig = useRuntimeConfig()\r\n\r\nexport const markNotificationsAsRead = async (notificationIds: number[]) => {\r\n  try {\r\n    const response = await fetch(`${runtimeConfig.public.apiNotification}/notifications/mark-read`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        notificationIds: notificationIds\r\n      })\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to read notifications');\r\n    }\r\n\r\n    useNotification(true)\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error reading notifications:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n",
      "start": 1715794740209,
      "end": 1715794740235,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715794740235,
      "end": 1715794740235,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715794740235,
      "end": 1715794740235,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715794740235,
      "end": 1715794740236,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1715794740236,
      "end": 1715794740236,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "const runtimeConfig = useRuntimeConfig();\nexport const markNotificationsAsRead = async (notificationIds) => {\n  try {\n    const response = await fetch(`${runtimeConfig.public.apiNotification}/notifications/mark-read`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        notificationIds\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to read notifications\");\n    }\n    useNotification(true);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error reading notifications:\", error);\n    throw error;\n  }\n};\n",
      "start": 1715794740236,
      "end": 1715794740249,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "E:/Stusy/web-client/helpers/notification.ts"
        ],
        "sourcesContent": [
          "const runtimeConfig = useRuntimeConfig()\r\n\r\nexport const markNotificationsAsRead = async (notificationIds: number[]) => {\r\n  try {\r\n    const response = await fetch(`${runtimeConfig.public.apiNotification}/notifications/mark-read`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        notificationIds: notificationIds\r\n      })\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to read notifications');\r\n    }\r\n\r\n    useNotification(true)\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error reading notifications:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n"
        ],
        "mappings": "AAAA,MAAM,gBAAgB,iBAAiB;AAEhC,aAAM,0BAA0B,OAAO,oBAA8B;AAC1E,MAAI;AACF,UAAM,WAAW,MAAM,MAAM,GAAG,cAAc,OAAO,eAAe,4BAA4B;AAAA,MAC9F,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU;AAAA,QACnB;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AACD,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,IAAI,MAAM,8BAA8B;AAAA,IAChD;AAEA,oBAAgB,IAAI;AACpB,UAAM,OAAO,MAAM,SAAS,KAAK;AACjC,WAAO;AAAA,EACT,SAAS,OAAO;AACd,YAAQ,MAAM,gCAAgC,KAAK;AACnD,UAAM;AAAA,EACR;AACF;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715794740249,
      "end": 1715794740249,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715794740250,
      "end": 1715794740250,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715794740250,
      "end": 1715794740250,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715794740250,
      "end": 1715794740250,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715794740250,
      "end": 1715794740250,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useRuntimeConfig } from '#app/nuxt';\nimport { useNotification } from 'E:/Stusy/web-client/composables/useNotification.js';\nconst runtimeConfig = useRuntimeConfig();\nexport const markNotificationsAsRead = async (notificationIds) => {\n  try {\n    const response = await fetch(`${runtimeConfig.public.apiNotification}/notifications/mark-read`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        notificationIds\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to read notifications\");\n    }\n    useNotification(true);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error reading notifications:\", error);\n    throw error;\n  }\n};\n",
      "start": 1715794740250,
      "end": 1715794740250,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnrG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1715794740250,
      "end": 1715794740250,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715794740250,
      "end": 1715794740250,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1715794740250,
      "end": 1715794740250,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1715794740250,
      "end": 1715794740250,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1715794740250,
      "end": 1715794740250,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1715794740250,
      "end": 1715794740250,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715794740250,
      "end": 1715794740250,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715794740250,
      "end": 1715794740250,
      "order": "normal"
    }
  ]
}
