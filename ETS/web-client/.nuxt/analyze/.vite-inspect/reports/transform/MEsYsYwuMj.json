{
  "resolvedId": "E:/Stusy/web-client/pages/course/create.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script setup lang=\"ts\">\r\nimport AwCheckmark from \"~/components/ui-kit/AwСheckmark.vue\";\r\nimport AwNotification from \"~/components/ui-kit/AwNotification.vue\";\r\nimport AwTabsWrapper from \"~/components/ui-kit/AwTabsWrapper.vue\";\r\nimport AwTab from \"~/components/ui-kit/AwTab.vue\";\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n  faFilePdf,\r\n  faFileWord,\r\n  faFileExcel,\r\n  faFilePowerpoint,\r\n  faFileArchive,\r\n  faFileImage,\r\n  faFileAudio,\r\n  faFileVideo,\r\n  faFileAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport {FontAwesomeIcon} from '@fortawesome/vue-fontawesome';\r\n\r\ndefinePageMeta({layout: 'home'})\r\nuseHead({\r\n  title: 'Создание курса'\r\n})\r\n\r\n// Объект, соотносящий расширения файлов с соответствующими иконками\r\nconst fileIcons = {\r\n  pdf: faFilePdf,\r\n  doc: faFileWord,\r\n  docx: faFileWord,\r\n  xls: faFileExcel,\r\n  xlsx: faFileExcel,\r\n  ppt: faFilePowerpoint,\r\n  pptx: faFilePowerpoint,\r\n  zip: faFileArchive,\r\n  rar: faFileArchive,\r\n  jpg: faFileImage,\r\n  jpeg: faFileImage,\r\n  png: faFileImage,\r\n  gif: faFileImage,\r\n  mp3: faFileAudio,\r\n  wav: faFileAudio,\r\n  mp4: faFileVideo,\r\n  mov: faFileVideo,\r\n  avi: faFileVideo,\r\n  txt: faFileAlt, // Пример иконки для неизвестных файлов\r\n  // Добавьте другие расширения и соответствующие им иконки по мере необходимости\r\n};\r\nconst runtimeConfig = useRuntimeConfig()\r\nconst token = useCookie('token')\r\nconst router = useRouter();\r\n\r\nconst searchQuery = ref('');\r\nconst selectedGroup = ref(null);\r\nconst selectedLetter = ref(null);\r\nconst groups = ref([]); // Замените на реальные данные полученные из API\r\nconst alphabet = 'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ'.split('');\r\nconst categories = ref([]);\r\nconst complete = ref(false)\r\nconst courseInfo = useEditingCourse();\r\nconst searchResults = ref([]);\r\nconst selectedSearchItems = ref([]); // Выбранные результаты поиска\r\nconst selectedParticipants = ref([]); // Выбранные участники\r\nconst selectedParticipantsItems = ref([]); // Выбранные участники\r\nconst selectedItems = ref([])\r\n\r\nconst loadCategories = async () => {\r\n  try {\r\n    const response = await fetch(`${runtimeConfig.public.apiBase}/categories`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Authorization\": `${token.value}`,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch categories');\r\n    }\r\n    const data = await response.json();\r\n    categories.value = data;\r\n  } catch (error) {\r\n    console.error('Error loading categories:', error);\r\n  }\r\n};\r\n\r\n// Загрузка данных о группах из API\r\nconst loadGroups = async () => {\r\n  try {\r\n    const response = await fetch(`${runtimeConfig.public.apiBase}/groups`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Authorization\": `${token.value}`,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch categories');\r\n    }\r\n    const data = await response.json();\r\n    groups.value = data;\r\n  } catch (error) {\r\n    console.error('Error loading groups:', error);\r\n  }\r\n};\r\nconst loadUsers = async () => {\r\n  try {\r\n    const response = await fetch(`${runtimeConfig.public.apiBase}/users`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Authorization\": `${token.value}`,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch users');\r\n    }\r\n    const data = await response.json();\r\n    searchResults.value = data;\r\n  } catch (error) {\r\n    console.error('Error loading users:', error);\r\n  }\r\n};\r\nconst filteredResults = computed(() => {\r\n  let filtered = [...searchResults.value];\r\n\r\n  filtered.forEach(item => {\r\n    item.fullName = `${item.last_name} ${item.first_name} ${item.middle_name}`;\r\n  });\r\n\r\n  if (searchQuery.value.trim() !== '') {\r\n    filtered = filtered.filter(item => item.fullName.toLowerCase().includes(searchQuery.value.toLowerCase()));\r\n  }\r\n\r\n  if (selectedGroup.value) {\r\n    filtered = filtered.filter(item => item.groups.some(group => group.id === selectedGroup.value));\r\n  }\r\n\r\n  if (selectedLetter.value) {\r\n    const firstLetter = selectedLetter.value.toLowerCase();\r\n    filtered = filtered.filter(item => item.last_name.toLowerCase().startsWith(firstLetter));\r\n  }\r\n\r\n  return filtered;\r\n});\r\nconst addParticipant = (participant) => {\r\n  if (!courseInfo.value.participants.some(p => p.id === participant.id)) {\r\n    courseInfo.value.participants.push(participant);\r\n    console.log(courseInfo.value.participants)\r\n  } else {\r\n    // Можно добавить обработку ошибки или уведомление о том, что пользователь уже добавлен\r\n    console.log('Пользователь уже добавлен');\r\n  }\r\n};\r\nconst removeParticipant = (participant) => {\r\n  const index = courseInfo.value.participants.findIndex(item => item === participant);\r\n  if (index !== -1) {\r\n    courseInfo.value.participants.splice(index, 1);\r\n  }\r\n};\r\nconst displaySelectedParticipants = computed(() => [...courseInfo.value.participants]);\r\n\r\n// Функция сброса фильтров\r\nconst resetFilters = () => {\r\n  searchQuery.value = '';\r\n  selectedGroup.value = null;\r\n  selectedLetter.value = null;\r\n};\r\n\r\n// Функция добавления выбранных участников\r\nconst addSelectedParticipants = () => {\r\n  selectedSearchItems.value.forEach(item => {\r\n    if (!courseInfo.value.participants.some(p => p.id === item.id)) {\r\n      courseInfo.value.participants.push(item);\r\n    }\r\n  });\r\n  selectedSearchItems.value = [];\r\n};\r\n\r\n// Функция удаления выбранных участников\r\nconst removeSelectedParticipants = () => {\r\n  courseInfo.value.participants = courseInfo.value.participants.filter(item => !selectedParticipantsItems.value.includes(item));\r\n  selectedParticipantsItems.value = [];\r\n};\r\nonMounted(() => {\r\n  loadCategories();\r\n  loadGroups();\r\n  loadUsers();\r\n});\r\nconst selectedSectionIndex = ref(null);\r\n\r\nconst selectedSectionForMaterial = computed(() => {\r\n  // Предположим, что индекс выбранной секции хранится в переменной selectedSectionIndex\r\n  const index = selectedSectionIndex.value;\r\n\r\n  // Если индекс равен -1, значит, секция не выбрана\r\n  if (index === -1) {\r\n    return null;\r\n  }\r\n\r\n  // Получаем объект выбранной секции\r\n  const section = courseInfo.value.sections[index];\r\n\r\n  // Возвращаем объект с информацией о выбранной секции\r\n  return {index, name: section.name};\r\n});\r\n\r\nconst showModal = ref(false);\r\n\r\n// Функция переключения состояния секции (открыть/закрыть)\r\nconst toggleSection = (index) => {\r\n  courseInfo.value.sections[index].open = !courseInfo.value.sections[index].open;\r\n};\r\n\r\n// Функция добавления новой секции\r\nconst addSection = (index) => {\r\n  const newSection = {\r\n    name: `Секция ${courseInfo.value.sections.length}`,\r\n    open: false,\r\n    contents: [],\r\n    editing: false\r\n  };\r\n  courseInfo.value.sections.splice(index + 1, 0, newSection);\r\n}\r\n\r\n// Функция удаления секции\r\nconst deleteSection = (index) => {\r\n  courseInfo.value.sections.splice(index, 1);\r\n};\r\n\r\n// Функция добавления материала к секции\r\nconst addMaterialToSection = (sectionIndex, material) => {\r\n  courseInfo.value.sections[sectionIndex].contents.push(material);\r\n};\r\n\r\n// Функция удаления материала из секции\r\nconst deleteContent = (sectionIndex, contentIndex) => {\r\n  courseInfo.value.sections[sectionIndex].contents.splice(contentIndex, 1);\r\n};\r\n\r\n// Функция отображения модального окна для выбора типа материала\r\nconst addContent = (sectionIndex) => {\r\n  selectedSectionIndex.value = sectionIndex;\r\n  showModal.value = true;\r\n};\r\nconst selectTypeContent = (type) => {\r\n  showModal.value = false;\r\n  selectedMaterialType.value = type\r\n  router.push({\r\n    path: `/materials/edit`,\r\n    query: {contentType: selectedMaterialType.value, section: selectedSectionIndex.value}\r\n  })\r\n  // Логика добавления текстового материала к секции\r\n};\r\n// Вычисляемое свойство, которое возвращает список доступных секций для добавления материала\r\nconst availableSections = computed(() => {\r\n  // Исключаем первую секцию \"Введение\", так как ее нельзя изменять\r\n  return courseInfo.value.sections.slice(1);\r\n});\r\nconst selectMaterialContent = () => {\r\n  showModal.value = false;\r\n  selectedMaterialType.value = \"file\"\r\n  router.push({path: `/materials/edit`, query: {contentType: selectedMaterialType.value}})\r\n  // Логика добавления выбранного типа материала к секции\r\n};\r\nconst selectedMaterialType = ref('text'); // По умолчанию выбран текстовый материал\r\n\r\n// Функция добавления материала\r\nconst addMaterial = () => {\r\n  // Проверяем, выбрана ли секция для добавления материала\r\n  if (!selectedSectionForMaterial.value) {\r\n    console.error('Не выбрана секция для добавления материала');\r\n    return;\r\n  }\r\n\r\n  // Создаем объект материала в зависимости от выбранного типа\r\n  let material;\r\n  switch (selectedMaterialType.value) {\r\n    case 'text':\r\n      material = {type: 'text', content: ''}; // Предположим, что содержимое текстового материала пустое\r\n      break;\r\n    case 'file':\r\n      // Логика добавления файла к секции\r\n      break;\r\n    case 'heading':\r\n      // Логика добавления заголовка к секции\r\n      break;\r\n    case 'video':\r\n      // Логика добавления ссылки на видео к секции\r\n      break;\r\n    case 'folder':\r\n      // Логика добавления папки к секции\r\n      break;\r\n    default:\r\n      console.error('Неизвестный тип материала');\r\n  }\r\n\r\n  // Добавляем материал к выбранной секции\r\n  addMaterialToSection(selectedSectionForMaterial.value.index, material);\r\n\r\n  // Закрываем модальное окно\r\n  showModal.value = false;\r\n};\r\n// Функция изменения имени секции\r\nconst inputField = ref(null);\r\nconst editSectionName = (index) => {\r\n  courseInfo.value.sections[index].editing = true;\r\n  // Получаем ссылку на поле ввода имени секции и устанавливаем на него фокус\r\n  if (courseInfo.value.sections[index].editing && inputField.value) {\r\n    inputField.value.focus();\r\n  }\r\n};\r\n\r\nconst saveSectionName = (index) => {\r\n  courseInfo.value.sections[index].editing = false;\r\n};\r\nconst getFileIcon = (filename) => {\r\n  const extension = filename.split('.').pop().toLowerCase();\r\n  return fileIcons[extension] || faFileAlt; // Возвращает иконку по расширению файла, либо иконку по умолчанию\r\n};\r\n\r\nlet dragIndex = null;\r\n\r\nconst dragStart = (index) => {\r\n  dragIndex = index;\r\n};\r\n\r\nconst drop = (index) => {\r\n  const draggedSection = courseInfo.value.sections[dragIndex];\r\n  courseInfo.value.sections.splice(dragIndex, 1);\r\n  courseInfo.value.sections.splice(index, 0, draggedSection);\r\n  console.log(courseInfo.value.sections)\r\n  dragIndex = null;\r\n};\r\n</script>\r\n\r\n<template>\r\n  <AwCheckmark :complete=\"complete\" @toggleComplete=\"complete = !complete\"/>\r\n  <div class=\"main-content\" style=\"flex-direction: column; align-content: center; gap: 20px\">\r\n    <h1>{{ courseInfo.name }}</h1>\r\n    <AwTabsWrapper>\r\n      <AwTab title=\"Содержание\">\r\n        <!-- Логика добавления секций -->\r\n        <div class=\"sections\">\r\n          <div v-for=\"(section, index) in courseInfo.sections\" :key=\"index\" class=\"\"\r\n               :draggable=\"true\"\r\n               @dragstart=\"dragStart(index)\"\r\n               @dragover.prevent\r\n               @drop=\"drop(index)\">\r\n            <div class=\"section-wrapper\" @click=\"toggleSection(index)\">\r\n              <div class=\"section\">\r\n                <div class=\"flex flex-nowrap items-center gap-2\">\r\n                    <i class=\"pi pi-bars drag-icon\" @click.stop></i>\r\n                  <i :class=\"section.open ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></i>\r\n                  <input ref=\"inputField\" v-model=\"section.name\" class=\"section-title-input text-2xl\"\r\n                         v-if=\"section.editing\"\r\n                         @keydown.enter=\"saveSectionName(index)\" @blur=\"saveSectionName(index)\" @click.stop/>\r\n                  <span v-else class=\"select-none text-2xl\">{{ section.name }}</span>\r\n                </div>\r\n                <div class=\"section-buttons flex gap-2 items-center\">\r\n                  <Button icon=\"pi pi-pencil\" class=\"edit-section-btn\" @click.stop=\"editSectionName(index)\"/>\r\n                  <Button v-if=\"index !== 0\" icon=\"pi pi-times\" class=\"delete-section-btn\"\r\n                          @click.stop=\"deleteSection(index)\"/>\r\n                </div>\r\n              </div>\r\n              <div class=\"section-content\" v-if=\"section.open\" @click.stop>\r\n                <!-- Логика добавления материалов -->\r\n                <div class=\"content1\" v-for=\"(content, contentIndex) in section.contents\" :key=\"contentIndex\"\r\n                     @click.stop>\r\n                  <div class=\"content-header\">\r\n                    <h3>{{ content.title }}</h3>\r\n                    <Button icon=\"pi pi-trash\" class=\"delete-content-btn\"\r\n                            @click=\"deleteContent(index, contentIndex)\"/>\r\n                  </div>\r\n                  <p>{{ content.content }}</p> <!-- Предположим, что содержимое материала отображается как текст -->\r\n                  <div v-if=\"content.materials\" class=\"file-container\">\r\n                    <a :href=\"content.materials[0].path\" download class=\"file-link\">\r\n                      <div class=\"file-icon-wrapper\">\r\n                        <FontAwesomeIcon :icon=\"getFileIcon(content.materials[0].name)\" class=\"file-icon\"/>\r\n                      </div>\r\n                      <span class=\"file-name\">{{ content.materials[0].name }}</span>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <Button label=\"Добавить материал\" icon=\"pi pi-plus\" class=\"add-content-btn\" @click=\"addContent(index)\"/>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex items-center mt-3\">\r\n              <div class=\"dashed-line left\"></div>\r\n              <Button icon=\"pi pi-plus\" class=\"add-section-btn\" rounded outlined @click=\"addSection(index)\"/>\r\n              <div class=\"dashed-line right\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Модальное окно для добавления материалов -->\r\n          <div class=\"modal\" v-if=\"showModal\">\r\n            <div class=\"modal-content\">\r\n              <h2>Выберите тип материала</h2>\r\n              <div class=\"material-types\">\r\n                <Button label=\"Текст\" icon=\"pi pi-file\" class=\"p-button-text\" @click=\"selectTypeContent('text')\"/>\r\n                <Button label=\"Файл\" icon=\"pi pi-upload\" class=\"p-button-text\" @click=\"selectTypeContent('file')\"/>\r\n                <!-- Другие типы материалов -->\r\n              </div>\r\n              <Button label=\"Отмена\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"showModal = false\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AwTab>\r\n      <AwTab title=\"Настройки\">\r\n        <div>\r\n          <form @submit.prevent=\"\" class=\"flex gap-3 flex-col\">\r\n            <div class=\"\">\r\n              <label for=\"name\" class=\"block text-sm font-medium\">Название курса</label>\r\n              <input v-model=\"courseInfo.name\" type=\"text\" id=\"name\" name=\"name\" :placeholder=\"courseInfo.name\"\r\n                     class=\"inpt mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\">\r\n            </div>\r\n            <div class=\"\">\r\n              <label for=\"description\" class=\"block text-sm font-medium\">Описание курса</label>\r\n              <textarea v-model=\"courseInfo.description\" id=\"description\" name=\"description\" rows=\"3\"\r\n                        class=\"inpt mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"></textarea>\r\n            </div>\r\n            <div class=\"\">\r\n              <label class=\"block text-sm font-medium\">Активность курса</label>\r\n              <input v-model=\"courseInfo.isActive\" type=\"checkbox\"\r\n                     class=\"form-checkbox checkbox mt-1 h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\">\r\n            </div>\r\n            <div class=\"\">\r\n              <label for=\"start_date\" class=\"block text-sm font-medium\">Дата начала курса</label>\r\n              <input v-model=\"courseInfo.startDate\" type=\"date\" id=\"start_date\" name=\"start_date\"\r\n                     class=\"inpt mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\">\r\n            </div>\r\n            <div class=\"\">\r\n              <label for=\"end_date\" class=\"block text-sm font-medium\">Дата окончания курса</label>\r\n              <input v-model=\"courseInfo.endDate\" type=\"date\" id=\"end_date\" name=\"end_date\"\r\n                     class=\"inpt mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\">\r\n            </div>\r\n            <div class=\"max-w-md\" style=\"width: 448px\">\r\n              <label for=\"category\" class=\"block text-sm font-medium\">Категория курса</label>\r\n              <MultiSelect v-model=\"courseInfo.categories\" :options=\"categories\" filter optionLabel=\"name\"\r\n                           placeholder=\"Выберите категории\" class=\"w-full\"/>\r\n            </div>\r\n            <div class=\"flex justify-end\">\r\n              <button type=\"submit\" class=\"btn\">Сохранить</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </AwTab>\r\n      <AwTab title=\"Участники\" class=\"flex flex-col gap-5\">\r\n        <div class=\"participants-container\">\r\n          <!-- Форма поиска и фильтрации -->\r\n          <div class=\"search-filter-form\">\r\n            <div class=\"filter-bar\">\r\n              <!-- Поиск по ФИО -->\r\n              <div class=\"mb-4\">\r\n                <label for=\"search\" class=\"block text-sm font-medium mb-1\">Поиск по ФИО:</label>\r\n                <input type=\"text\" v-model=\"searchQuery\" id=\"search\" name=\"search\" placeholder=\"Введите ФИО\"\r\n                       class=\"inpt form-input rounded-md shadow-sm w-full\">\r\n              </div>\r\n              <div class=\"mb-4\">\r\n                <label for=\"group\" class=\"block text-sm font-medium mb-1\">Фильтр по группам:</label>\r\n                <select v-model=\"selectedGroup\" id=\"group\" name=\"group\" class=\"form-select rounded-md shadow-sm w-full\">\r\n                  <option :value=null>Все группы</option>\r\n                  <option v-for=\"group in groups\" :key=\"group.id\" :value=\"group.id\">{{ group.abbreviation }}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"mb-4\">\r\n                <label for=\"lastNameLetter\" class=\"block text-sm font-medium mb-1\">Фильтр по первой букве\r\n                  фамилии:</label>\r\n                <select v-model=\"selectedLetter\" id=\"lastNameLetter\" name=\"lastNameLetter\"\r\n                        class=\"form-select rounded-md shadow-sm w-full\">\r\n                  <option :value=null>Все буквы</option>\r\n                  <option v-for=\"letter in alphabet\" :key=\"letter\" :value=\"letter\">{{ letter }}</option>\r\n                </select>\r\n              </div>\r\n              <Button label=\"Сбросить фильтры\" icon=\"pi pi-times\" class=\"p-button-secondary\" @click=\"resetFilters\"/>\r\n            </div>\r\n          </div>\r\n          <div class=\"flex-1\">\r\n            <div class=\"flex justify-between w-full items-center mb-2\">\r\n              <label class=\"block text-sm font-medium mb-3\">Выбор участников</label>\r\n              <Button label=\"Добавить выбранных пользователей\" icon=\"pi pi-check\" class=\"p-button-success\"\r\n                      @click=\"addSelectedParticipants\"/>\r\n            </div>\r\n            <!-- Таблица с результатами поиска -->\r\n            <DataTable :value=\"filteredResults\" showGridlines :paginator=\"true\" :rows=\"10\" tableStyle=\"min-width: 35rem\"\r\n                       v-model:selection=\"selectedSearchItems\">\r\n              <Column selectionMode=\"multiple\" style=\"width: 1rem\"></Column>\r\n              <Column field=\"fullName\" header=\"ФИО\" style=\"width: 300px\"></Column>\r\n              <Column field=\"groups\" header=\"Группа\" style=\"width: 25%\">\r\n                <template #body=\"{ data }\">\r\n        <span v-for=\"(group, index) in data.groups\" :key=\"index\">\r\n          {{ group.abbreviation }}{{ index === data.groups.length - 1 ? '' : ', ' }}\r\n        </span>\r\n                </template>\r\n              </Column>\r\n              <Column style=\"width: 1rem\">\r\n                <template #body=\"slotProps\">\r\n                  <Button icon=\"pi pi-plus\" class=\"p-button-success\" @click=\"addParticipant(slotProps.data)\"></Button>\r\n                </template>\r\n              </Column>\r\n            </DataTable>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex flex-col gap-5\">\r\n          <div class=\"flex justify-between w-full items-center\">\r\n            <h2>Участники</h2>\r\n            <Button label=\"Удалить выбранных пользователей\" icon=\"pi pi-times\" class=\"p-button-danger h-min\"\r\n                    @click=\"removeSelectedParticipants\"/>\r\n          </div>\r\n          <!-- Таблица с выбранными участниками -->\r\n          <DataTable v-model:selection=\"selectedParticipantsItems\" :value=\"displaySelectedParticipants\" showGridlines\r\n                     :paginator=\"true\" :rows=\"10\" tableStyle=\"min-width: 30rem\">\r\n            <Column selectionMode=\"multiple\" style=\"width: 1rem\"></Column>\r\n            <Column field=\"fullName\" header=\"ФИО\" style=\"width: 55%\"></Column>\r\n            <Column field=\"groups\" header=\"Группа\" style=\"width: 35%\">\r\n              <template #body=\"{ data }\">\r\n          <span v-for=\"(group, index) in data.groups\" :key=\"index\">{{\r\n              group.abbreviation\r\n            }}{{ index === data.groups.length - 1 ? '' : ', ' }}</span>\r\n              </template>\r\n            </Column>\r\n            <Column style=\"min-width: 2rem\">\r\n              <template #body=\"slotProps\">\r\n                <Button icon=\"pi pi-trash\" class=\"p-button-danger\" @click=\"removeParticipant(slotProps.data)\"></Button>\r\n              </template>\r\n            </Column>\r\n          </DataTable>\r\n        </div>\r\n      </AwTab>\r\n    </AwTabsWrapper>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n@use '@/assets/scss/main.scss' as *;\r\n\r\n.drag-icon {\r\n  cursor: grab; /* Изменение курсора */\r\n  font-size: 18px; /* Размер иконки */\r\n  color: #333; /* Цвет иконки */\r\n}\r\n\r\n.dashed-line {\r\n  width: 45%;\r\n  height: 1px;\r\n  margin: 10px 10px; /* Отступы */\r\n}\r\n\r\n.left {\r\n  background: linear-gradient(to right, #fff 0%, #fff 50%, #7e7e7e 50%);\r\n  background-size: 45px 1px;\r\n  color: #ACB2CA;\r\n  float: left; /* Выравнивание по левому краю */\r\n}\r\n\r\n.right {\r\n  background: linear-gradient(to left, #fff 0%, #fff 50%, #7e7e7e 50%);\r\n  background-size: 45px 1px;\r\n  color: #ACB2CA;\r\n  float: right; /* Выравнивание по правому краю */\r\n}\r\n\r\n.main-content {\r\n  gap: 0 !important;\r\n  border-radius: 20px;\r\n  padding: 20px;\r\n  @include theme('background', $general-background-light);\r\n}\r\n\r\n.p-multiselect {\r\n  padding: 25px 20px;\r\n  border-radius: 15px;\r\n  margin: 10px 0;\r\n}\r\n\r\n.participants-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.search-filter-form {\r\n  width: 30%;\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.search-bar input {\r\n  width: 200px;\r\n}\r\n\r\n.filter-bar .p-dropdown {\r\n  width: 200px;\r\n}\r\n\r\n.p-button {\r\n  padding: 0.5rem;\r\n}\r\n\r\n.p-multiselect-filter-container {\r\n  border: 2px solid red !important;\r\n}\r\n\r\n.checkbox {\r\n  margin: 10px 0;\r\n  // Увеличение размера чекбокса\r\n  input[type=\"checkbox\"] {\r\n    transform: scale(3); // Увеличиваем размер в 1.5 раза\r\n  }\r\n}\r\n\r\n/* Стили для секций и материалов */\r\n.sections {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px; /* Расстояние между секциями */\r\n}\r\n\r\n.section-wrapper {\r\n  border: 1px solid #e2e8f0; /* Цвет и стиль обводки секции */\r\n  border-radius: 8px; /* Закругление углов обводки */\r\n  padding: 10px; /* Отступ внутри обводки */\r\n  cursor: pointer; /* Изменение курсора при наведении */\r\n}\r\n\r\n.section {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 500px;\r\n}\r\n\r\n.sections .section-title-input {\r\n  width: 60%;\r\n  border-radius: 5px;\r\n  border: 2px solid black;\r\n  background: transparent;\r\n  font-weight: inherit;\r\n}\r\n\r\n.section-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n}\r\n\r\n.section-content {\r\n  margin-top: 10px;\r\n\r\n  .content-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .content1 {\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid gray;\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.material-types {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n}\r\n\r\n.file-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n}\r\n\r\n.file-link {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  position: relative;\r\n}\r\n\r\n.file-icon-wrapper {\r\n  font-size: 46px; /* Размер иконки */\r\n}\r\n\r\n.file-icon {\r\n  font-size: inherit; /* Наследование размера шрифта */\r\n}\r\n\r\n.file-name {\r\n  //text-align: center;\r\n  //overflow: hidden;\r\n  //text-overflow: ellipsis; /* Обрезание длинных имен файлов */\r\n  //white-space: nowrap;\r\n  width: 100px; /* can be 100% ellipsis will happen when contents exceed it */\r\n  display: inline-block;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n\r\n  //&:hover {\r\n  //\r\n  //  white-space: normal;\r\n  //  width: auto;\r\n  //}\r\n}\r\n\r\n.file-link:hover .file-name::after {\r\n  white-space: normal;\r\n  width: auto;\r\n  content: attr(data-full-name); /* Отображение полного имени файла при наведении */\r\n  position: absolute;\r\n  background-color: white;\r\n  padding: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n  z-index: 1;\r\n}\r\n</style>",
      "start": 1715794731094,
      "end": 1715794731296,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715794731296,
      "end": 1715794731296,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715794731296,
      "end": 1715794731297,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715794731297,
      "end": 1715794731297,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1715794731297,
      "end": 1715794731297,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1715794731297,
      "end": 1715794731297,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1715794731297,
      "end": 1715794731297,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715794731297,
      "end": 1715794731297,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import _sfc_main from \"E:/Stusy/web-client/pages/course/create.vue?vue&type=script&setup=true&lang.ts\";\nexport * from \"E:/Stusy/web-client/pages/course/create.vue?vue&type=script&setup=true&lang.ts\";\nimport \"E:/Stusy/web-client/pages/course/create.vue?vue&type=style&index=0&scoped=c29c512d&lang.scss\";\nimport _export_sfc from \"\\0plugin-vue:export-helper\";\nexport default /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__scopeId\", \"data-v-c29c512d\"]]);\n",
      "start": 1715794731297,
      "end": 1715794731464,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715794731465,
      "end": 1715794731465,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715794731473,
      "end": 1715794731473,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715794731474,
      "end": 1715794731474,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1715794731474,
      "end": 1715794731474,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715794731475,
      "end": 1715794731476,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715794731476,
      "end": 1715794731477,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715794731477,
      "end": 1715794731477,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715794731477,
      "end": 1715794731477,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1715794731478,
      "end": 1715794731478,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1715794731478,
      "end": 1715794731479,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715794731479,
      "end": 1715794731479,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715794731480,
      "end": 1715794731480,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715794731481,
      "end": 1715794731481,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715794731481,
      "end": 1715794731481,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715794731481,
      "end": 1715794731482,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715794731482,
      "end": 1715794731482,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1715794731483,
      "end": 1715794731491,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1715794731492,
      "end": 1715794731492,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715794731496,
      "end": 1715794731498,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1715794731498,
      "end": 1715794731498,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1715794731499,
      "end": 1715794731499,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1715794731500,
      "end": 1715794731501,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1715794731501,
      "end": 1715794731501,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715794731501,
      "end": 1715794731503,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715794731503,
      "end": 1715794731503,
      "order": "normal"
    }
  ]
}
