{
  "resolvedId": "E:/Stusy/web-client/pages/admin/groups/index.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, unref as _unref, withCtx as _withCtx, createElementVNode as _createElementVNode, isRef as _isRef, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, createSlots as _createSlots, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-8c1ca0b2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"main-content flex-col\" }\nconst _hoisted_2 = { class: \"card\" }\nconst _hoisted_3 = { class: \"flex flex-wrap gap-3 items-center justify-between mb-3\" }\nconst _hoisted_4 = { class: \"flex items-center gap-3\" }\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", { class: \"m-0 text-xl text-900 font-bold\" }, \"Управление группами\", -1))\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1))\nconst _hoisted_7 = { class: \"m-0 mb-2\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Присоединение к группе\", -1))\nconst _hoisted_9 = { class: \"card\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"flex align-items-center\"\n}\nconst _hoisted_11 = { key: 1 }\nconst _hoisted_12 = { class: \"flex flex-col justify-center flex-wrap\" }\nconst _hoisted_13 = { class: \"flex flex-wrap gap-3 items-center justify-between mb-3\" }\nconst _hoisted_14 = { class: \"flex items-center gap-3\" }\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", { class: \"m-0 text-xl text-900 font-bold\" }, \"Пользователи\", -1))\nconst _hoisted_16 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1))\nconst _hoisted_17 = { class: \"field my-3\" }\nconst _hoisted_18 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"full_name\" }, \"Полное название\", -1))\nconst _hoisted_19 = {\n  key: 0,\n  class: \"p-error\"\n}\nconst _hoisted_20 = { class: \"field my-3\" }\nconst _hoisted_21 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"abbreviation\" }, \"Аббревиатура\", -1))\nconst _hoisted_22 = {\n  key: 0,\n  class: \"p-error\"\n}\nconst _hoisted_23 = { class: \"confirmation-content p-3\" }\nconst _hoisted_24 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-exclamation-triangle mr-3\",\n  style: {\"font-size\":\"2rem\"}\n}, null, -1))\nconst _hoisted_25 = { key: 0 }\nconst _hoisted_26 = { class: \"confirmation-content p-3\" }\nconst _hoisted_27 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-exclamation-triangle mr-3\",\n  style: {\"font-size\":\"2rem\"}\n}, null, -1))\nconst _hoisted_28 = { key: 0 }\n\nimport {\r\n  createGroup,\r\n  deleteGroups,\r\n  fetchGroups,\r\n  updateGroup,\r\n  deleteGroupUser,\r\n  formatGroupDates,\r\n  getGroupFullNames,\r\n  addUsersToGroup, fetchGroupsWithUsers\r\n} from \"~/helpers/groups\";\r\n\r\nimport {FilterMatchMode} from \"primevue/api\";\r\nimport {fetchUsers} from \"~/helpers/user\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\ndefinePageMeta({\r\n  layout: 'home',\r\n  middleware: [\r\n    'admin'\r\n  ]\r\n})\r\nuseHead({\r\n  title: 'Администрирование групп'\r\n})\r\n\r\nconst runtimeConfig = useRuntimeConfig()\r\nconst nuxtApp = useNuxtApp()\r\nconst router = useRouter();\r\n\r\nconst loading = ref(true)\r\nconst toast = useToast();\r\nconst dt = ref();\r\nconst groups = ref();\r\nconst groupDialog = ref(false);\r\nconst deleteGroupDialog = ref(false);\r\nconst deleteGroupsDialog = ref(false);\r\nconst group = ref({});\r\nconst selectedGroups = ref();\r\nconst filters = ref({\r\n  'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\r\n});\r\nconst filtersUserTable = ref({\r\n  'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\r\n})\r\nconst filtersExpandedUsers = ref({\r\n  'fullname': {value: null, matchMode: FilterMatchMode.CONTAINS},\r\n});\r\nconst submitted = ref(false);\r\nconst roles = ref([]);\r\nconst statuses = ref([\r\n  {label: 'ACTIVE', value: 'active'},\r\n  {label: 'INACTIVE', value: 'inactive'},\r\n  {label: 'BLOCKED', value: 'blocked'}\r\n]);\r\n\r\nconst columns = ref([\r\n  {field: 'full_name', header: 'Наименование'},\r\n  {field: 'abbreviation', header: 'Аббревиатура'},\r\n  {field: 'create_at', header: 'Дата создания'},\r\n  {field: 'updated_at', header: 'Дата обновления'},\r\n]);\r\nconst selectedColumns = ref(columns.value.filter(column => column.field !== 'updated_at'));\r\nconst expandedRows = ref({});\r\nconst selectedUsers = ref();\r\nconst users = ref();\r\nconst columnsUser = ref([\r\n  {field: 'email', header: 'Почта'},\r\n  {field: 'fullname', header: 'ФИО'},\r\n  {field: 'username', header: 'Логин'},\r\n  {field: 'about', header: 'Описание'},\r\n  {field: 'role.name', header: 'Роль'},\r\n  {field: 'groups', header: 'Группы'}\r\n]);\r\nconst selectedColumnsUser = ref(columnsUser.value.filter(column => column.field !== 'about'));\r\n\r\nconst openNew = () => {\r\n  group.value = {};\r\n  submitted.value = false;\r\n  groupDialog.value = true;\r\n};\r\n\r\nconst hideDialog = () => {\r\n  groupDialog.value = false;\r\n  submitted.value = false;\r\n};\r\n\r\nconst saveGroup = () => {\r\n  submitted.value = true;\r\n\r\n  if (group?.value.full_name?.trim()) {\r\n    if (group.value.id) {\r\n      console.log(group.value.id, group.value)\r\n      updateGroup(group.value.id, group.value) // Отправляем запрос на обновление группы\r\n          .then(data => {\r\n            groups.value[findIndexById(group.value.id)] = data;\r\n            toast.add({severity: 'success', summary: 'Successful', detail: 'group Updated', life: 3000});\r\n            groupDialog.value = false;\r\n            group.value = {};\r\n            getGroups()\r\n          })\r\n          .catch(error => console.error('Error updating group:', error));\r\n    } else {\r\n      createGroup(group.value)\r\n          .then(data => {\r\n            groups.value.push(data); // Добавляем созданного группы в список\r\n            toast.add({severity: 'success', summary: 'Successful', detail: 'group Created', life: 3000});\r\n          })\r\n          .catch(error => console.error('Error creating group:', error));\r\n    }\r\n\r\n    groupDialog.value = false;\r\n    group.value = {};\r\n  }\r\n};\r\n\r\nconst editGroup = (usr) => {\r\n  group.value = {...usr};\r\n  groupDialog.value = true;\r\n  console.log(group)\r\n};\r\n\r\nconst confirmDeleteGroup = (usr) => {\r\n  group.value = usr;\r\n  deleteGroupDialog.value = true;\r\n};\r\n\r\nconst deleteGroup = () => {\r\n  deleteGroups([group.value.id])\r\n      .then(data => {\r\n        groups.value = groups.value.filter(val => val.id !== group.value.id);\r\n        deleteGroupDialog.value = false;\r\n        group.value = {};\r\n        toast.add({severity: 'success', summary: 'Успешно', detail: 'Группа удалена', life: 3000});\r\n      })\r\n      .catch(error => console.error('Error delete group:', error));\r\n};\r\n\r\nconst removeUserFromGroup = (groupId, userIds) => {\r\n  deleteGroupUser(groupId, userIds)\r\n      .then(() => {\r\n        // Обновление списка групп после удаления пользователя\r\n        getGroups();\r\n        toast.add({severity: 'success', summary: 'Успешно', detail: 'Пользователь удален из группы', life: 3000});\r\n      })\r\n      .catch(error => console.error('Ошибка удаления пользователя из группы:', error))\r\n      .finally(getUsers);\r\n};\r\n\r\nconst addUserToGroup = (groupId, userIds) => {\r\n  addUsersToGroup(groupId, userIds)\r\n      .then(() => {\r\n        // Обновление списка групп после удаления пользователя\r\n        getGroups();\r\n        toast.add({severity: 'success', summary: 'Успешно', detail: 'Пользователь добавлен в группу', life: 3000});\r\n      })\r\n      .catch(error => console.error('Ошибка добавления пользователя в группу:', error));\r\n};\r\n\r\nconst findIndexById = (id) => {\r\n  let index = -1;\r\n  for (let i = 0; i < groups.value.length; i++) {\r\n    if (groups.value[i].id === id) {\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n  return index;\r\n};\r\n\r\nconst createId = () => {\r\n  let id = '';\r\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  for (var i = 0; i < 5; i++) {\r\n    id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n  }\r\n  return id;\r\n};\r\n\r\nconst exportCSV = () => {\r\n  dt.value.exportCSV();\r\n};\r\n\r\nconst confirmDeleteSelected = () => {\r\n  deleteGroupsDialog.value = true;\r\n};\r\n\r\nconst confirmAddSelectedUserToGroup = () => {\r\n  console.log(selectedUsers.value)\r\n  addUserToGroup(group.value.id, selectedUsers.value.map(user => user.id))\r\n  selectedUsers.value = null\r\n}\r\n\r\nconst deleteSelectedGroups = () => {\r\n  deleteGroups(selectedGroups.value.map(group => group.id))\r\n      .then(data => {\r\n        groups.value = groups.value.filter(val => !selectedGroups.value.includes(val));\r\n        deleteGroupsDialog.value = false;\r\n        selectedGroups.value = null;\r\n        toast.add({severity: 'success', summary: 'Успешно', detail: 'Пользователи удалены', life: 3000});\r\n      })\r\n      .catch(error => console.error('Error delete groups:', error));\r\n};\r\n\r\nconst isGroupInDataGroups = (groupId, groups) => {\r\n  if (!groupId) {\r\n    return true; // Если groupId не задан, кнопка должна быть отключена\r\n  }\r\n\r\n  // Проверяем наличие id у вложенных элементов в groups\r\n  const hasValidGroupId = groups.some(group => {\r\n    return group?.id === groupId || (group?.children?.some(child => child?.id === groupId));\r\n  });\r\n\r\n  return !hasValidGroupId;\r\n}\r\n\r\nconst onToggleColumns = (val) => {\r\n  // Фильтруем выбранные колонки на основе значения мультиселектора\r\n  selectedColumns.value = columns.value.filter(col => val.includes(col));\r\n};\r\nconst onRowExpand = (event) => {\r\n  toast.add({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\r\n};\r\nconst onRowCollapse = (event) => {\r\n  toast.add({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\r\n};\r\n// Получение групп с сервера при монтировании компонента\r\nfunction getGroups() {\r\n  fetchGroupsWithUsers()\r\n      .then(data => {\r\n        data.forEach(group => {\r\n          if (group.users) {\r\n            group.users.forEach(user => {\r\n              user.fullname = `${user.last_name} ${user.first_name} ${user.middle_name}`;\r\n              user.group_id = group.id;\r\n            });\r\n          }\r\n        });\r\n        groups.value = data.map(group => ({\r\n          ...group\r\n        }));\r\n        groups.value = formatGroupDates(groups.value)\r\n        console.log(groups.value)\r\n        loading.value = false;\r\n      })\r\n      .catch(error => console.error('Error fetching groups:', error));\r\n}\r\n\r\nfunction getUsers() {\r\n  loading.value = true\r\n  fetchUsers()\r\n      .then(data => {\r\n        users.value = data.map(user => ({\r\n          ...user,\r\n          fullname: `${user.last_name} ${user.first_name} ${user.middle_name}`\r\n        }));\r\n        loading.value = false;\r\n      })\r\n      .catch(error => console.error('Error fetching users:', error))\r\n      .finally(() => {\r\n        loading.value = false\r\n      });\r\n}\r\n\r\nonMounted(() => {\r\n  getGroups()\r\n  getUsers()\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_Toast = _resolveComponent(\"Toast\")!\n  const _component_Button = _resolveComponent(\"Button\")!\n  const _component_FileUpload = _resolveComponent(\"FileUpload\")!\n  const _component_Toolbar = _resolveComponent(\"Toolbar\")!\n  const _component_InputIcon = _resolveComponent(\"InputIcon\")!\n  const _component_InputText = _resolveComponent(\"InputText\")!\n  const _component_IconField = _resolveComponent(\"IconField\")!\n  const _component_MultiSelect = _resolveComponent(\"MultiSelect\")!\n  const _component_Column = _resolveComponent(\"Column\")!\n  const _component_DataTable = _resolveComponent(\"DataTable\")!\n  const _component_Dropdown = _resolveComponent(\"Dropdown\")!\n  const _component_Dialog = _resolveComponent(\"Dialog\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(_component_Toast),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createVNode(_component_Toolbar, { class: \"mb-4\" }, {\n          start: _withCtx(() => [\n            _createVNode(_component_Button, {\n              label: \"Добавить\",\n              icon: \"pi pi-plus\",\n              severity: \"success\",\n              class: \"mr-2\",\n              onClick: openNew\n            }),\n            _createVNode(_component_Button, {\n              label: \"Удалить\",\n              icon: \"pi pi-trash\",\n              severity: \"danger\",\n              onClick: confirmDeleteSelected,\n              disabled: !_unref(selectedGroups) || !_unref(selectedGroups).length\n            }, null, 8, [\"disabled\"])\n          ]),\n          end: _withCtx(() => [\n            _createVNode(_component_FileUpload, {\n              mode: \"basic\",\n              accept: \"image/*\",\n              maxFileSize: 1000000,\n              label: \"Import\",\n              chooseLabel: \"Импорт\",\n              class: \"mr-2 inline-block\"\n            }),\n            _createVNode(_component_Button, {\n              label: \"Экспорт\",\n              icon: \"pi pi-upload\",\n              severity: \"help\",\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (exportCSV($event)))\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_DataTable, {\n          ref_key: \"dt\",\n          ref: dt,\n          expandedRows: _unref(expandedRows),\n          \"onUpdate:expandedRows\": _cache[4] || (_cache[4] = ($event: any) => (_isRef(expandedRows) ? (expandedRows).value = $event : null)),\n          value: _unref(groups),\n          selection: _unref(selectedGroups),\n          \"onUpdate:selection\": _cache[5] || (_cache[5] = ($event: any) => (_isRef(selectedGroups) ? (selectedGroups).value = $event : null)),\n          dataKey: \"id\",\n          style: {\"max-width\":\"1500px\"},\n          loading: _unref(loading),\n          onRowExpand: onRowExpand,\n          onRowCollapse: onRowCollapse,\n          showGridlines: \"\",\n          resizableColumns: \"\",\n          columnResizeMode: \"fit\",\n          paginator: true,\n          rows: 10,\n          filters: _unref(filters),\n          paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n          rowsPerPageOptions: [10,25,50],\n          currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n        }, {\n          header: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_3, [\n              _createElementVNode(\"div\", _hoisted_4, [\n                _hoisted_5,\n                _createVNode(_component_Button, {\n                  icon: \"pi pi-refresh\",\n                  rounded: \"\",\n                  raised: \"\",\n                  onClick: getGroups\n                })\n              ]),\n              _createVNode(_component_IconField, { iconPosition: \"left\" }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_InputIcon, null, {\n                    default: _withCtx(() => [\n                      _hoisted_6\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_InputText, {\n                    modelValue: _unref(filters)['global'].value,\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_unref(filters)['global'].value) = $event)),\n                    placeholder: \"Поиск...\"\n                  }, null, 8, [\"modelValue\"])\n                ]),\n                _: 1\n              })\n            ]),\n            _createVNode(_component_MultiSelect, {\n              modelValue: _unref(selectedColumns),\n              \"onUpdate:modelValue\": [\n                _cache[2] || (_cache[2] = ($event: any) => (_isRef(selectedColumns) ? (selectedColumns).value = $event : null)),\n                onToggleColumns\n              ],\n              options: _unref(columns),\n              optionLabel: \"header\",\n              display: \"chip\",\n              placeholder: \"Выберите колонки\"\n            }, null, 8, [\"modelValue\", \"options\"])\n          ]),\n          expansion: _withCtx((slotProps) => [\n            _createElementVNode(\"div\", null, [\n              _createElementVNode(\"h4\", _hoisted_7, \"Участники группы \" + _toDisplayString(slotProps.data.abbreviation), 1),\n              (slotProps.data.users?.length !== 0)\n                ? (_openBlock(), _createBlock(_component_DataTable, {\n                    key: 0,\n                    filters: _unref(filtersExpandedUsers),\n                    \"onUpdate:filters\": _cache[3] || (_cache[3] = ($event: any) => (_isRef(filtersExpandedUsers) ? (filtersExpandedUsers).value = $event : null)),\n                    filterDisplay: \"row\",\n                    globalFilterFields: ['fullname'],\n                    value: slotProps.data.users,\n                    paginator: true,\n                    rows: 20,\n                    paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n                    rowsPerPageOptions: [20,40,80],\n                    currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_Column, {\n                        field: \"fullname\",\n                        header: \"ФИО\"\n                      }, {\n                        body: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data.fullname), 1)\n                        ]),\n                        filter: _withCtx(({ filterModel, filterCallback }) => [\n                          _createVNode(_component_InputText, {\n                            modelValue: filterModel.value,\n                            \"onUpdate:modelValue\": ($event: any) => ((filterModel.value) = $event),\n                            type: \"text\",\n                            onInput: ($event: any) => (filterCallback()),\n                            class: \"p-column-filter\",\n                            placeholder: \"Поиск по имени\"\n                          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onInput\"])\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        field: \"email\",\n                        header: \"Почта\"\n                      }, {\n                        body: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data.email), 1)\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        field: \"username\",\n                        header: \"Логин\"\n                      }, {\n                        body: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data.username), 1)\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        exportable: false,\n                        style: {\"width\":\"2rem\"}\n                      }, {\n                        body: _withCtx((slotProps) => [\n                          _createVNode(_component_Button, {\n                            icon: \"pi pi-trash\",\n                            outlined: \"\",\n                            rounded: \"\",\n                            severity: \"danger\",\n                            onClick: ($event: any) => (removeUserFromGroup(slotProps.data.group_id, [slotProps.data.id]))\n                          }, null, 8, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1032, [\"filters\", \"value\"]))\n                : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          default: _withCtx(() => [\n            _createVNode(_component_Column, {\n              expander: \"\",\n              style: {\"width\":\"3rem\"}\n            }),\n            _createVNode(_component_Column, {\n              selectionMode: \"multiple\",\n              style: {\"width\":\"3rem\"},\n              exportable: false\n            }),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(selectedColumns), (col, index) => {\n              return (_openBlock(), _createBlock(_component_Column, {\n                sortable: \"\",\n                field: col.field,\n                header: col.header,\n                key: col.field + '_' + index\n              }, null, 8, [\"field\", \"header\"]))\n            }), 128)),\n            _createVNode(_component_Column, {\n              exportable: false,\n              style: {\"min-width\":\"8rem\"}\n            }, {\n              body: _withCtx((slotProps) => [\n                _createVNode(_component_Button, {\n                  icon: \"pi pi-pencil\",\n                  outlined: \"\",\n                  rounded: \"\",\n                  class: \"mr-2\",\n                  onClick: ($event: any) => (editGroup(slotProps.data))\n                }, null, 8, [\"onClick\"]),\n                _createVNode(_component_Button, {\n                  icon: \"pi pi-trash\",\n                  outlined: \"\",\n                  rounded: \"\",\n                  severity: \"danger\",\n                  onClick: ($event: any) => (confirmDeleteGroup(slotProps.data))\n                }, null, 8, [\"onClick\"])\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }, 8, [\"expandedRows\", \"value\", \"selection\", \"loading\", \"filters\"])\n      ]),\n      _createElementVNode(\"div\", null, [\n        _hoisted_8,\n        _createElementVNode(\"div\", _hoisted_9, [\n          _createVNode(_component_Toolbar, { class: \"mb-4\" }, {\n            start: _withCtx(() => [\n              _createVNode(_component_Button, {\n                label: \"Добавить\",\n                icon: \"pi pi-plus\",\n                severity: \"success\",\n                onClick: confirmAddSelectedUserToGroup,\n                disabled: !_unref(selectedUsers) || !_unref(selectedUsers).length || !_unref(group).id\n              }, null, 8, [\"disabled\"])\n            ]),\n            end: _withCtx(() => [\n              _createVNode(_component_Dropdown, {\n                modelValue: _unref(group),\n                \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => (_isRef(group) ? (group).value = $event : null)),\n                options: _unref(groups),\n                filter: \"\",\n                optionLabel: \"abbreviation\",\n                placeholder: \"Выберите группу\",\n                class: \"w-full md:w-14rem\"\n              }, {\n                value: _withCtx((slotProps) => [\n                  (slotProps.value.abbreviation)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                        _createElementVNode(\"div\", null, _toDisplayString(slotProps.value.abbreviation), 1)\n                      ]))\n                    : (_openBlock(), _createElementBlock(\"span\", _hoisted_11, _toDisplayString(slotProps.placeholder), 1))\n                ]),\n                option: _withCtx((slotProps) => [\n                  _createElementVNode(\"div\", _hoisted_12, [\n                    _createElementVNode(\"div\", null, _toDisplayString(slotProps.option.full_name), 1),\n                    _createElementVNode(\"div\", null, _toDisplayString(slotProps.option.abbreviation), 1)\n                  ])\n                ]),\n                _: 1\n              }, 8, [\"modelValue\", \"options\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_DataTable, {\n            ref_key: \"dt\",\n            ref: dt,\n            value: _unref(users),\n            selection: _unref(selectedUsers),\n            \"onUpdate:selection\": _cache[9] || (_cache[9] = ($event: any) => (_isRef(selectedUsers) ? (selectedUsers).value = $event : null)),\n            dataKey: \"id\",\n            loading: _unref(loading),\n            style: {\"max-width\":\"1500px\"},\n            tableStyle: \"min-width: 60rem\",\n            showGridlines: \"\",\n            resizableColumns: \"\",\n            columnResizeMode: \"fit\",\n            paginator: true,\n            rows: 10,\n            filters: _unref(filtersUserTable),\n            paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n            rowsPerPageOptions: [10,25,50],\n            currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n          }, {\n            header: _withCtx(() => [\n              _createElementVNode(\"div\", _hoisted_13, [\n                _createElementVNode(\"div\", _hoisted_14, [\n                  _hoisted_15,\n                  _createVNode(_component_Button, {\n                    icon: \"pi pi-refresh\",\n                    rounded: \"\",\n                    raised: \"\",\n                    onClick: getUsers\n                  })\n                ]),\n                _createVNode(_component_IconField, { iconPosition: \"left\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_InputIcon, null, {\n                      default: _withCtx(() => [\n                        _hoisted_16\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_InputText, {\n                      modelValue: _unref(filtersUserTable)['global'].value,\n                      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_unref(filtersUserTable)['global'].value) = $event)),\n                      placeholder: \"Поиск...\"\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _createVNode(_component_MultiSelect, {\n                modelValue: _unref(selectedColumnsUser),\n                \"onUpdate:modelValue\": [\n                  _cache[8] || (_cache[8] = ($event: any) => (_isRef(selectedColumnsUser) ? (selectedColumnsUser).value = $event : null)),\n                  onToggleColumns\n                ],\n                options: _unref(columnsUser),\n                optionLabel: \"header\",\n                display: \"chip\",\n                placeholder: \"Выберите колонки\"\n              }, null, 8, [\"modelValue\", \"options\"])\n            ]),\n            empty: _withCtx(() => [\n              _createTextVNode(\" Пользователи не найдены\")\n            ]),\n            default: _withCtx(() => [\n              _createVNode(_component_Column, {\n                selectionMode: \"multiple\",\n                style: {\"width\":\"3rem\"},\n                exportable: false\n              }),\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(selectedColumnsUser), (col, index) => {\n                return (_openBlock(), _createBlock(_component_Column, {\n                  sortable: \"\",\n                  field: col.field,\n                  header: col.header,\n                  key: col.field + '_' + index\n                }, _createSlots({ _: 2 }, [\n                  (col.field !== 'groups' && col.field !== 'role.name')\n                    ? {\n                        name: \"body\",\n                        fn: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data[col.field]), 1)\n                        ]),\n                        key: \"0\"\n                      }\n                    : (col.field === 'role.name')\n                      ? {\n                          name: \"body\",\n                          fn: _withCtx((slotProps) => [\n                            _createTextVNode(_toDisplayString(slotProps.data.role.name), 1)\n                          ]),\n                          key: \"1\"\n                        }\n                      : (col.field === 'groups')\n                        ? {\n                            name: \"body\",\n                            fn: _withCtx((slotProps) => [\n                              _createTextVNode(_toDisplayString(_unref(getGroupFullNames)(slotProps.data.groups)), 1)\n                            ]),\n                            key: \"2\"\n                          }\n                        : undefined\n                ]), 1032, [\"field\", \"header\"]))\n              }), 128)),\n              _createVNode(_component_Column, {\n                exportable: false,\n                style: {\"min-width\":\"8rem\"}\n              }, {\n                body: _withCtx((slotProps) => [\n                  _createVNode(_component_Button, {\n                    icon: \"pi pi-plus\",\n                    outlined: \"\",\n                    rounded: \"\",\n                    class: \"mr-2\",\n                    severity: \"success\",\n                    disabled: !_unref(group).id,\n                    onClick: ($event: any) => (addUserToGroup(_unref(group).id, [slotProps.data.id]))\n                  }, null, 8, [\"disabled\", \"onClick\"]),\n                  _createVNode(_component_Button, {\n                    icon: \"pi pi-trash\",\n                    outlined: \"\",\n                    rounded: \"\",\n                    severity: \"danger\",\n                    disabled: isGroupInDataGroups(_unref(group).id, slotProps.data.groups),\n                    onClick: ($event: any) => (removeUserFromGroup(_unref(group).id, [slotProps.data.id]))\n                  }, null, 8, [\"disabled\", \"onClick\"])\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }, 8, [\"value\", \"selection\", \"loading\", \"filters\"])\n        ])\n      ])\n    ]),\n    _createVNode(_component_Dialog, {\n      visible: _unref(groupDialog),\n      \"onUpdate:visible\": _cache[12] || (_cache[12] = ($event: any) => (_isRef(groupDialog) ? (groupDialog).value = $event : null)),\n      style: {width: '450px'},\n      header: \"Сведения о группе\",\n      modal: true,\n      class: \"p-fluid\"\n    }, {\n      footer: _withCtx(() => [\n        _createVNode(_component_Button, {\n          label: \"Отмена\",\n          icon: \"pi pi-times\",\n          text: \"\",\n          onClick: hideDialog\n        }),\n        _createVNode(_component_Button, {\n          label: \"Сохранить\",\n          icon: \"pi pi-check\",\n          text: \"\",\n          onClick: saveGroup\n        })\n      ]),\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_17, [\n          _hoisted_18,\n          _createVNode(_component_InputText, {\n            class: \"mt-2\",\n            id: \"full_name\",\n            modelValue: _unref(group).full_name,\n            \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((_unref(group).full_name) = $event)),\n            modelModifiers: { trim: true },\n            required: \"\",\n            invalid: _unref(submitted) && !_unref(group).full_name\n          }, null, 8, [\"modelValue\", \"invalid\"]),\n          (_unref(submitted) && !_unref(group).full_name)\n            ? (_openBlock(), _createElementBlock(\"small\", _hoisted_19, \"Полное название обязательно для заполнения.\"))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _createElementVNode(\"div\", _hoisted_20, [\n          _hoisted_21,\n          _createVNode(_component_InputText, {\n            class: \"mt-2\",\n            id: \"abbreviation\",\n            modelValue: _unref(group).abbreviation,\n            \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((_unref(group).abbreviation) = $event)),\n            modelModifiers: { trim: true },\n            required: \"\",\n            invalid: _unref(submitted) && !_unref(group).abbreviation\n          }, null, 8, [\"modelValue\", \"invalid\"]),\n          (_unref(submitted) && !_unref(group).abbreviation)\n            ? (_openBlock(), _createElementBlock(\"small\", _hoisted_22, \"Аббревиатура обязательна для заполнения.\"))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _: 1\n    }, 8, [\"visible\"]),\n    _createVNode(_component_Dialog, {\n      visible: _unref(deleteGroupDialog),\n      \"onUpdate:visible\": _cache[14] || (_cache[14] = ($event: any) => (_isRef(deleteGroupDialog) ? (deleteGroupDialog).value = $event : null)),\n      style: {width: '500px'},\n      header: \"Подтверждение\",\n      modal: true\n    }, {\n      footer: _withCtx(() => [\n        _createVNode(_component_Button, {\n          label: \"Нет\",\n          icon: \"pi pi-times\",\n          text: \"\",\n          onClick: _cache[13] || (_cache[13] = ($event: any) => (deleteGroupDialog.value = false))\n        }),\n        _createVNode(_component_Button, {\n          label: \"Да\",\n          icon: \"pi pi-check\",\n          text: \"\",\n          onClick: deleteGroup\n        })\n      ]),\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_23, [\n          _hoisted_24,\n          (_unref(group))\n            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_25, [\n                _createTextVNode(\"Вы действительно хотите удалить группу \"),\n                _createElementVNode(\"b\", null, _toDisplayString(_unref(group).full_name), 1)\n              ]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _: 1\n    }, 8, [\"visible\"]),\n    _createVNode(_component_Dialog, {\n      visible: _unref(deleteGroupsDialog),\n      \"onUpdate:visible\": _cache[16] || (_cache[16] = ($event: any) => (_isRef(deleteGroupsDialog) ? (deleteGroupsDialog).value = $event : null)),\n      style: {width: '450px'},\n      header: \"Подтверждение\",\n      modal: true\n    }, {\n      footer: _withCtx(() => [\n        _createVNode(_component_Button, {\n          label: \"Нет\",\n          icon: \"pi pi-times\",\n          text: \"\",\n          onClick: _cache[15] || (_cache[15] = ($event: any) => (deleteGroupsDialog.value = false))\n        }),\n        _createVNode(_component_Button, {\n          label: \"Да\",\n          icon: \"pi pi-check\",\n          text: \"\",\n          onClick: deleteSelectedGroups\n        })\n      ]),\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_26, [\n          _hoisted_27,\n          (_unref(group))\n            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, \"Вы действительно хотите удалить выделенные группы?\"))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _: 1\n    }, 8, [\"visible\"])\n  ], 64))\n}\n}\n\n})",
      "start": 1715794732572,
      "end": 1715794732572
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1715794732572,
      "end": 1715794732572,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1715794732572,
      "end": 1715794732572,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1715794732572,
      "end": 1715794732573,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1715794732573,
      "end": 1715794732573,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, unref as _unref, withCtx as _withCtx, createElementVNode as _createElementVNode, isRef as _isRef, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, createSlots as _createSlots, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-8c1ca0b2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"main-content flex-col\" };\nconst _hoisted_2 = { class: \"card\" };\nconst _hoisted_3 = { class: \"flex flex-wrap gap-3 items-center justify-between mb-3\" };\nconst _hoisted_4 = { class: \"flex items-center gap-3\" };\nconst _hoisted_5 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"h4\", { class: \"m-0 text-xl text-900 font-bold\" }, \"Управление группами\", -1));\nconst _hoisted_6 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1));\nconst _hoisted_7 = { class: \"m-0 mb-2\" };\nconst _hoisted_8 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"h2\", null, \"Присоединение к группе\", -1));\nconst _hoisted_9 = { class: \"card\" };\nconst _hoisted_10 = {\n  key: 0,\n  class: \"flex align-items-center\"\n};\nconst _hoisted_11 = { key: 1 };\nconst _hoisted_12 = { class: \"flex flex-col justify-center flex-wrap\" };\nconst _hoisted_13 = { class: \"flex flex-wrap gap-3 items-center justify-between mb-3\" };\nconst _hoisted_14 = { class: \"flex items-center gap-3\" };\nconst _hoisted_15 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"h4\", { class: \"m-0 text-xl text-900 font-bold\" }, \"Пользователи\", -1));\nconst _hoisted_16 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1));\nconst _hoisted_17 = { class: \"field my-3\" };\nconst _hoisted_18 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"label\", { for: \"full_name\" }, \"Полное название\", -1));\nconst _hoisted_19 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_20 = { class: \"field my-3\" };\nconst _hoisted_21 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"label\", { for: \"abbreviation\" }, \"Аббревиатура\", -1));\nconst _hoisted_22 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_23 = { class: \"confirmation-content p-3\" };\nconst _hoisted_24 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", {\n  class: \"pi pi-exclamation-triangle mr-3\",\n  style: { \"font-size\": \"2rem\" }\n}, null, -1));\nconst _hoisted_25 = { key: 0 };\nconst _hoisted_26 = { class: \"confirmation-content p-3\" };\nconst _hoisted_27 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", {\n  class: \"pi pi-exclamation-triangle mr-3\",\n  style: { \"font-size\": \"2rem\" }\n}, null, -1));\nconst _hoisted_28 = { key: 0 };\nimport {\n  createGroup,\n  deleteGroups,\n  updateGroup,\n  deleteGroupUser,\n  formatGroupDates,\n  getGroupFullNames,\n  addUsersToGroup,\n  fetchGroupsWithUsers\n} from \"~/helpers/groups\";\nimport { FilterMatchMode } from \"primevue/api\";\nimport { fetchUsers } from \"~/helpers/user\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"index\",\n  setup(__props) {\n    definePageMeta({\n      layout: \"home\",\n      middleware: [\n        \"admin\"\n      ]\n    });\n    useHead({\n      title: \"Администрирование групп\"\n    });\n    const runtimeConfig = useRuntimeConfig();\n    const nuxtApp = useNuxtApp();\n    const router = useRouter();\n    const loading = ref(true);\n    const toast = useToast();\n    const dt = ref();\n    const groups = ref();\n    const groupDialog = ref(false);\n    const deleteGroupDialog = ref(false);\n    const deleteGroupsDialog = ref(false);\n    const group = ref({});\n    const selectedGroups = ref();\n    const filters = ref({\n      \"global\": { value: null, matchMode: FilterMatchMode.CONTAINS }\n    });\n    const filtersUserTable = ref({\n      \"global\": { value: null, matchMode: FilterMatchMode.CONTAINS }\n    });\n    const filtersExpandedUsers = ref({\n      \"fullname\": { value: null, matchMode: FilterMatchMode.CONTAINS }\n    });\n    const submitted = ref(false);\n    const roles = ref([]);\n    const statuses = ref([\n      { label: \"ACTIVE\", value: \"active\" },\n      { label: \"INACTIVE\", value: \"inactive\" },\n      { label: \"BLOCKED\", value: \"blocked\" }\n    ]);\n    const columns = ref([\n      { field: \"full_name\", header: \"Наименование\" },\n      { field: \"abbreviation\", header: \"Аббревиатура\" },\n      { field: \"create_at\", header: \"Дата создания\" },\n      { field: \"updated_at\", header: \"Дата обновления\" }\n    ]);\n    const selectedColumns = ref(columns.value.filter((column) => column.field !== \"updated_at\"));\n    const expandedRows = ref({});\n    const selectedUsers = ref();\n    const users = ref();\n    const columnsUser = ref([\n      { field: \"email\", header: \"Почта\" },\n      { field: \"fullname\", header: \"ФИО\" },\n      { field: \"username\", header: \"Логин\" },\n      { field: \"about\", header: \"Описание\" },\n      { field: \"role.name\", header: \"Роль\" },\n      { field: \"groups\", header: \"Группы\" }\n    ]);\n    const selectedColumnsUser = ref(columnsUser.value.filter((column) => column.field !== \"about\"));\n    const openNew = () => {\n      group.value = {};\n      submitted.value = false;\n      groupDialog.value = true;\n    };\n    const hideDialog = () => {\n      groupDialog.value = false;\n      submitted.value = false;\n    };\n    const saveGroup = () => {\n      submitted.value = true;\n      if (group?.value.full_name?.trim()) {\n        if (group.value.id) {\n          console.log(group.value.id, group.value);\n          updateGroup(group.value.id, group.value).then((data) => {\n            groups.value[findIndexById(group.value.id)] = data;\n            toast.add({ severity: \"success\", summary: \"Successful\", detail: \"group Updated\", life: 3e3 });\n            groupDialog.value = false;\n            group.value = {};\n            getGroups();\n          }).catch((error) => console.error(\"Error updating group:\", error));\n        } else {\n          createGroup(group.value).then((data) => {\n            groups.value.push(data);\n            toast.add({ severity: \"success\", summary: \"Successful\", detail: \"group Created\", life: 3e3 });\n          }).catch((error) => console.error(\"Error creating group:\", error));\n        }\n        groupDialog.value = false;\n        group.value = {};\n      }\n    };\n    const editGroup = (usr) => {\n      group.value = { ...usr };\n      groupDialog.value = true;\n      console.log(group);\n    };\n    const confirmDeleteGroup = (usr) => {\n      group.value = usr;\n      deleteGroupDialog.value = true;\n    };\n    const deleteGroup = () => {\n      deleteGroups([group.value.id]).then((data) => {\n        groups.value = groups.value.filter((val) => val.id !== group.value.id);\n        deleteGroupDialog.value = false;\n        group.value = {};\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Группа удалена\", life: 3e3 });\n      }).catch((error) => console.error(\"Error delete group:\", error));\n    };\n    const removeUserFromGroup = (groupId, userIds) => {\n      deleteGroupUser(groupId, userIds).then(() => {\n        getGroups();\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Пользователь удален из группы\", life: 3e3 });\n      }).catch((error) => console.error(\"Ошибка удаления пользователя из группы:\", error)).finally(getUsers);\n    };\n    const addUserToGroup = (groupId, userIds) => {\n      addUsersToGroup(groupId, userIds).then(() => {\n        getGroups();\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Пользователь добавлен в группу\", life: 3e3 });\n      }).catch((error) => console.error(\"Ошибка добавления пользователя в группу:\", error));\n    };\n    const findIndexById = (id) => {\n      let index = -1;\n      for (let i = 0; i < groups.value.length; i++) {\n        if (groups.value[i].id === id) {\n          index = i;\n          break;\n        }\n      }\n      return index;\n    };\n    const createId = () => {\n      let id = \"\";\n      var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n      for (var i = 0; i < 5; i++) {\n        id += chars.charAt(Math.floor(Math.random() * chars.length));\n      }\n      return id;\n    };\n    const exportCSV = () => {\n      dt.value.exportCSV();\n    };\n    const confirmDeleteSelected = () => {\n      deleteGroupsDialog.value = true;\n    };\n    const confirmAddSelectedUserToGroup = () => {\n      console.log(selectedUsers.value);\n      addUserToGroup(group.value.id, selectedUsers.value.map((user) => user.id));\n      selectedUsers.value = null;\n    };\n    const deleteSelectedGroups = () => {\n      deleteGroups(selectedGroups.value.map((group2) => group2.id)).then((data) => {\n        groups.value = groups.value.filter((val) => !selectedGroups.value.includes(val));\n        deleteGroupsDialog.value = false;\n        selectedGroups.value = null;\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Пользователи удалены\", life: 3e3 });\n      }).catch((error) => console.error(\"Error delete groups:\", error));\n    };\n    const isGroupInDataGroups = (groupId, groups2) => {\n      if (!groupId) {\n        return true;\n      }\n      const hasValidGroupId = groups2.some((group2) => {\n        return group2?.id === groupId || group2?.children?.some((child) => child?.id === groupId);\n      });\n      return !hasValidGroupId;\n    };\n    const onToggleColumns = (val) => {\n      selectedColumns.value = columns.value.filter((col) => val.includes(col));\n    };\n    const onRowExpand = (event) => {\n      toast.add({ severity: \"info\", summary: \"Product Expanded\", detail: event.data.name, life: 3e3 });\n    };\n    const onRowCollapse = (event) => {\n      toast.add({ severity: \"success\", summary: \"Product Collapsed\", detail: event.data.name, life: 3e3 });\n    };\n    function getGroups() {\n      fetchGroupsWithUsers().then((data) => {\n        data.forEach((group2) => {\n          if (group2.users) {\n            group2.users.forEach((user) => {\n              user.fullname = `${user.last_name} ${user.first_name} ${user.middle_name}`;\n              user.group_id = group2.id;\n            });\n          }\n        });\n        groups.value = data.map((group2) => ({\n          ...group2\n        }));\n        groups.value = formatGroupDates(groups.value);\n        console.log(groups.value);\n        loading.value = false;\n      }).catch((error) => console.error(\"Error fetching groups:\", error));\n    }\n    function getUsers() {\n      loading.value = true;\n      fetchUsers().then((data) => {\n        users.value = data.map((user) => ({\n          ...user,\n          fullname: `${user.last_name} ${user.first_name} ${user.middle_name}`\n        }));\n        loading.value = false;\n      }).catch((error) => console.error(\"Error fetching users:\", error)).finally(() => {\n        loading.value = false;\n      });\n    }\n    onMounted(() => {\n      getGroups();\n      getUsers();\n    });\n    return (_ctx, _cache) => {\n      const _component_Toast = _resolveComponent(\"Toast\");\n      const _component_Button = _resolveComponent(\"Button\");\n      const _component_FileUpload = _resolveComponent(\"FileUpload\");\n      const _component_Toolbar = _resolveComponent(\"Toolbar\");\n      const _component_InputIcon = _resolveComponent(\"InputIcon\");\n      const _component_InputText = _resolveComponent(\"InputText\");\n      const _component_IconField = _resolveComponent(\"IconField\");\n      const _component_MultiSelect = _resolveComponent(\"MultiSelect\");\n      const _component_Column = _resolveComponent(\"Column\");\n      const _component_DataTable = _resolveComponent(\"DataTable\");\n      const _component_Dropdown = _resolveComponent(\"Dropdown\");\n      const _component_Dialog = _resolveComponent(\"Dialog\");\n      return _openBlock(), _createElementBlock(_Fragment, null, [\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createVNode(_component_Toast),\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createVNode(_component_Toolbar, { class: \"mb-4\" }, {\n              start: _withCtx(() => [\n                _createVNode(_component_Button, {\n                  label: \"Добавить\",\n                  icon: \"pi pi-plus\",\n                  severity: \"success\",\n                  class: \"mr-2\",\n                  onClick: openNew\n                }),\n                _createVNode(_component_Button, {\n                  label: \"Удалить\",\n                  icon: \"pi pi-trash\",\n                  severity: \"danger\",\n                  onClick: confirmDeleteSelected,\n                  disabled: !_unref(selectedGroups) || !_unref(selectedGroups).length\n                }, null, 8, [\"disabled\"])\n              ]),\n              end: _withCtx(() => [\n                _createVNode(_component_FileUpload, {\n                  mode: \"basic\",\n                  accept: \"image/*\",\n                  maxFileSize: 1e6,\n                  label: \"Import\",\n                  chooseLabel: \"Импорт\",\n                  class: \"mr-2 inline-block\"\n                }),\n                _createVNode(_component_Button, {\n                  label: \"Экспорт\",\n                  icon: \"pi pi-upload\",\n                  severity: \"help\",\n                  onClick: _cache[0] || (_cache[0] = ($event) => exportCSV($event))\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_DataTable, {\n              ref_key: \"dt\",\n              ref: dt,\n              expandedRows: _unref(expandedRows),\n              \"onUpdate:expandedRows\": _cache[4] || (_cache[4] = ($event) => _isRef(expandedRows) ? expandedRows.value = $event : null),\n              value: _unref(groups),\n              selection: _unref(selectedGroups),\n              \"onUpdate:selection\": _cache[5] || (_cache[5] = ($event) => _isRef(selectedGroups) ? selectedGroups.value = $event : null),\n              dataKey: \"id\",\n              style: { \"max-width\": \"1500px\" },\n              loading: _unref(loading),\n              onRowExpand,\n              onRowCollapse,\n              showGridlines: \"\",\n              resizableColumns: \"\",\n              columnResizeMode: \"fit\",\n              paginator: true,\n              rows: 10,\n              filters: _unref(filters),\n              paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n              rowsPerPageOptions: [10, 25, 50],\n              currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n            }, {\n              header: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  _createElementVNode(\"div\", _hoisted_4, [\n                    _hoisted_5,\n                    _createVNode(_component_Button, {\n                      icon: \"pi pi-refresh\",\n                      rounded: \"\",\n                      raised: \"\",\n                      onClick: getGroups\n                    })\n                  ]),\n                  _createVNode(_component_IconField, { iconPosition: \"left\" }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_InputIcon, null, {\n                        default: _withCtx(() => [\n                          _hoisted_6\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_InputText, {\n                        modelValue: _unref(filters)[\"global\"].value,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event) => _unref(filters)[\"global\"].value = $event),\n                        placeholder: \"Поиск...\"\n                      }, null, 8, [\"modelValue\"])\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _createVNode(_component_MultiSelect, {\n                  modelValue: _unref(selectedColumns),\n                  \"onUpdate:modelValue\": [\n                    _cache[2] || (_cache[2] = ($event) => _isRef(selectedColumns) ? selectedColumns.value = $event : null),\n                    onToggleColumns\n                  ],\n                  options: _unref(columns),\n                  optionLabel: \"header\",\n                  display: \"chip\",\n                  placeholder: \"Выберите колонки\"\n                }, null, 8, [\"modelValue\", \"options\"])\n              ]),\n              expansion: _withCtx((slotProps) => [\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"h4\", _hoisted_7, \"Участники группы \" + _toDisplayString(slotProps.data.abbreviation), 1),\n                  slotProps.data.users?.length !== 0 ? (_openBlock(), _createBlock(_component_DataTable, {\n                    key: 0,\n                    filters: _unref(filtersExpandedUsers),\n                    \"onUpdate:filters\": _cache[3] || (_cache[3] = ($event) => _isRef(filtersExpandedUsers) ? filtersExpandedUsers.value = $event : null),\n                    filterDisplay: \"row\",\n                    globalFilterFields: [\"fullname\"],\n                    value: slotProps.data.users,\n                    paginator: true,\n                    rows: 20,\n                    paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n                    rowsPerPageOptions: [20, 40, 80],\n                    currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_Column, {\n                        field: \"fullname\",\n                        header: \"ФИО\"\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createTextVNode(_toDisplayString(slotProps2.data.fullname), 1)\n                        ]),\n                        filter: _withCtx(({ filterModel, filterCallback }) => [\n                          _createVNode(_component_InputText, {\n                            modelValue: filterModel.value,\n                            \"onUpdate:modelValue\": ($event) => filterModel.value = $event,\n                            type: \"text\",\n                            onInput: ($event) => filterCallback(),\n                            class: \"p-column-filter\",\n                            placeholder: \"Поиск по имени\"\n                          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onInput\"])\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        field: \"email\",\n                        header: \"Почта\"\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createTextVNode(_toDisplayString(slotProps2.data.email), 1)\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        field: \"username\",\n                        header: \"Логин\"\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createTextVNode(_toDisplayString(slotProps2.data.username), 1)\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        exportable: false,\n                        style: { \"width\": \"2rem\" }\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createVNode(_component_Button, {\n                            icon: \"pi pi-trash\",\n                            outlined: \"\",\n                            rounded: \"\",\n                            severity: \"danger\",\n                            onClick: ($event) => removeUserFromGroup(slotProps2.data.group_id, [slotProps2.data.id])\n                          }, null, 8, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1032, [\"filters\", \"value\"])) : _createCommentVNode(\"\", true)\n                ])\n              ]),\n              default: _withCtx(() => [\n                _createVNode(_component_Column, {\n                  expander: \"\",\n                  style: { \"width\": \"3rem\" }\n                }),\n                _createVNode(_component_Column, {\n                  selectionMode: \"multiple\",\n                  style: { \"width\": \"3rem\" },\n                  exportable: false\n                }),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(selectedColumns), (col, index) => {\n                  return _openBlock(), _createBlock(_component_Column, {\n                    sortable: \"\",\n                    field: col.field,\n                    header: col.header,\n                    key: col.field + \"_\" + index\n                  }, null, 8, [\"field\", \"header\"]);\n                }), 128)),\n                _createVNode(_component_Column, {\n                  exportable: false,\n                  style: { \"min-width\": \"8rem\" }\n                }, {\n                  body: _withCtx((slotProps) => [\n                    _createVNode(_component_Button, {\n                      icon: \"pi pi-pencil\",\n                      outlined: \"\",\n                      rounded: \"\",\n                      class: \"mr-2\",\n                      onClick: ($event) => editGroup(slotProps.data)\n                    }, null, 8, [\"onClick\"]),\n                    _createVNode(_component_Button, {\n                      icon: \"pi pi-trash\",\n                      outlined: \"\",\n                      rounded: \"\",\n                      severity: \"danger\",\n                      onClick: ($event) => confirmDeleteGroup(slotProps.data)\n                    }, null, 8, [\"onClick\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }, 8, [\"expandedRows\", \"value\", \"selection\", \"loading\", \"filters\"])\n          ]),\n          _createElementVNode(\"div\", null, [\n            _hoisted_8,\n            _createElementVNode(\"div\", _hoisted_9, [\n              _createVNode(_component_Toolbar, { class: \"mb-4\" }, {\n                start: _withCtx(() => [\n                  _createVNode(_component_Button, {\n                    label: \"Добавить\",\n                    icon: \"pi pi-plus\",\n                    severity: \"success\",\n                    onClick: confirmAddSelectedUserToGroup,\n                    disabled: !_unref(selectedUsers) || !_unref(selectedUsers).length || !_unref(group).id\n                  }, null, 8, [\"disabled\"])\n                ]),\n                end: _withCtx(() => [\n                  _createVNode(_component_Dropdown, {\n                    modelValue: _unref(group),\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event) => _isRef(group) ? group.value = $event : null),\n                    options: _unref(groups),\n                    filter: \"\",\n                    optionLabel: \"abbreviation\",\n                    placeholder: \"Выберите группу\",\n                    class: \"w-full md:w-14rem\"\n                  }, {\n                    value: _withCtx((slotProps) => [\n                      slotProps.value.abbreviation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                        _createElementVNode(\"div\", null, _toDisplayString(slotProps.value.abbreviation), 1)\n                      ])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_11, _toDisplayString(slotProps.placeholder), 1))\n                    ]),\n                    option: _withCtx((slotProps) => [\n                      _createElementVNode(\"div\", _hoisted_12, [\n                        _createElementVNode(\"div\", null, _toDisplayString(slotProps.option.full_name), 1),\n                        _createElementVNode(\"div\", null, _toDisplayString(slotProps.option.abbreviation), 1)\n                      ])\n                    ]),\n                    _: 1\n                  }, 8, [\"modelValue\", \"options\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_DataTable, {\n                ref_key: \"dt\",\n                ref: dt,\n                value: _unref(users),\n                selection: _unref(selectedUsers),\n                \"onUpdate:selection\": _cache[9] || (_cache[9] = ($event) => _isRef(selectedUsers) ? selectedUsers.value = $event : null),\n                dataKey: \"id\",\n                loading: _unref(loading),\n                style: { \"max-width\": \"1500px\" },\n                tableStyle: \"min-width: 60rem\",\n                showGridlines: \"\",\n                resizableColumns: \"\",\n                columnResizeMode: \"fit\",\n                paginator: true,\n                rows: 10,\n                filters: _unref(filtersUserTable),\n                paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n                rowsPerPageOptions: [10, 25, 50],\n                currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n              }, {\n                header: _withCtx(() => [\n                  _createElementVNode(\"div\", _hoisted_13, [\n                    _createElementVNode(\"div\", _hoisted_14, [\n                      _hoisted_15,\n                      _createVNode(_component_Button, {\n                        icon: \"pi pi-refresh\",\n                        rounded: \"\",\n                        raised: \"\",\n                        onClick: getUsers\n                      })\n                    ]),\n                    _createVNode(_component_IconField, { iconPosition: \"left\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_InputIcon, null, {\n                          default: _withCtx(() => [\n                            _hoisted_16\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_InputText, {\n                          modelValue: _unref(filtersUserTable)[\"global\"].value,\n                          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event) => _unref(filtersUserTable)[\"global\"].value = $event),\n                          placeholder: \"Поиск...\"\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _createVNode(_component_MultiSelect, {\n                    modelValue: _unref(selectedColumnsUser),\n                    \"onUpdate:modelValue\": [\n                      _cache[8] || (_cache[8] = ($event) => _isRef(selectedColumnsUser) ? selectedColumnsUser.value = $event : null),\n                      onToggleColumns\n                    ],\n                    options: _unref(columnsUser),\n                    optionLabel: \"header\",\n                    display: \"chip\",\n                    placeholder: \"Выберите колонки\"\n                  }, null, 8, [\"modelValue\", \"options\"])\n                ]),\n                empty: _withCtx(() => [\n                  _createTextVNode(\" Пользователи не найдены\")\n                ]),\n                default: _withCtx(() => [\n                  _createVNode(_component_Column, {\n                    selectionMode: \"multiple\",\n                    style: { \"width\": \"3rem\" },\n                    exportable: false\n                  }),\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(selectedColumnsUser), (col, index) => {\n                    return _openBlock(), _createBlock(_component_Column, {\n                      sortable: \"\",\n                      field: col.field,\n                      header: col.header,\n                      key: col.field + \"_\" + index\n                    }, _createSlots({ _: 2 }, [\n                      col.field !== \"groups\" && col.field !== \"role.name\" ? {\n                        name: \"body\",\n                        fn: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data[col.field]), 1)\n                        ]),\n                        key: \"0\"\n                      } : col.field === \"role.name\" ? {\n                        name: \"body\",\n                        fn: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data.role.name), 1)\n                        ]),\n                        key: \"1\"\n                      } : col.field === \"groups\" ? {\n                        name: \"body\",\n                        fn: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(_unref(getGroupFullNames)(slotProps.data.groups)), 1)\n                        ]),\n                        key: \"2\"\n                      } : void 0\n                    ]), 1032, [\"field\", \"header\"]);\n                  }), 128)),\n                  _createVNode(_component_Column, {\n                    exportable: false,\n                    style: { \"min-width\": \"8rem\" }\n                  }, {\n                    body: _withCtx((slotProps) => [\n                      _createVNode(_component_Button, {\n                        icon: \"pi pi-plus\",\n                        outlined: \"\",\n                        rounded: \"\",\n                        class: \"mr-2\",\n                        severity: \"success\",\n                        disabled: !_unref(group).id,\n                        onClick: ($event) => addUserToGroup(_unref(group).id, [slotProps.data.id])\n                      }, null, 8, [\"disabled\", \"onClick\"]),\n                      _createVNode(_component_Button, {\n                        icon: \"pi pi-trash\",\n                        outlined: \"\",\n                        rounded: \"\",\n                        severity: \"danger\",\n                        disabled: isGroupInDataGroups(_unref(group).id, slotProps.data.groups),\n                        onClick: ($event) => removeUserFromGroup(_unref(group).id, [slotProps.data.id])\n                      }, null, 8, [\"disabled\", \"onClick\"])\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              }, 8, [\"value\", \"selection\", \"loading\", \"filters\"])\n            ])\n          ])\n        ]),\n        _createVNode(_component_Dialog, {\n          visible: _unref(groupDialog),\n          \"onUpdate:visible\": _cache[12] || (_cache[12] = ($event) => _isRef(groupDialog) ? groupDialog.value = $event : null),\n          style: { width: \"450px\" },\n          header: \"Сведения о группе\",\n          modal: true,\n          class: \"p-fluid\"\n        }, {\n          footer: _withCtx(() => [\n            _createVNode(_component_Button, {\n              label: \"Отмена\",\n              icon: \"pi pi-times\",\n              text: \"\",\n              onClick: hideDialog\n            }),\n            _createVNode(_component_Button, {\n              label: \"Сохранить\",\n              icon: \"pi pi-check\",\n              text: \"\",\n              onClick: saveGroup\n            })\n          ]),\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_17, [\n              _hoisted_18,\n              _createVNode(_component_InputText, {\n                class: \"mt-2\",\n                id: \"full_name\",\n                modelValue: _unref(group).full_name,\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event) => _unref(group).full_name = $event),\n                modelModifiers: { trim: true },\n                required: \"\",\n                invalid: _unref(submitted) && !_unref(group).full_name\n              }, null, 8, [\"modelValue\", \"invalid\"]),\n              _unref(submitted) && !_unref(group).full_name ? (_openBlock(), _createElementBlock(\"small\", _hoisted_19, \"Полное название обязательно для заполнения.\")) : _createCommentVNode(\"\", true)\n            ]),\n            _createElementVNode(\"div\", _hoisted_20, [\n              _hoisted_21,\n              _createVNode(_component_InputText, {\n                class: \"mt-2\",\n                id: \"abbreviation\",\n                modelValue: _unref(group).abbreviation,\n                \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event) => _unref(group).abbreviation = $event),\n                modelModifiers: { trim: true },\n                required: \"\",\n                invalid: _unref(submitted) && !_unref(group).abbreviation\n              }, null, 8, [\"modelValue\", \"invalid\"]),\n              _unref(submitted) && !_unref(group).abbreviation ? (_openBlock(), _createElementBlock(\"small\", _hoisted_22, \"Аббревиатура обязательна для заполнения.\")) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"visible\"]),\n        _createVNode(_component_Dialog, {\n          visible: _unref(deleteGroupDialog),\n          \"onUpdate:visible\": _cache[14] || (_cache[14] = ($event) => _isRef(deleteGroupDialog) ? deleteGroupDialog.value = $event : null),\n          style: { width: \"500px\" },\n          header: \"Подтверждение\",\n          modal: true\n        }, {\n          footer: _withCtx(() => [\n            _createVNode(_component_Button, {\n              label: \"Нет\",\n              icon: \"pi pi-times\",\n              text: \"\",\n              onClick: _cache[13] || (_cache[13] = ($event) => deleteGroupDialog.value = false)\n            }),\n            _createVNode(_component_Button, {\n              label: \"Да\",\n              icon: \"pi pi-check\",\n              text: \"\",\n              onClick: deleteGroup\n            })\n          ]),\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_23, [\n              _hoisted_24,\n              _unref(group) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_25, [\n                _createTextVNode(\"Вы действительно хотите удалить группу \"),\n                _createElementVNode(\"b\", null, _toDisplayString(_unref(group).full_name), 1)\n              ])) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"visible\"]),\n        _createVNode(_component_Dialog, {\n          visible: _unref(deleteGroupsDialog),\n          \"onUpdate:visible\": _cache[16] || (_cache[16] = ($event) => _isRef(deleteGroupsDialog) ? deleteGroupsDialog.value = $event : null),\n          style: { width: \"450px\" },\n          header: \"Подтверждение\",\n          modal: true\n        }, {\n          footer: _withCtx(() => [\n            _createVNode(_component_Button, {\n              label: \"Нет\",\n              icon: \"pi pi-times\",\n              text: \"\",\n              onClick: _cache[15] || (_cache[15] = ($event) => deleteGroupsDialog.value = false)\n            }),\n            _createVNode(_component_Button, {\n              label: \"Да\",\n              icon: \"pi pi-check\",\n              text: \"\",\n              onClick: deleteSelectedGroups\n            })\n          ]),\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_26, [\n              _hoisted_27,\n              _unref(group) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, \"Вы действительно хотите удалить выделенные группы?\")) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"visible\"])\n      ], 64);\n    };\n  }\n});\n",
      "start": 1715794732573,
      "end": 1715794737889,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "E:/Stusy/web-client/pages/admin/groups/index.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, unref as _unref, withCtx as _withCtx, createElementVNode as _createElementVNode, isRef as _isRef, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, createSlots as _createSlots, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-8c1ca0b2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"main-content flex-col\" }\nconst _hoisted_2 = { class: \"card\" }\nconst _hoisted_3 = { class: \"flex flex-wrap gap-3 items-center justify-between mb-3\" }\nconst _hoisted_4 = { class: \"flex items-center gap-3\" }\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", { class: \"m-0 text-xl text-900 font-bold\" }, \"Управление группами\", -1))\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1))\nconst _hoisted_7 = { class: \"m-0 mb-2\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Присоединение к группе\", -1))\nconst _hoisted_9 = { class: \"card\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"flex align-items-center\"\n}\nconst _hoisted_11 = { key: 1 }\nconst _hoisted_12 = { class: \"flex flex-col justify-center flex-wrap\" }\nconst _hoisted_13 = { class: \"flex flex-wrap gap-3 items-center justify-between mb-3\" }\nconst _hoisted_14 = { class: \"flex items-center gap-3\" }\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", { class: \"m-0 text-xl text-900 font-bold\" }, \"Пользователи\", -1))\nconst _hoisted_16 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1))\nconst _hoisted_17 = { class: \"field my-3\" }\nconst _hoisted_18 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"full_name\" }, \"Полное название\", -1))\nconst _hoisted_19 = {\n  key: 0,\n  class: \"p-error\"\n}\nconst _hoisted_20 = { class: \"field my-3\" }\nconst _hoisted_21 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"abbreviation\" }, \"Аббревиатура\", -1))\nconst _hoisted_22 = {\n  key: 0,\n  class: \"p-error\"\n}\nconst _hoisted_23 = { class: \"confirmation-content p-3\" }\nconst _hoisted_24 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-exclamation-triangle mr-3\",\n  style: {\"font-size\":\"2rem\"}\n}, null, -1))\nconst _hoisted_25 = { key: 0 }\nconst _hoisted_26 = { class: \"confirmation-content p-3\" }\nconst _hoisted_27 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-exclamation-triangle mr-3\",\n  style: {\"font-size\":\"2rem\"}\n}, null, -1))\nconst _hoisted_28 = { key: 0 }\n\nimport {\r\n  createGroup,\r\n  deleteGroups,\r\n  fetchGroups,\r\n  updateGroup,\r\n  deleteGroupUser,\r\n  formatGroupDates,\r\n  getGroupFullNames,\r\n  addUsersToGroup, fetchGroupsWithUsers\r\n} from \"~/helpers/groups\";\r\n\r\nimport {FilterMatchMode} from \"primevue/api\";\r\nimport {fetchUsers} from \"~/helpers/user\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\ndefinePageMeta({\r\n  layout: 'home',\r\n  middleware: [\r\n    'admin'\r\n  ]\r\n})\r\nuseHead({\r\n  title: 'Администрирование групп'\r\n})\r\n\r\nconst runtimeConfig = useRuntimeConfig()\r\nconst nuxtApp = useNuxtApp()\r\nconst router = useRouter();\r\n\r\nconst loading = ref(true)\r\nconst toast = useToast();\r\nconst dt = ref();\r\nconst groups = ref();\r\nconst groupDialog = ref(false);\r\nconst deleteGroupDialog = ref(false);\r\nconst deleteGroupsDialog = ref(false);\r\nconst group = ref({});\r\nconst selectedGroups = ref();\r\nconst filters = ref({\r\n  'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\r\n});\r\nconst filtersUserTable = ref({\r\n  'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\r\n})\r\nconst filtersExpandedUsers = ref({\r\n  'fullname': {value: null, matchMode: FilterMatchMode.CONTAINS},\r\n});\r\nconst submitted = ref(false);\r\nconst roles = ref([]);\r\nconst statuses = ref([\r\n  {label: 'ACTIVE', value: 'active'},\r\n  {label: 'INACTIVE', value: 'inactive'},\r\n  {label: 'BLOCKED', value: 'blocked'}\r\n]);\r\n\r\nconst columns = ref([\r\n  {field: 'full_name', header: 'Наименование'},\r\n  {field: 'abbreviation', header: 'Аббревиатура'},\r\n  {field: 'create_at', header: 'Дата создания'},\r\n  {field: 'updated_at', header: 'Дата обновления'},\r\n]);\r\nconst selectedColumns = ref(columns.value.filter(column => column.field !== 'updated_at'));\r\nconst expandedRows = ref({});\r\nconst selectedUsers = ref();\r\nconst users = ref();\r\nconst columnsUser = ref([\r\n  {field: 'email', header: 'Почта'},\r\n  {field: 'fullname', header: 'ФИО'},\r\n  {field: 'username', header: 'Логин'},\r\n  {field: 'about', header: 'Описание'},\r\n  {field: 'role.name', header: 'Роль'},\r\n  {field: 'groups', header: 'Группы'}\r\n]);\r\nconst selectedColumnsUser = ref(columnsUser.value.filter(column => column.field !== 'about'));\r\n\r\nconst openNew = () => {\r\n  group.value = {};\r\n  submitted.value = false;\r\n  groupDialog.value = true;\r\n};\r\n\r\nconst hideDialog = () => {\r\n  groupDialog.value = false;\r\n  submitted.value = false;\r\n};\r\n\r\nconst saveGroup = () => {\r\n  submitted.value = true;\r\n\r\n  if (group?.value.full_name?.trim()) {\r\n    if (group.value.id) {\r\n      console.log(group.value.id, group.value)\r\n      updateGroup(group.value.id, group.value) // Отправляем запрос на обновление группы\r\n          .then(data => {\r\n            groups.value[findIndexById(group.value.id)] = data;\r\n            toast.add({severity: 'success', summary: 'Successful', detail: 'group Updated', life: 3000});\r\n            groupDialog.value = false;\r\n            group.value = {};\r\n            getGroups()\r\n          })\r\n          .catch(error => console.error('Error updating group:', error));\r\n    } else {\r\n      createGroup(group.value)\r\n          .then(data => {\r\n            groups.value.push(data); // Добавляем созданного группы в список\r\n            toast.add({severity: 'success', summary: 'Successful', detail: 'group Created', life: 3000});\r\n          })\r\n          .catch(error => console.error('Error creating group:', error));\r\n    }\r\n\r\n    groupDialog.value = false;\r\n    group.value = {};\r\n  }\r\n};\r\n\r\nconst editGroup = (usr) => {\r\n  group.value = {...usr};\r\n  groupDialog.value = true;\r\n  console.log(group)\r\n};\r\n\r\nconst confirmDeleteGroup = (usr) => {\r\n  group.value = usr;\r\n  deleteGroupDialog.value = true;\r\n};\r\n\r\nconst deleteGroup = () => {\r\n  deleteGroups([group.value.id])\r\n      .then(data => {\r\n        groups.value = groups.value.filter(val => val.id !== group.value.id);\r\n        deleteGroupDialog.value = false;\r\n        group.value = {};\r\n        toast.add({severity: 'success', summary: 'Успешно', detail: 'Группа удалена', life: 3000});\r\n      })\r\n      .catch(error => console.error('Error delete group:', error));\r\n};\r\n\r\nconst removeUserFromGroup = (groupId, userIds) => {\r\n  deleteGroupUser(groupId, userIds)\r\n      .then(() => {\r\n        // Обновление списка групп после удаления пользователя\r\n        getGroups();\r\n        toast.add({severity: 'success', summary: 'Успешно', detail: 'Пользователь удален из группы', life: 3000});\r\n      })\r\n      .catch(error => console.error('Ошибка удаления пользователя из группы:', error))\r\n      .finally(getUsers);\r\n};\r\n\r\nconst addUserToGroup = (groupId, userIds) => {\r\n  addUsersToGroup(groupId, userIds)\r\n      .then(() => {\r\n        // Обновление списка групп после удаления пользователя\r\n        getGroups();\r\n        toast.add({severity: 'success', summary: 'Успешно', detail: 'Пользователь добавлен в группу', life: 3000});\r\n      })\r\n      .catch(error => console.error('Ошибка добавления пользователя в группу:', error));\r\n};\r\n\r\nconst findIndexById = (id) => {\r\n  let index = -1;\r\n  for (let i = 0; i < groups.value.length; i++) {\r\n    if (groups.value[i].id === id) {\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n  return index;\r\n};\r\n\r\nconst createId = () => {\r\n  let id = '';\r\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  for (var i = 0; i < 5; i++) {\r\n    id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n  }\r\n  return id;\r\n};\r\n\r\nconst exportCSV = () => {\r\n  dt.value.exportCSV();\r\n};\r\n\r\nconst confirmDeleteSelected = () => {\r\n  deleteGroupsDialog.value = true;\r\n};\r\n\r\nconst confirmAddSelectedUserToGroup = () => {\r\n  console.log(selectedUsers.value)\r\n  addUserToGroup(group.value.id, selectedUsers.value.map(user => user.id))\r\n  selectedUsers.value = null\r\n}\r\n\r\nconst deleteSelectedGroups = () => {\r\n  deleteGroups(selectedGroups.value.map(group => group.id))\r\n      .then(data => {\r\n        groups.value = groups.value.filter(val => !selectedGroups.value.includes(val));\r\n        deleteGroupsDialog.value = false;\r\n        selectedGroups.value = null;\r\n        toast.add({severity: 'success', summary: 'Успешно', detail: 'Пользователи удалены', life: 3000});\r\n      })\r\n      .catch(error => console.error('Error delete groups:', error));\r\n};\r\n\r\nconst isGroupInDataGroups = (groupId, groups) => {\r\n  if (!groupId) {\r\n    return true; // Если groupId не задан, кнопка должна быть отключена\r\n  }\r\n\r\n  // Проверяем наличие id у вложенных элементов в groups\r\n  const hasValidGroupId = groups.some(group => {\r\n    return group?.id === groupId || (group?.children?.some(child => child?.id === groupId));\r\n  });\r\n\r\n  return !hasValidGroupId;\r\n}\r\n\r\nconst onToggleColumns = (val) => {\r\n  // Фильтруем выбранные колонки на основе значения мультиселектора\r\n  selectedColumns.value = columns.value.filter(col => val.includes(col));\r\n};\r\nconst onRowExpand = (event) => {\r\n  toast.add({severity: 'info', summary: 'Product Expanded', detail: event.data.name, life: 3000});\r\n};\r\nconst onRowCollapse = (event) => {\r\n  toast.add({severity: 'success', summary: 'Product Collapsed', detail: event.data.name, life: 3000});\r\n};\r\n// Получение групп с сервера при монтировании компонента\r\nfunction getGroups() {\r\n  fetchGroupsWithUsers()\r\n      .then(data => {\r\n        data.forEach(group => {\r\n          if (group.users) {\r\n            group.users.forEach(user => {\r\n              user.fullname = `${user.last_name} ${user.first_name} ${user.middle_name}`;\r\n              user.group_id = group.id;\r\n            });\r\n          }\r\n        });\r\n        groups.value = data.map(group => ({\r\n          ...group\r\n        }));\r\n        groups.value = formatGroupDates(groups.value)\r\n        console.log(groups.value)\r\n        loading.value = false;\r\n      })\r\n      .catch(error => console.error('Error fetching groups:', error));\r\n}\r\n\r\nfunction getUsers() {\r\n  loading.value = true\r\n  fetchUsers()\r\n      .then(data => {\r\n        users.value = data.map(user => ({\r\n          ...user,\r\n          fullname: `${user.last_name} ${user.first_name} ${user.middle_name}`\r\n        }));\r\n        loading.value = false;\r\n      })\r\n      .catch(error => console.error('Error fetching users:', error))\r\n      .finally(() => {\r\n        loading.value = false\r\n      });\r\n}\r\n\r\nonMounted(() => {\r\n  getGroups()\r\n  getUsers()\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_Toast = _resolveComponent(\"Toast\")!\n  const _component_Button = _resolveComponent(\"Button\")!\n  const _component_FileUpload = _resolveComponent(\"FileUpload\")!\n  const _component_Toolbar = _resolveComponent(\"Toolbar\")!\n  const _component_InputIcon = _resolveComponent(\"InputIcon\")!\n  const _component_InputText = _resolveComponent(\"InputText\")!\n  const _component_IconField = _resolveComponent(\"IconField\")!\n  const _component_MultiSelect = _resolveComponent(\"MultiSelect\")!\n  const _component_Column = _resolveComponent(\"Column\")!\n  const _component_DataTable = _resolveComponent(\"DataTable\")!\n  const _component_Dropdown = _resolveComponent(\"Dropdown\")!\n  const _component_Dialog = _resolveComponent(\"Dialog\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(_component_Toast),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createVNode(_component_Toolbar, { class: \"mb-4\" }, {\n          start: _withCtx(() => [\n            _createVNode(_component_Button, {\n              label: \"Добавить\",\n              icon: \"pi pi-plus\",\n              severity: \"success\",\n              class: \"mr-2\",\n              onClick: openNew\n            }),\n            _createVNode(_component_Button, {\n              label: \"Удалить\",\n              icon: \"pi pi-trash\",\n              severity: \"danger\",\n              onClick: confirmDeleteSelected,\n              disabled: !_unref(selectedGroups) || !_unref(selectedGroups).length\n            }, null, 8, [\"disabled\"])\n          ]),\n          end: _withCtx(() => [\n            _createVNode(_component_FileUpload, {\n              mode: \"basic\",\n              accept: \"image/*\",\n              maxFileSize: 1000000,\n              label: \"Import\",\n              chooseLabel: \"Импорт\",\n              class: \"mr-2 inline-block\"\n            }),\n            _createVNode(_component_Button, {\n              label: \"Экспорт\",\n              icon: \"pi pi-upload\",\n              severity: \"help\",\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (exportCSV($event)))\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_DataTable, {\n          ref_key: \"dt\",\n          ref: dt,\n          expandedRows: _unref(expandedRows),\n          \"onUpdate:expandedRows\": _cache[4] || (_cache[4] = ($event: any) => (_isRef(expandedRows) ? (expandedRows).value = $event : null)),\n          value: _unref(groups),\n          selection: _unref(selectedGroups),\n          \"onUpdate:selection\": _cache[5] || (_cache[5] = ($event: any) => (_isRef(selectedGroups) ? (selectedGroups).value = $event : null)),\n          dataKey: \"id\",\n          style: {\"max-width\":\"1500px\"},\n          loading: _unref(loading),\n          onRowExpand: onRowExpand,\n          onRowCollapse: onRowCollapse,\n          showGridlines: \"\",\n          resizableColumns: \"\",\n          columnResizeMode: \"fit\",\n          paginator: true,\n          rows: 10,\n          filters: _unref(filters),\n          paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n          rowsPerPageOptions: [10,25,50],\n          currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n        }, {\n          header: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_3, [\n              _createElementVNode(\"div\", _hoisted_4, [\n                _hoisted_5,\n                _createVNode(_component_Button, {\n                  icon: \"pi pi-refresh\",\n                  rounded: \"\",\n                  raised: \"\",\n                  onClick: getGroups\n                })\n              ]),\n              _createVNode(_component_IconField, { iconPosition: \"left\" }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_InputIcon, null, {\n                    default: _withCtx(() => [\n                      _hoisted_6\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_InputText, {\n                    modelValue: _unref(filters)['global'].value,\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_unref(filters)['global'].value) = $event)),\n                    placeholder: \"Поиск...\"\n                  }, null, 8, [\"modelValue\"])\n                ]),\n                _: 1\n              })\n            ]),\n            _createVNode(_component_MultiSelect, {\n              modelValue: _unref(selectedColumns),\n              \"onUpdate:modelValue\": [\n                _cache[2] || (_cache[2] = ($event: any) => (_isRef(selectedColumns) ? (selectedColumns).value = $event : null)),\n                onToggleColumns\n              ],\n              options: _unref(columns),\n              optionLabel: \"header\",\n              display: \"chip\",\n              placeholder: \"Выберите колонки\"\n            }, null, 8, [\"modelValue\", \"options\"])\n          ]),\n          expansion: _withCtx((slotProps) => [\n            _createElementVNode(\"div\", null, [\n              _createElementVNode(\"h4\", _hoisted_7, \"Участники группы \" + _toDisplayString(slotProps.data.abbreviation), 1),\n              (slotProps.data.users?.length !== 0)\n                ? (_openBlock(), _createBlock(_component_DataTable, {\n                    key: 0,\n                    filters: _unref(filtersExpandedUsers),\n                    \"onUpdate:filters\": _cache[3] || (_cache[3] = ($event: any) => (_isRef(filtersExpandedUsers) ? (filtersExpandedUsers).value = $event : null)),\n                    filterDisplay: \"row\",\n                    globalFilterFields: ['fullname'],\n                    value: slotProps.data.users,\n                    paginator: true,\n                    rows: 20,\n                    paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n                    rowsPerPageOptions: [20,40,80],\n                    currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_Column, {\n                        field: \"fullname\",\n                        header: \"ФИО\"\n                      }, {\n                        body: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data.fullname), 1)\n                        ]),\n                        filter: _withCtx(({ filterModel, filterCallback }) => [\n                          _createVNode(_component_InputText, {\n                            modelValue: filterModel.value,\n                            \"onUpdate:modelValue\": ($event: any) => ((filterModel.value) = $event),\n                            type: \"text\",\n                            onInput: ($event: any) => (filterCallback()),\n                            class: \"p-column-filter\",\n                            placeholder: \"Поиск по имени\"\n                          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onInput\"])\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        field: \"email\",\n                        header: \"Почта\"\n                      }, {\n                        body: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data.email), 1)\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        field: \"username\",\n                        header: \"Логин\"\n                      }, {\n                        body: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data.username), 1)\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        exportable: false,\n                        style: {\"width\":\"2rem\"}\n                      }, {\n                        body: _withCtx((slotProps) => [\n                          _createVNode(_component_Button, {\n                            icon: \"pi pi-trash\",\n                            outlined: \"\",\n                            rounded: \"\",\n                            severity: \"danger\",\n                            onClick: ($event: any) => (removeUserFromGroup(slotProps.data.group_id, [slotProps.data.id]))\n                          }, null, 8, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1032, [\"filters\", \"value\"]))\n                : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          default: _withCtx(() => [\n            _createVNode(_component_Column, {\n              expander: \"\",\n              style: {\"width\":\"3rem\"}\n            }),\n            _createVNode(_component_Column, {\n              selectionMode: \"multiple\",\n              style: {\"width\":\"3rem\"},\n              exportable: false\n            }),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(selectedColumns), (col, index) => {\n              return (_openBlock(), _createBlock(_component_Column, {\n                sortable: \"\",\n                field: col.field,\n                header: col.header,\n                key: col.field + '_' + index\n              }, null, 8, [\"field\", \"header\"]))\n            }), 128)),\n            _createVNode(_component_Column, {\n              exportable: false,\n              style: {\"min-width\":\"8rem\"}\n            }, {\n              body: _withCtx((slotProps) => [\n                _createVNode(_component_Button, {\n                  icon: \"pi pi-pencil\",\n                  outlined: \"\",\n                  rounded: \"\",\n                  class: \"mr-2\",\n                  onClick: ($event: any) => (editGroup(slotProps.data))\n                }, null, 8, [\"onClick\"]),\n                _createVNode(_component_Button, {\n                  icon: \"pi pi-trash\",\n                  outlined: \"\",\n                  rounded: \"\",\n                  severity: \"danger\",\n                  onClick: ($event: any) => (confirmDeleteGroup(slotProps.data))\n                }, null, 8, [\"onClick\"])\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }, 8, [\"expandedRows\", \"value\", \"selection\", \"loading\", \"filters\"])\n      ]),\n      _createElementVNode(\"div\", null, [\n        _hoisted_8,\n        _createElementVNode(\"div\", _hoisted_9, [\n          _createVNode(_component_Toolbar, { class: \"mb-4\" }, {\n            start: _withCtx(() => [\n              _createVNode(_component_Button, {\n                label: \"Добавить\",\n                icon: \"pi pi-plus\",\n                severity: \"success\",\n                onClick: confirmAddSelectedUserToGroup,\n                disabled: !_unref(selectedUsers) || !_unref(selectedUsers).length || !_unref(group).id\n              }, null, 8, [\"disabled\"])\n            ]),\n            end: _withCtx(() => [\n              _createVNode(_component_Dropdown, {\n                modelValue: _unref(group),\n                \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => (_isRef(group) ? (group).value = $event : null)),\n                options: _unref(groups),\n                filter: \"\",\n                optionLabel: \"abbreviation\",\n                placeholder: \"Выберите группу\",\n                class: \"w-full md:w-14rem\"\n              }, {\n                value: _withCtx((slotProps) => [\n                  (slotProps.value.abbreviation)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                        _createElementVNode(\"div\", null, _toDisplayString(slotProps.value.abbreviation), 1)\n                      ]))\n                    : (_openBlock(), _createElementBlock(\"span\", _hoisted_11, _toDisplayString(slotProps.placeholder), 1))\n                ]),\n                option: _withCtx((slotProps) => [\n                  _createElementVNode(\"div\", _hoisted_12, [\n                    _createElementVNode(\"div\", null, _toDisplayString(slotProps.option.full_name), 1),\n                    _createElementVNode(\"div\", null, _toDisplayString(slotProps.option.abbreviation), 1)\n                  ])\n                ]),\n                _: 1\n              }, 8, [\"modelValue\", \"options\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_DataTable, {\n            ref_key: \"dt\",\n            ref: dt,\n            value: _unref(users),\n            selection: _unref(selectedUsers),\n            \"onUpdate:selection\": _cache[9] || (_cache[9] = ($event: any) => (_isRef(selectedUsers) ? (selectedUsers).value = $event : null)),\n            dataKey: \"id\",\n            loading: _unref(loading),\n            style: {\"max-width\":\"1500px\"},\n            tableStyle: \"min-width: 60rem\",\n            showGridlines: \"\",\n            resizableColumns: \"\",\n            columnResizeMode: \"fit\",\n            paginator: true,\n            rows: 10,\n            filters: _unref(filtersUserTable),\n            paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n            rowsPerPageOptions: [10,25,50],\n            currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n          }, {\n            header: _withCtx(() => [\n              _createElementVNode(\"div\", _hoisted_13, [\n                _createElementVNode(\"div\", _hoisted_14, [\n                  _hoisted_15,\n                  _createVNode(_component_Button, {\n                    icon: \"pi pi-refresh\",\n                    rounded: \"\",\n                    raised: \"\",\n                    onClick: getUsers\n                  })\n                ]),\n                _createVNode(_component_IconField, { iconPosition: \"left\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_InputIcon, null, {\n                      default: _withCtx(() => [\n                        _hoisted_16\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_InputText, {\n                      modelValue: _unref(filtersUserTable)['global'].value,\n                      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_unref(filtersUserTable)['global'].value) = $event)),\n                      placeholder: \"Поиск...\"\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _createVNode(_component_MultiSelect, {\n                modelValue: _unref(selectedColumnsUser),\n                \"onUpdate:modelValue\": [\n                  _cache[8] || (_cache[8] = ($event: any) => (_isRef(selectedColumnsUser) ? (selectedColumnsUser).value = $event : null)),\n                  onToggleColumns\n                ],\n                options: _unref(columnsUser),\n                optionLabel: \"header\",\n                display: \"chip\",\n                placeholder: \"Выберите колонки\"\n              }, null, 8, [\"modelValue\", \"options\"])\n            ]),\n            empty: _withCtx(() => [\n              _createTextVNode(\" Пользователи не найдены\")\n            ]),\n            default: _withCtx(() => [\n              _createVNode(_component_Column, {\n                selectionMode: \"multiple\",\n                style: {\"width\":\"3rem\"},\n                exportable: false\n              }),\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(selectedColumnsUser), (col, index) => {\n                return (_openBlock(), _createBlock(_component_Column, {\n                  sortable: \"\",\n                  field: col.field,\n                  header: col.header,\n                  key: col.field + '_' + index\n                }, _createSlots({ _: 2 }, [\n                  (col.field !== 'groups' && col.field !== 'role.name')\n                    ? {\n                        name: \"body\",\n                        fn: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data[col.field]), 1)\n                        ]),\n                        key: \"0\"\n                      }\n                    : (col.field === 'role.name')\n                      ? {\n                          name: \"body\",\n                          fn: _withCtx((slotProps) => [\n                            _createTextVNode(_toDisplayString(slotProps.data.role.name), 1)\n                          ]),\n                          key: \"1\"\n                        }\n                      : (col.field === 'groups')\n                        ? {\n                            name: \"body\",\n                            fn: _withCtx((slotProps) => [\n                              _createTextVNode(_toDisplayString(_unref(getGroupFullNames)(slotProps.data.groups)), 1)\n                            ]),\n                            key: \"2\"\n                          }\n                        : undefined\n                ]), 1032, [\"field\", \"header\"]))\n              }), 128)),\n              _createVNode(_component_Column, {\n                exportable: false,\n                style: {\"min-width\":\"8rem\"}\n              }, {\n                body: _withCtx((slotProps) => [\n                  _createVNode(_component_Button, {\n                    icon: \"pi pi-plus\",\n                    outlined: \"\",\n                    rounded: \"\",\n                    class: \"mr-2\",\n                    severity: \"success\",\n                    disabled: !_unref(group).id,\n                    onClick: ($event: any) => (addUserToGroup(_unref(group).id, [slotProps.data.id]))\n                  }, null, 8, [\"disabled\", \"onClick\"]),\n                  _createVNode(_component_Button, {\n                    icon: \"pi pi-trash\",\n                    outlined: \"\",\n                    rounded: \"\",\n                    severity: \"danger\",\n                    disabled: isGroupInDataGroups(_unref(group).id, slotProps.data.groups),\n                    onClick: ($event: any) => (removeUserFromGroup(_unref(group).id, [slotProps.data.id]))\n                  }, null, 8, [\"disabled\", \"onClick\"])\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }, 8, [\"value\", \"selection\", \"loading\", \"filters\"])\n        ])\n      ])\n    ]),\n    _createVNode(_component_Dialog, {\n      visible: _unref(groupDialog),\n      \"onUpdate:visible\": _cache[12] || (_cache[12] = ($event: any) => (_isRef(groupDialog) ? (groupDialog).value = $event : null)),\n      style: {width: '450px'},\n      header: \"Сведения о группе\",\n      modal: true,\n      class: \"p-fluid\"\n    }, {\n      footer: _withCtx(() => [\n        _createVNode(_component_Button, {\n          label: \"Отмена\",\n          icon: \"pi pi-times\",\n          text: \"\",\n          onClick: hideDialog\n        }),\n        _createVNode(_component_Button, {\n          label: \"Сохранить\",\n          icon: \"pi pi-check\",\n          text: \"\",\n          onClick: saveGroup\n        })\n      ]),\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_17, [\n          _hoisted_18,\n          _createVNode(_component_InputText, {\n            class: \"mt-2\",\n            id: \"full_name\",\n            modelValue: _unref(group).full_name,\n            \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((_unref(group).full_name) = $event)),\n            modelModifiers: { trim: true },\n            required: \"\",\n            invalid: _unref(submitted) && !_unref(group).full_name\n          }, null, 8, [\"modelValue\", \"invalid\"]),\n          (_unref(submitted) && !_unref(group).full_name)\n            ? (_openBlock(), _createElementBlock(\"small\", _hoisted_19, \"Полное название обязательно для заполнения.\"))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _createElementVNode(\"div\", _hoisted_20, [\n          _hoisted_21,\n          _createVNode(_component_InputText, {\n            class: \"mt-2\",\n            id: \"abbreviation\",\n            modelValue: _unref(group).abbreviation,\n            \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((_unref(group).abbreviation) = $event)),\n            modelModifiers: { trim: true },\n            required: \"\",\n            invalid: _unref(submitted) && !_unref(group).abbreviation\n          }, null, 8, [\"modelValue\", \"invalid\"]),\n          (_unref(submitted) && !_unref(group).abbreviation)\n            ? (_openBlock(), _createElementBlock(\"small\", _hoisted_22, \"Аббревиатура обязательна для заполнения.\"))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _: 1\n    }, 8, [\"visible\"]),\n    _createVNode(_component_Dialog, {\n      visible: _unref(deleteGroupDialog),\n      \"onUpdate:visible\": _cache[14] || (_cache[14] = ($event: any) => (_isRef(deleteGroupDialog) ? (deleteGroupDialog).value = $event : null)),\n      style: {width: '500px'},\n      header: \"Подтверждение\",\n      modal: true\n    }, {\n      footer: _withCtx(() => [\n        _createVNode(_component_Button, {\n          label: \"Нет\",\n          icon: \"pi pi-times\",\n          text: \"\",\n          onClick: _cache[13] || (_cache[13] = ($event: any) => (deleteGroupDialog.value = false))\n        }),\n        _createVNode(_component_Button, {\n          label: \"Да\",\n          icon: \"pi pi-check\",\n          text: \"\",\n          onClick: deleteGroup\n        })\n      ]),\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_23, [\n          _hoisted_24,\n          (_unref(group))\n            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_25, [\n                _createTextVNode(\"Вы действительно хотите удалить группу \"),\n                _createElementVNode(\"b\", null, _toDisplayString(_unref(group).full_name), 1)\n              ]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _: 1\n    }, 8, [\"visible\"]),\n    _createVNode(_component_Dialog, {\n      visible: _unref(deleteGroupsDialog),\n      \"onUpdate:visible\": _cache[16] || (_cache[16] = ($event: any) => (_isRef(deleteGroupsDialog) ? (deleteGroupsDialog).value = $event : null)),\n      style: {width: '450px'},\n      header: \"Подтверждение\",\n      modal: true\n    }, {\n      footer: _withCtx(() => [\n        _createVNode(_component_Button, {\n          label: \"Нет\",\n          icon: \"pi pi-times\",\n          text: \"\",\n          onClick: _cache[15] || (_cache[15] = ($event: any) => (deleteGroupsDialog.value = false))\n        }),\n        _createVNode(_component_Button, {\n          label: \"Да\",\n          icon: \"pi pi-check\",\n          text: \"\",\n          onClick: deleteSelectedGroups\n        })\n      ]),\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_26, [\n          _hoisted_27,\n          (_unref(group))\n            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, \"Вы действительно хотите удалить выделенные группы?\"))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _: 1\n    }, 8, [\"visible\"])\n  ], 64))\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": [
          "group",
          "groups",
          "slotProps"
        ]
      }
    },
    {
      "name": "vite:json",
      "start": 1715794737889,
      "end": 1715794737889,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1715794737889,
      "end": 1715794737889,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1715794737889,
      "end": 1715794737890,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1715794737890,
      "end": 1715794737890,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715794737890,
      "end": 1715794737890,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1715794737890,
      "end": 1715794737890,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1715794737890,
      "end": 1715794737890,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1715794737890,
      "end": 1715794737890,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1715794737890,
      "end": 1715794737890,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1715794737890,
      "end": 1715794737890,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1715794737890,
      "end": 1715794737890,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1715794737890,
      "end": 1715794737890,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1715794737890,
      "end": 1715794737890,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1715794737890,
      "end": 1715794737890,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1715794737890,
      "end": 1715794737890,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1715794737890,
      "end": 1715794737890,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1715794737890,
      "end": 1715794737891,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1715794737891,
      "end": 1715794737891,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1715794737891,
      "end": 1715794737891,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { definePageMeta } from 'E:/Stusy/web-client/node_modules/nuxt/dist/pages/runtime/composables';\nimport { useHead } from '@unhead/vue';\nimport { useRuntimeConfig, useNuxtApp } from '#app/nuxt';\nimport { useRouter } from '#app/composables/router';\nimport { ref, onMounted } from 'vue';\nimport { useToast } from 'primevue/usetoast';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, unref as _unref, withCtx as _withCtx, createElementVNode as _createElementVNode, isRef as _isRef, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, createSlots as _createSlots, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-8c1ca0b2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"main-content flex-col\" };\nconst _hoisted_2 = { class: \"card\" };\nconst _hoisted_3 = { class: \"flex flex-wrap gap-3 items-center justify-between mb-3\" };\nconst _hoisted_4 = { class: \"flex items-center gap-3\" };\nconst _hoisted_5 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"h4\", { class: \"m-0 text-xl text-900 font-bold\" }, \"Управление группами\", -1));\nconst _hoisted_6 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1));\nconst _hoisted_7 = { class: \"m-0 mb-2\" };\nconst _hoisted_8 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"h2\", null, \"Присоединение к группе\", -1));\nconst _hoisted_9 = { class: \"card\" };\nconst _hoisted_10 = {\n  key: 0,\n  class: \"flex align-items-center\"\n};\nconst _hoisted_11 = { key: 1 };\nconst _hoisted_12 = { class: \"flex flex-col justify-center flex-wrap\" };\nconst _hoisted_13 = { class: \"flex flex-wrap gap-3 items-center justify-between mb-3\" };\nconst _hoisted_14 = { class: \"flex items-center gap-3\" };\nconst _hoisted_15 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"h4\", { class: \"m-0 text-xl text-900 font-bold\" }, \"Пользователи\", -1));\nconst _hoisted_16 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1));\nconst _hoisted_17 = { class: \"field my-3\" };\nconst _hoisted_18 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"label\", { for: \"full_name\" }, \"Полное название\", -1));\nconst _hoisted_19 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_20 = { class: \"field my-3\" };\nconst _hoisted_21 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"label\", { for: \"abbreviation\" }, \"Аббревиатура\", -1));\nconst _hoisted_22 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_23 = { class: \"confirmation-content p-3\" };\nconst _hoisted_24 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", {\n  class: \"pi pi-exclamation-triangle mr-3\",\n  style: { \"font-size\": \"2rem\" }\n}, null, -1));\nconst _hoisted_25 = { key: 0 };\nconst _hoisted_26 = { class: \"confirmation-content p-3\" };\nconst _hoisted_27 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", {\n  class: \"pi pi-exclamation-triangle mr-3\",\n  style: { \"font-size\": \"2rem\" }\n}, null, -1));\nconst _hoisted_28 = { key: 0 };\nimport {\n  createGroup,\n  deleteGroups,\n  updateGroup,\n  deleteGroupUser,\n  formatGroupDates,\n  getGroupFullNames,\n  addUsersToGroup,\n  fetchGroupsWithUsers\n} from \"~/helpers/groups\";\nimport { FilterMatchMode } from \"primevue/api\";\nimport { fetchUsers } from \"~/helpers/user\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"index\",\n  setup(__props) {\n    definePageMeta({\n      layout: \"home\",\n      middleware: [\n        \"admin\"\n      ]\n    });\n    useHead({\n      title: \"Администрирование групп\"\n    });\n    const runtimeConfig = useRuntimeConfig();\n    const nuxtApp = useNuxtApp();\n    const router = useRouter();\n    const loading = ref(true);\n    const toast = useToast();\n    const dt = ref();\n    const groups = ref();\n    const groupDialog = ref(false);\n    const deleteGroupDialog = ref(false);\n    const deleteGroupsDialog = ref(false);\n    const group = ref({});\n    const selectedGroups = ref();\n    const filters = ref({\n      \"global\": { value: null, matchMode: FilterMatchMode.CONTAINS }\n    });\n    const filtersUserTable = ref({\n      \"global\": { value: null, matchMode: FilterMatchMode.CONTAINS }\n    });\n    const filtersExpandedUsers = ref({\n      \"fullname\": { value: null, matchMode: FilterMatchMode.CONTAINS }\n    });\n    const submitted = ref(false);\n    const roles = ref([]);\n    const statuses = ref([\n      { label: \"ACTIVE\", value: \"active\" },\n      { label: \"INACTIVE\", value: \"inactive\" },\n      { label: \"BLOCKED\", value: \"blocked\" }\n    ]);\n    const columns = ref([\n      { field: \"full_name\", header: \"Наименование\" },\n      { field: \"abbreviation\", header: \"Аббревиатура\" },\n      { field: \"create_at\", header: \"Дата создания\" },\n      { field: \"updated_at\", header: \"Дата обновления\" }\n    ]);\n    const selectedColumns = ref(columns.value.filter((column) => column.field !== \"updated_at\"));\n    const expandedRows = ref({});\n    const selectedUsers = ref();\n    const users = ref();\n    const columnsUser = ref([\n      { field: \"email\", header: \"Почта\" },\n      { field: \"fullname\", header: \"ФИО\" },\n      { field: \"username\", header: \"Логин\" },\n      { field: \"about\", header: \"Описание\" },\n      { field: \"role.name\", header: \"Роль\" },\n      { field: \"groups\", header: \"Группы\" }\n    ]);\n    const selectedColumnsUser = ref(columnsUser.value.filter((column) => column.field !== \"about\"));\n    const openNew = () => {\n      group.value = {};\n      submitted.value = false;\n      groupDialog.value = true;\n    };\n    const hideDialog = () => {\n      groupDialog.value = false;\n      submitted.value = false;\n    };\n    const saveGroup = () => {\n      submitted.value = true;\n      if (group?.value.full_name?.trim()) {\n        if (group.value.id) {\n          console.log(group.value.id, group.value);\n          updateGroup(group.value.id, group.value).then((data) => {\n            groups.value[findIndexById(group.value.id)] = data;\n            toast.add({ severity: \"success\", summary: \"Successful\", detail: \"group Updated\", life: 3e3 });\n            groupDialog.value = false;\n            group.value = {};\n            getGroups();\n          }).catch((error) => console.error(\"Error updating group:\", error));\n        } else {\n          createGroup(group.value).then((data) => {\n            groups.value.push(data);\n            toast.add({ severity: \"success\", summary: \"Successful\", detail: \"group Created\", life: 3e3 });\n          }).catch((error) => console.error(\"Error creating group:\", error));\n        }\n        groupDialog.value = false;\n        group.value = {};\n      }\n    };\n    const editGroup = (usr) => {\n      group.value = { ...usr };\n      groupDialog.value = true;\n      console.log(group);\n    };\n    const confirmDeleteGroup = (usr) => {\n      group.value = usr;\n      deleteGroupDialog.value = true;\n    };\n    const deleteGroup = () => {\n      deleteGroups([group.value.id]).then((data) => {\n        groups.value = groups.value.filter((val) => val.id !== group.value.id);\n        deleteGroupDialog.value = false;\n        group.value = {};\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Группа удалена\", life: 3e3 });\n      }).catch((error) => console.error(\"Error delete group:\", error));\n    };\n    const removeUserFromGroup = (groupId, userIds) => {\n      deleteGroupUser(groupId, userIds).then(() => {\n        getGroups();\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Пользователь удален из группы\", life: 3e3 });\n      }).catch((error) => console.error(\"Ошибка удаления пользователя из группы:\", error)).finally(getUsers);\n    };\n    const addUserToGroup = (groupId, userIds) => {\n      addUsersToGroup(groupId, userIds).then(() => {\n        getGroups();\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Пользователь добавлен в группу\", life: 3e3 });\n      }).catch((error) => console.error(\"Ошибка добавления пользователя в группу:\", error));\n    };\n    const findIndexById = (id) => {\n      let index = -1;\n      for (let i = 0; i < groups.value.length; i++) {\n        if (groups.value[i].id === id) {\n          index = i;\n          break;\n        }\n      }\n      return index;\n    };\n    const createId = () => {\n      let id = \"\";\n      var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n      for (var i = 0; i < 5; i++) {\n        id += chars.charAt(Math.floor(Math.random() * chars.length));\n      }\n      return id;\n    };\n    const exportCSV = () => {\n      dt.value.exportCSV();\n    };\n    const confirmDeleteSelected = () => {\n      deleteGroupsDialog.value = true;\n    };\n    const confirmAddSelectedUserToGroup = () => {\n      console.log(selectedUsers.value);\n      addUserToGroup(group.value.id, selectedUsers.value.map((user) => user.id));\n      selectedUsers.value = null;\n    };\n    const deleteSelectedGroups = () => {\n      deleteGroups(selectedGroups.value.map((group2) => group2.id)).then((data) => {\n        groups.value = groups.value.filter((val) => !selectedGroups.value.includes(val));\n        deleteGroupsDialog.value = false;\n        selectedGroups.value = null;\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Пользователи удалены\", life: 3e3 });\n      }).catch((error) => console.error(\"Error delete groups:\", error));\n    };\n    const isGroupInDataGroups = (groupId, groups2) => {\n      if (!groupId) {\n        return true;\n      }\n      const hasValidGroupId = groups2.some((group2) => {\n        return group2?.id === groupId || group2?.children?.some((child) => child?.id === groupId);\n      });\n      return !hasValidGroupId;\n    };\n    const onToggleColumns = (val) => {\n      selectedColumns.value = columns.value.filter((col) => val.includes(col));\n    };\n    const onRowExpand = (event) => {\n      toast.add({ severity: \"info\", summary: \"Product Expanded\", detail: event.data.name, life: 3e3 });\n    };\n    const onRowCollapse = (event) => {\n      toast.add({ severity: \"success\", summary: \"Product Collapsed\", detail: event.data.name, life: 3e3 });\n    };\n    function getGroups() {\n      fetchGroupsWithUsers().then((data) => {\n        data.forEach((group2) => {\n          if (group2.users) {\n            group2.users.forEach((user) => {\n              user.fullname = `${user.last_name} ${user.first_name} ${user.middle_name}`;\n              user.group_id = group2.id;\n            });\n          }\n        });\n        groups.value = data.map((group2) => ({\n          ...group2\n        }));\n        groups.value = formatGroupDates(groups.value);\n        console.log(groups.value);\n        loading.value = false;\n      }).catch((error) => console.error(\"Error fetching groups:\", error));\n    }\n    function getUsers() {\n      loading.value = true;\n      fetchUsers().then((data) => {\n        users.value = data.map((user) => ({\n          ...user,\n          fullname: `${user.last_name} ${user.first_name} ${user.middle_name}`\n        }));\n        loading.value = false;\n      }).catch((error) => console.error(\"Error fetching users:\", error)).finally(() => {\n        loading.value = false;\n      });\n    }\n    onMounted(() => {\n      getGroups();\n      getUsers();\n    });\n    return (_ctx, _cache) => {\n      const _component_Toast = _resolveComponent(\"Toast\");\n      const _component_Button = _resolveComponent(\"Button\");\n      const _component_FileUpload = _resolveComponent(\"FileUpload\");\n      const _component_Toolbar = _resolveComponent(\"Toolbar\");\n      const _component_InputIcon = _resolveComponent(\"InputIcon\");\n      const _component_InputText = _resolveComponent(\"InputText\");\n      const _component_IconField = _resolveComponent(\"IconField\");\n      const _component_MultiSelect = _resolveComponent(\"MultiSelect\");\n      const _component_Column = _resolveComponent(\"Column\");\n      const _component_DataTable = _resolveComponent(\"DataTable\");\n      const _component_Dropdown = _resolveComponent(\"Dropdown\");\n      const _component_Dialog = _resolveComponent(\"Dialog\");\n      return _openBlock(), _createElementBlock(_Fragment, null, [\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createVNode(_component_Toast),\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createVNode(_component_Toolbar, { class: \"mb-4\" }, {\n              start: _withCtx(() => [\n                _createVNode(_component_Button, {\n                  label: \"Добавить\",\n                  icon: \"pi pi-plus\",\n                  severity: \"success\",\n                  class: \"mr-2\",\n                  onClick: openNew\n                }),\n                _createVNode(_component_Button, {\n                  label: \"Удалить\",\n                  icon: \"pi pi-trash\",\n                  severity: \"danger\",\n                  onClick: confirmDeleteSelected,\n                  disabled: !_unref(selectedGroups) || !_unref(selectedGroups).length\n                }, null, 8, [\"disabled\"])\n              ]),\n              end: _withCtx(() => [\n                _createVNode(_component_FileUpload, {\n                  mode: \"basic\",\n                  accept: \"image/*\",\n                  maxFileSize: 1e6,\n                  label: \"Import\",\n                  chooseLabel: \"Импорт\",\n                  class: \"mr-2 inline-block\"\n                }),\n                _createVNode(_component_Button, {\n                  label: \"Экспорт\",\n                  icon: \"pi pi-upload\",\n                  severity: \"help\",\n                  onClick: _cache[0] || (_cache[0] = ($event) => exportCSV($event))\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_DataTable, {\n              ref_key: \"dt\",\n              ref: dt,\n              expandedRows: _unref(expandedRows),\n              \"onUpdate:expandedRows\": _cache[4] || (_cache[4] = ($event) => _isRef(expandedRows) ? expandedRows.value = $event : null),\n              value: _unref(groups),\n              selection: _unref(selectedGroups),\n              \"onUpdate:selection\": _cache[5] || (_cache[5] = ($event) => _isRef(selectedGroups) ? selectedGroups.value = $event : null),\n              dataKey: \"id\",\n              style: { \"max-width\": \"1500px\" },\n              loading: _unref(loading),\n              onRowExpand,\n              onRowCollapse,\n              showGridlines: \"\",\n              resizableColumns: \"\",\n              columnResizeMode: \"fit\",\n              paginator: true,\n              rows: 10,\n              filters: _unref(filters),\n              paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n              rowsPerPageOptions: [10, 25, 50],\n              currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n            }, {\n              header: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  _createElementVNode(\"div\", _hoisted_4, [\n                    _hoisted_5,\n                    _createVNode(_component_Button, {\n                      icon: \"pi pi-refresh\",\n                      rounded: \"\",\n                      raised: \"\",\n                      onClick: getGroups\n                    })\n                  ]),\n                  _createVNode(_component_IconField, { iconPosition: \"left\" }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_InputIcon, null, {\n                        default: _withCtx(() => [\n                          _hoisted_6\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_InputText, {\n                        modelValue: _unref(filters)[\"global\"].value,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event) => _unref(filters)[\"global\"].value = $event),\n                        placeholder: \"Поиск...\"\n                      }, null, 8, [\"modelValue\"])\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _createVNode(_component_MultiSelect, {\n                  modelValue: _unref(selectedColumns),\n                  \"onUpdate:modelValue\": [\n                    _cache[2] || (_cache[2] = ($event) => _isRef(selectedColumns) ? selectedColumns.value = $event : null),\n                    onToggleColumns\n                  ],\n                  options: _unref(columns),\n                  optionLabel: \"header\",\n                  display: \"chip\",\n                  placeholder: \"Выберите колонки\"\n                }, null, 8, [\"modelValue\", \"options\"])\n              ]),\n              expansion: _withCtx((slotProps) => [\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"h4\", _hoisted_7, \"Участники группы \" + _toDisplayString(slotProps.data.abbreviation), 1),\n                  slotProps.data.users?.length !== 0 ? (_openBlock(), _createBlock(_component_DataTable, {\n                    key: 0,\n                    filters: _unref(filtersExpandedUsers),\n                    \"onUpdate:filters\": _cache[3] || (_cache[3] = ($event) => _isRef(filtersExpandedUsers) ? filtersExpandedUsers.value = $event : null),\n                    filterDisplay: \"row\",\n                    globalFilterFields: [\"fullname\"],\n                    value: slotProps.data.users,\n                    paginator: true,\n                    rows: 20,\n                    paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n                    rowsPerPageOptions: [20, 40, 80],\n                    currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_Column, {\n                        field: \"fullname\",\n                        header: \"ФИО\"\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createTextVNode(_toDisplayString(slotProps2.data.fullname), 1)\n                        ]),\n                        filter: _withCtx(({ filterModel, filterCallback }) => [\n                          _createVNode(_component_InputText, {\n                            modelValue: filterModel.value,\n                            \"onUpdate:modelValue\": ($event) => filterModel.value = $event,\n                            type: \"text\",\n                            onInput: ($event) => filterCallback(),\n                            class: \"p-column-filter\",\n                            placeholder: \"Поиск по имени\"\n                          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onInput\"])\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        field: \"email\",\n                        header: \"Почта\"\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createTextVNode(_toDisplayString(slotProps2.data.email), 1)\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        field: \"username\",\n                        header: \"Логин\"\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createTextVNode(_toDisplayString(slotProps2.data.username), 1)\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        exportable: false,\n                        style: { \"width\": \"2rem\" }\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createVNode(_component_Button, {\n                            icon: \"pi pi-trash\",\n                            outlined: \"\",\n                            rounded: \"\",\n                            severity: \"danger\",\n                            onClick: ($event) => removeUserFromGroup(slotProps2.data.group_id, [slotProps2.data.id])\n                          }, null, 8, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1032, [\"filters\", \"value\"])) : _createCommentVNode(\"\", true)\n                ])\n              ]),\n              default: _withCtx(() => [\n                _createVNode(_component_Column, {\n                  expander: \"\",\n                  style: { \"width\": \"3rem\" }\n                }),\n                _createVNode(_component_Column, {\n                  selectionMode: \"multiple\",\n                  style: { \"width\": \"3rem\" },\n                  exportable: false\n                }),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(selectedColumns), (col, index) => {\n                  return _openBlock(), _createBlock(_component_Column, {\n                    sortable: \"\",\n                    field: col.field,\n                    header: col.header,\n                    key: col.field + \"_\" + index\n                  }, null, 8, [\"field\", \"header\"]);\n                }), 128)),\n                _createVNode(_component_Column, {\n                  exportable: false,\n                  style: { \"min-width\": \"8rem\" }\n                }, {\n                  body: _withCtx((slotProps) => [\n                    _createVNode(_component_Button, {\n                      icon: \"pi pi-pencil\",\n                      outlined: \"\",\n                      rounded: \"\",\n                      class: \"mr-2\",\n                      onClick: ($event) => editGroup(slotProps.data)\n                    }, null, 8, [\"onClick\"]),\n                    _createVNode(_component_Button, {\n                      icon: \"pi pi-trash\",\n                      outlined: \"\",\n                      rounded: \"\",\n                      severity: \"danger\",\n                      onClick: ($event) => confirmDeleteGroup(slotProps.data)\n                    }, null, 8, [\"onClick\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }, 8, [\"expandedRows\", \"value\", \"selection\", \"loading\", \"filters\"])\n          ]),\n          _createElementVNode(\"div\", null, [\n            _hoisted_8,\n            _createElementVNode(\"div\", _hoisted_9, [\n              _createVNode(_component_Toolbar, { class: \"mb-4\" }, {\n                start: _withCtx(() => [\n                  _createVNode(_component_Button, {\n                    label: \"Добавить\",\n                    icon: \"pi pi-plus\",\n                    severity: \"success\",\n                    onClick: confirmAddSelectedUserToGroup,\n                    disabled: !_unref(selectedUsers) || !_unref(selectedUsers).length || !_unref(group).id\n                  }, null, 8, [\"disabled\"])\n                ]),\n                end: _withCtx(() => [\n                  _createVNode(_component_Dropdown, {\n                    modelValue: _unref(group),\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event) => _isRef(group) ? group.value = $event : null),\n                    options: _unref(groups),\n                    filter: \"\",\n                    optionLabel: \"abbreviation\",\n                    placeholder: \"Выберите группу\",\n                    class: \"w-full md:w-14rem\"\n                  }, {\n                    value: _withCtx((slotProps) => [\n                      slotProps.value.abbreviation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                        _createElementVNode(\"div\", null, _toDisplayString(slotProps.value.abbreviation), 1)\n                      ])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_11, _toDisplayString(slotProps.placeholder), 1))\n                    ]),\n                    option: _withCtx((slotProps) => [\n                      _createElementVNode(\"div\", _hoisted_12, [\n                        _createElementVNode(\"div\", null, _toDisplayString(slotProps.option.full_name), 1),\n                        _createElementVNode(\"div\", null, _toDisplayString(slotProps.option.abbreviation), 1)\n                      ])\n                    ]),\n                    _: 1\n                  }, 8, [\"modelValue\", \"options\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_DataTable, {\n                ref_key: \"dt\",\n                ref: dt,\n                value: _unref(users),\n                selection: _unref(selectedUsers),\n                \"onUpdate:selection\": _cache[9] || (_cache[9] = ($event) => _isRef(selectedUsers) ? selectedUsers.value = $event : null),\n                dataKey: \"id\",\n                loading: _unref(loading),\n                style: { \"max-width\": \"1500px\" },\n                tableStyle: \"min-width: 60rem\",\n                showGridlines: \"\",\n                resizableColumns: \"\",\n                columnResizeMode: \"fit\",\n                paginator: true,\n                rows: 10,\n                filters: _unref(filtersUserTable),\n                paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n                rowsPerPageOptions: [10, 25, 50],\n                currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n              }, {\n                header: _withCtx(() => [\n                  _createElementVNode(\"div\", _hoisted_13, [\n                    _createElementVNode(\"div\", _hoisted_14, [\n                      _hoisted_15,\n                      _createVNode(_component_Button, {\n                        icon: \"pi pi-refresh\",\n                        rounded: \"\",\n                        raised: \"\",\n                        onClick: getUsers\n                      })\n                    ]),\n                    _createVNode(_component_IconField, { iconPosition: \"left\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_InputIcon, null, {\n                          default: _withCtx(() => [\n                            _hoisted_16\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_InputText, {\n                          modelValue: _unref(filtersUserTable)[\"global\"].value,\n                          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event) => _unref(filtersUserTable)[\"global\"].value = $event),\n                          placeholder: \"Поиск...\"\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _createVNode(_component_MultiSelect, {\n                    modelValue: _unref(selectedColumnsUser),\n                    \"onUpdate:modelValue\": [\n                      _cache[8] || (_cache[8] = ($event) => _isRef(selectedColumnsUser) ? selectedColumnsUser.value = $event : null),\n                      onToggleColumns\n                    ],\n                    options: _unref(columnsUser),\n                    optionLabel: \"header\",\n                    display: \"chip\",\n                    placeholder: \"Выберите колонки\"\n                  }, null, 8, [\"modelValue\", \"options\"])\n                ]),\n                empty: _withCtx(() => [\n                  _createTextVNode(\" Пользователи не найдены\")\n                ]),\n                default: _withCtx(() => [\n                  _createVNode(_component_Column, {\n                    selectionMode: \"multiple\",\n                    style: { \"width\": \"3rem\" },\n                    exportable: false\n                  }),\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(selectedColumnsUser), (col, index) => {\n                    return _openBlock(), _createBlock(_component_Column, {\n                      sortable: \"\",\n                      field: col.field,\n                      header: col.header,\n                      key: col.field + \"_\" + index\n                    }, _createSlots({ _: 2 }, [\n                      col.field !== \"groups\" && col.field !== \"role.name\" ? {\n                        name: \"body\",\n                        fn: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data[col.field]), 1)\n                        ]),\n                        key: \"0\"\n                      } : col.field === \"role.name\" ? {\n                        name: \"body\",\n                        fn: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data.role.name), 1)\n                        ]),\n                        key: \"1\"\n                      } : col.field === \"groups\" ? {\n                        name: \"body\",\n                        fn: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(_unref(getGroupFullNames)(slotProps.data.groups)), 1)\n                        ]),\n                        key: \"2\"\n                      } : void 0\n                    ]), 1032, [\"field\", \"header\"]);\n                  }), 128)),\n                  _createVNode(_component_Column, {\n                    exportable: false,\n                    style: { \"min-width\": \"8rem\" }\n                  }, {\n                    body: _withCtx((slotProps) => [\n                      _createVNode(_component_Button, {\n                        icon: \"pi pi-plus\",\n                        outlined: \"\",\n                        rounded: \"\",\n                        class: \"mr-2\",\n                        severity: \"success\",\n                        disabled: !_unref(group).id,\n                        onClick: ($event) => addUserToGroup(_unref(group).id, [slotProps.data.id])\n                      }, null, 8, [\"disabled\", \"onClick\"]),\n                      _createVNode(_component_Button, {\n                        icon: \"pi pi-trash\",\n                        outlined: \"\",\n                        rounded: \"\",\n                        severity: \"danger\",\n                        disabled: isGroupInDataGroups(_unref(group).id, slotProps.data.groups),\n                        onClick: ($event) => removeUserFromGroup(_unref(group).id, [slotProps.data.id])\n                      }, null, 8, [\"disabled\", \"onClick\"])\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              }, 8, [\"value\", \"selection\", \"loading\", \"filters\"])\n            ])\n          ])\n        ]),\n        _createVNode(_component_Dialog, {\n          visible: _unref(groupDialog),\n          \"onUpdate:visible\": _cache[12] || (_cache[12] = ($event) => _isRef(groupDialog) ? groupDialog.value = $event : null),\n          style: { width: \"450px\" },\n          header: \"Сведения о группе\",\n          modal: true,\n          class: \"p-fluid\"\n        }, {\n          footer: _withCtx(() => [\n            _createVNode(_component_Button, {\n              label: \"Отмена\",\n              icon: \"pi pi-times\",\n              text: \"\",\n              onClick: hideDialog\n            }),\n            _createVNode(_component_Button, {\n              label: \"Сохранить\",\n              icon: \"pi pi-check\",\n              text: \"\",\n              onClick: saveGroup\n            })\n          ]),\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_17, [\n              _hoisted_18,\n              _createVNode(_component_InputText, {\n                class: \"mt-2\",\n                id: \"full_name\",\n                modelValue: _unref(group).full_name,\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event) => _unref(group).full_name = $event),\n                modelModifiers: { trim: true },\n                required: \"\",\n                invalid: _unref(submitted) && !_unref(group).full_name\n              }, null, 8, [\"modelValue\", \"invalid\"]),\n              _unref(submitted) && !_unref(group).full_name ? (_openBlock(), _createElementBlock(\"small\", _hoisted_19, \"Полное название обязательно для заполнения.\")) : _createCommentVNode(\"\", true)\n            ]),\n            _createElementVNode(\"div\", _hoisted_20, [\n              _hoisted_21,\n              _createVNode(_component_InputText, {\n                class: \"mt-2\",\n                id: \"abbreviation\",\n                modelValue: _unref(group).abbreviation,\n                \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event) => _unref(group).abbreviation = $event),\n                modelModifiers: { trim: true },\n                required: \"\",\n                invalid: _unref(submitted) && !_unref(group).abbreviation\n              }, null, 8, [\"modelValue\", \"invalid\"]),\n              _unref(submitted) && !_unref(group).abbreviation ? (_openBlock(), _createElementBlock(\"small\", _hoisted_22, \"Аббревиатура обязательна для заполнения.\")) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"visible\"]),\n        _createVNode(_component_Dialog, {\n          visible: _unref(deleteGroupDialog),\n          \"onUpdate:visible\": _cache[14] || (_cache[14] = ($event) => _isRef(deleteGroupDialog) ? deleteGroupDialog.value = $event : null),\n          style: { width: \"500px\" },\n          header: \"Подтверждение\",\n          modal: true\n        }, {\n          footer: _withCtx(() => [\n            _createVNode(_component_Button, {\n              label: \"Нет\",\n              icon: \"pi pi-times\",\n              text: \"\",\n              onClick: _cache[13] || (_cache[13] = ($event) => deleteGroupDialog.value = false)\n            }),\n            _createVNode(_component_Button, {\n              label: \"Да\",\n              icon: \"pi pi-check\",\n              text: \"\",\n              onClick: deleteGroup\n            })\n          ]),\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_23, [\n              _hoisted_24,\n              _unref(group) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_25, [\n                _createTextVNode(\"Вы действительно хотите удалить группу \"),\n                _createElementVNode(\"b\", null, _toDisplayString(_unref(group).full_name), 1)\n              ])) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"visible\"]),\n        _createVNode(_component_Dialog, {\n          visible: _unref(deleteGroupsDialog),\n          \"onUpdate:visible\": _cache[16] || (_cache[16] = ($event) => _isRef(deleteGroupsDialog) ? deleteGroupsDialog.value = $event : null),\n          style: { width: \"450px\" },\n          header: \"Подтверждение\",\n          modal: true\n        }, {\n          footer: _withCtx(() => [\n            _createVNode(_component_Button, {\n              label: \"Нет\",\n              icon: \"pi pi-times\",\n              text: \"\",\n              onClick: _cache[15] || (_cache[15] = ($event) => deleteGroupsDialog.value = false)\n            }),\n            _createVNode(_component_Button, {\n              label: \"Да\",\n              icon: \"pi pi-check\",\n              text: \"\",\n              onClick: deleteSelectedGroups\n            })\n          ]),\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_26, [\n              _hoisted_27,\n              _unref(group) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, \"Вы действительно хотите удалить выделенные группы?\")) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"visible\"])\n      ], 64);\n    };\n  }\n});\n",
      "start": 1715794737891,
      "end": 1715794737903,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxhB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxzrI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzrI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACntlJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACllJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdjG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxjG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxpG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvhC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACntC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzpG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpnlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACppnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtpvG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtlzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACplE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjxI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChzvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvxvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChhE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzpjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClhzJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACprtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxhD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxpH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACprD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9H,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACphI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjzI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACljD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxlC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACllE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxrI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrpnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrhC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrjH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpvG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/H,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpjH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrtM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvpzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrtM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACllC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvflC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACllC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACflC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1715794737903,
      "end": 1715794737912,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1715794737912,
      "end": 1715794737912,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1715794737912,
      "end": 1715794737912,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1715794737912,
      "end": 1715794737912,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"primevue/toast\";\nimport { default as __nuxt_component_1 } from \"primevue/button\";\nimport { default as __nuxt_component_2 } from \"primevue/fileupload\";\nimport { default as __nuxt_component_3 } from \"primevue/toolbar\";\nimport { default as __nuxt_component_4 } from \"primevue/inputicon\";\nimport { default as __nuxt_component_5 } from \"primevue/inputtext\";\nimport { default as __nuxt_component_6 } from \"primevue/iconfield\";\nimport { default as __nuxt_component_7 } from \"primevue/multiselect\";\nimport { default as __nuxt_component_8 } from \"primevue/column\";\nimport { default as __nuxt_component_9 } from \"primevue/datatable\";\nimport { default as __nuxt_component_10 } from \"primevue/dropdown\";\nimport { default as __nuxt_component_11 } from \"primevue/dialog\";\nimport { definePageMeta } from 'E:/Stusy/web-client/node_modules/nuxt/dist/pages/runtime/composables';\nimport { useHead } from '@unhead/vue';\nimport { useRuntimeConfig, useNuxtApp } from '#app/nuxt';\nimport { useRouter } from '#app/composables/router';\nimport { ref, onMounted } from 'vue';\nimport { useToast } from 'primevue/usetoast';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, unref as _unref, withCtx as _withCtx, createElementVNode as _createElementVNode, isRef as _isRef, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, createSlots as _createSlots, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-8c1ca0b2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"main-content flex-col\" };\nconst _hoisted_2 = { class: \"card\" };\nconst _hoisted_3 = { class: \"flex flex-wrap gap-3 items-center justify-between mb-3\" };\nconst _hoisted_4 = { class: \"flex items-center gap-3\" };\nconst _hoisted_5 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"h4\", { class: \"m-0 text-xl text-900 font-bold\" }, \"Управление группами\", -1));\nconst _hoisted_6 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1));\nconst _hoisted_7 = { class: \"m-0 mb-2\" };\nconst _hoisted_8 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"h2\", null, \"Присоединение к группе\", -1));\nconst _hoisted_9 = { class: \"card\" };\nconst _hoisted_10 = {\n  key: 0,\n  class: \"flex align-items-center\"\n};\nconst _hoisted_11 = { key: 1 };\nconst _hoisted_12 = { class: \"flex flex-col justify-center flex-wrap\" };\nconst _hoisted_13 = { class: \"flex flex-wrap gap-3 items-center justify-between mb-3\" };\nconst _hoisted_14 = { class: \"flex items-center gap-3\" };\nconst _hoisted_15 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"h4\", { class: \"m-0 text-xl text-900 font-bold\" }, \"Пользователи\", -1));\nconst _hoisted_16 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1));\nconst _hoisted_17 = { class: \"field my-3\" };\nconst _hoisted_18 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"label\", { for: \"full_name\" }, \"Полное название\", -1));\nconst _hoisted_19 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_20 = { class: \"field my-3\" };\nconst _hoisted_21 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"label\", { for: \"abbreviation\" }, \"Аббревиатура\", -1));\nconst _hoisted_22 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_23 = { class: \"confirmation-content p-3\" };\nconst _hoisted_24 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", {\n  class: \"pi pi-exclamation-triangle mr-3\",\n  style: { \"font-size\": \"2rem\" }\n}, null, -1));\nconst _hoisted_25 = { key: 0 };\nconst _hoisted_26 = { class: \"confirmation-content p-3\" };\nconst _hoisted_27 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", {\n  class: \"pi pi-exclamation-triangle mr-3\",\n  style: { \"font-size\": \"2rem\" }\n}, null, -1));\nconst _hoisted_28 = { key: 0 };\nimport {\n  createGroup,\n  deleteGroups,\n  updateGroup,\n  deleteGroupUser,\n  formatGroupDates,\n  getGroupFullNames,\n  addUsersToGroup,\n  fetchGroupsWithUsers\n} from \"~/helpers/groups\";\nimport { FilterMatchMode } from \"primevue/api\";\nimport { fetchUsers } from \"~/helpers/user\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"index\",\n  setup(__props) {\n    definePageMeta({\n      layout: \"home\",\n      middleware: [\n        \"admin\"\n      ]\n    });\n    useHead({\n      title: \"Администрирование групп\"\n    });\n    const runtimeConfig = useRuntimeConfig();\n    const nuxtApp = useNuxtApp();\n    const router = useRouter();\n    const loading = ref(true);\n    const toast = useToast();\n    const dt = ref();\n    const groups = ref();\n    const groupDialog = ref(false);\n    const deleteGroupDialog = ref(false);\n    const deleteGroupsDialog = ref(false);\n    const group = ref({});\n    const selectedGroups = ref();\n    const filters = ref({\n      \"global\": { value: null, matchMode: FilterMatchMode.CONTAINS }\n    });\n    const filtersUserTable = ref({\n      \"global\": { value: null, matchMode: FilterMatchMode.CONTAINS }\n    });\n    const filtersExpandedUsers = ref({\n      \"fullname\": { value: null, matchMode: FilterMatchMode.CONTAINS }\n    });\n    const submitted = ref(false);\n    const roles = ref([]);\n    const statuses = ref([\n      { label: \"ACTIVE\", value: \"active\" },\n      { label: \"INACTIVE\", value: \"inactive\" },\n      { label: \"BLOCKED\", value: \"blocked\" }\n    ]);\n    const columns = ref([\n      { field: \"full_name\", header: \"Наименование\" },\n      { field: \"abbreviation\", header: \"Аббревиатура\" },\n      { field: \"create_at\", header: \"Дата создания\" },\n      { field: \"updated_at\", header: \"Дата обновления\" }\n    ]);\n    const selectedColumns = ref(columns.value.filter((column) => column.field !== \"updated_at\"));\n    const expandedRows = ref({});\n    const selectedUsers = ref();\n    const users = ref();\n    const columnsUser = ref([\n      { field: \"email\", header: \"Почта\" },\n      { field: \"fullname\", header: \"ФИО\" },\n      { field: \"username\", header: \"Логин\" },\n      { field: \"about\", header: \"Описание\" },\n      { field: \"role.name\", header: \"Роль\" },\n      { field: \"groups\", header: \"Группы\" }\n    ]);\n    const selectedColumnsUser = ref(columnsUser.value.filter((column) => column.field !== \"about\"));\n    const openNew = () => {\n      group.value = {};\n      submitted.value = false;\n      groupDialog.value = true;\n    };\n    const hideDialog = () => {\n      groupDialog.value = false;\n      submitted.value = false;\n    };\n    const saveGroup = () => {\n      submitted.value = true;\n      if (group?.value.full_name?.trim()) {\n        if (group.value.id) {\n          console.log(group.value.id, group.value);\n          updateGroup(group.value.id, group.value).then((data) => {\n            groups.value[findIndexById(group.value.id)] = data;\n            toast.add({ severity: \"success\", summary: \"Successful\", detail: \"group Updated\", life: 3e3 });\n            groupDialog.value = false;\n            group.value = {};\n            getGroups();\n          }).catch((error) => console.error(\"Error updating group:\", error));\n        } else {\n          createGroup(group.value).then((data) => {\n            groups.value.push(data);\n            toast.add({ severity: \"success\", summary: \"Successful\", detail: \"group Created\", life: 3e3 });\n          }).catch((error) => console.error(\"Error creating group:\", error));\n        }\n        groupDialog.value = false;\n        group.value = {};\n      }\n    };\n    const editGroup = (usr) => {\n      group.value = { ...usr };\n      groupDialog.value = true;\n      console.log(group);\n    };\n    const confirmDeleteGroup = (usr) => {\n      group.value = usr;\n      deleteGroupDialog.value = true;\n    };\n    const deleteGroup = () => {\n      deleteGroups([group.value.id]).then((data) => {\n        groups.value = groups.value.filter((val) => val.id !== group.value.id);\n        deleteGroupDialog.value = false;\n        group.value = {};\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Группа удалена\", life: 3e3 });\n      }).catch((error) => console.error(\"Error delete group:\", error));\n    };\n    const removeUserFromGroup = (groupId, userIds) => {\n      deleteGroupUser(groupId, userIds).then(() => {\n        getGroups();\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Пользователь удален из группы\", life: 3e3 });\n      }).catch((error) => console.error(\"Ошибка удаления пользователя из группы:\", error)).finally(getUsers);\n    };\n    const addUserToGroup = (groupId, userIds) => {\n      addUsersToGroup(groupId, userIds).then(() => {\n        getGroups();\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Пользователь добавлен в группу\", life: 3e3 });\n      }).catch((error) => console.error(\"Ошибка добавления пользователя в группу:\", error));\n    };\n    const findIndexById = (id) => {\n      let index = -1;\n      for (let i = 0; i < groups.value.length; i++) {\n        if (groups.value[i].id === id) {\n          index = i;\n          break;\n        }\n      }\n      return index;\n    };\n    const createId = () => {\n      let id = \"\";\n      var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n      for (var i = 0; i < 5; i++) {\n        id += chars.charAt(Math.floor(Math.random() * chars.length));\n      }\n      return id;\n    };\n    const exportCSV = () => {\n      dt.value.exportCSV();\n    };\n    const confirmDeleteSelected = () => {\n      deleteGroupsDialog.value = true;\n    };\n    const confirmAddSelectedUserToGroup = () => {\n      console.log(selectedUsers.value);\n      addUserToGroup(group.value.id, selectedUsers.value.map((user) => user.id));\n      selectedUsers.value = null;\n    };\n    const deleteSelectedGroups = () => {\n      deleteGroups(selectedGroups.value.map((group2) => group2.id)).then((data) => {\n        groups.value = groups.value.filter((val) => !selectedGroups.value.includes(val));\n        deleteGroupsDialog.value = false;\n        selectedGroups.value = null;\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Пользователи удалены\", life: 3e3 });\n      }).catch((error) => console.error(\"Error delete groups:\", error));\n    };\n    const isGroupInDataGroups = (groupId, groups2) => {\n      if (!groupId) {\n        return true;\n      }\n      const hasValidGroupId = groups2.some((group2) => {\n        return group2?.id === groupId || group2?.children?.some((child) => child?.id === groupId);\n      });\n      return !hasValidGroupId;\n    };\n    const onToggleColumns = (val) => {\n      selectedColumns.value = columns.value.filter((col) => val.includes(col));\n    };\n    const onRowExpand = (event) => {\n      toast.add({ severity: \"info\", summary: \"Product Expanded\", detail: event.data.name, life: 3e3 });\n    };\n    const onRowCollapse = (event) => {\n      toast.add({ severity: \"success\", summary: \"Product Collapsed\", detail: event.data.name, life: 3e3 });\n    };\n    function getGroups() {\n      fetchGroupsWithUsers().then((data) => {\n        data.forEach((group2) => {\n          if (group2.users) {\n            group2.users.forEach((user) => {\n              user.fullname = `${user.last_name} ${user.first_name} ${user.middle_name}`;\n              user.group_id = group2.id;\n            });\n          }\n        });\n        groups.value = data.map((group2) => ({\n          ...group2\n        }));\n        groups.value = formatGroupDates(groups.value);\n        console.log(groups.value);\n        loading.value = false;\n      }).catch((error) => console.error(\"Error fetching groups:\", error));\n    }\n    function getUsers() {\n      loading.value = true;\n      fetchUsers().then((data) => {\n        users.value = data.map((user) => ({\n          ...user,\n          fullname: `${user.last_name} ${user.first_name} ${user.middle_name}`\n        }));\n        loading.value = false;\n      }).catch((error) => console.error(\"Error fetching users:\", error)).finally(() => {\n        loading.value = false;\n      });\n    }\n    onMounted(() => {\n      getGroups();\n      getUsers();\n    });\n    return (_ctx, _cache) => {\n      const _component_Toast = __nuxt_component_0;\n      const _component_Button = __nuxt_component_1;\n      const _component_FileUpload = __nuxt_component_2;\n      const _component_Toolbar = __nuxt_component_3;\n      const _component_InputIcon = __nuxt_component_4;\n      const _component_InputText = __nuxt_component_5;\n      const _component_IconField = __nuxt_component_6;\n      const _component_MultiSelect = __nuxt_component_7;\n      const _component_Column = __nuxt_component_8;\n      const _component_DataTable = __nuxt_component_9;\n      const _component_Dropdown = __nuxt_component_10;\n      const _component_Dialog = __nuxt_component_11;\n      return _openBlock(), _createElementBlock(_Fragment, null, [\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createVNode(_component_Toast),\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createVNode(_component_Toolbar, { class: \"mb-4\" }, {\n              start: _withCtx(() => [\n                _createVNode(_component_Button, {\n                  label: \"Добавить\",\n                  icon: \"pi pi-plus\",\n                  severity: \"success\",\n                  class: \"mr-2\",\n                  onClick: openNew\n                }),\n                _createVNode(_component_Button, {\n                  label: \"Удалить\",\n                  icon: \"pi pi-trash\",\n                  severity: \"danger\",\n                  onClick: confirmDeleteSelected,\n                  disabled: !_unref(selectedGroups) || !_unref(selectedGroups).length\n                }, null, 8, [\"disabled\"])\n              ]),\n              end: _withCtx(() => [\n                _createVNode(_component_FileUpload, {\n                  mode: \"basic\",\n                  accept: \"image/*\",\n                  maxFileSize: 1e6,\n                  label: \"Import\",\n                  chooseLabel: \"Импорт\",\n                  class: \"mr-2 inline-block\"\n                }),\n                _createVNode(_component_Button, {\n                  label: \"Экспорт\",\n                  icon: \"pi pi-upload\",\n                  severity: \"help\",\n                  onClick: _cache[0] || (_cache[0] = ($event) => exportCSV($event))\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_DataTable, {\n              ref_key: \"dt\",\n              ref: dt,\n              expandedRows: _unref(expandedRows),\n              \"onUpdate:expandedRows\": _cache[4] || (_cache[4] = ($event) => _isRef(expandedRows) ? expandedRows.value = $event : null),\n              value: _unref(groups),\n              selection: _unref(selectedGroups),\n              \"onUpdate:selection\": _cache[5] || (_cache[5] = ($event) => _isRef(selectedGroups) ? selectedGroups.value = $event : null),\n              dataKey: \"id\",\n              style: { \"max-width\": \"1500px\" },\n              loading: _unref(loading),\n              onRowExpand,\n              onRowCollapse,\n              showGridlines: \"\",\n              resizableColumns: \"\",\n              columnResizeMode: \"fit\",\n              paginator: true,\n              rows: 10,\n              filters: _unref(filters),\n              paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n              rowsPerPageOptions: [10, 25, 50],\n              currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n            }, {\n              header: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  _createElementVNode(\"div\", _hoisted_4, [\n                    _hoisted_5,\n                    _createVNode(_component_Button, {\n                      icon: \"pi pi-refresh\",\n                      rounded: \"\",\n                      raised: \"\",\n                      onClick: getGroups\n                    })\n                  ]),\n                  _createVNode(_component_IconField, { iconPosition: \"left\" }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_InputIcon, null, {\n                        default: _withCtx(() => [\n                          _hoisted_6\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_InputText, {\n                        modelValue: _unref(filters)[\"global\"].value,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event) => _unref(filters)[\"global\"].value = $event),\n                        placeholder: \"Поиск...\"\n                      }, null, 8, [\"modelValue\"])\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _createVNode(_component_MultiSelect, {\n                  modelValue: _unref(selectedColumns),\n                  \"onUpdate:modelValue\": [\n                    _cache[2] || (_cache[2] = ($event) => _isRef(selectedColumns) ? selectedColumns.value = $event : null),\n                    onToggleColumns\n                  ],\n                  options: _unref(columns),\n                  optionLabel: \"header\",\n                  display: \"chip\",\n                  placeholder: \"Выберите колонки\"\n                }, null, 8, [\"modelValue\", \"options\"])\n              ]),\n              expansion: _withCtx((slotProps) => [\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"h4\", _hoisted_7, \"Участники группы \" + _toDisplayString(slotProps.data.abbreviation), 1),\n                  slotProps.data.users?.length !== 0 ? (_openBlock(), _createBlock(_component_DataTable, {\n                    key: 0,\n                    filters: _unref(filtersExpandedUsers),\n                    \"onUpdate:filters\": _cache[3] || (_cache[3] = ($event) => _isRef(filtersExpandedUsers) ? filtersExpandedUsers.value = $event : null),\n                    filterDisplay: \"row\",\n                    globalFilterFields: [\"fullname\"],\n                    value: slotProps.data.users,\n                    paginator: true,\n                    rows: 20,\n                    paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n                    rowsPerPageOptions: [20, 40, 80],\n                    currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_Column, {\n                        field: \"fullname\",\n                        header: \"ФИО\"\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createTextVNode(_toDisplayString(slotProps2.data.fullname), 1)\n                        ]),\n                        filter: _withCtx(({ filterModel, filterCallback }) => [\n                          _createVNode(_component_InputText, {\n                            modelValue: filterModel.value,\n                            \"onUpdate:modelValue\": ($event) => filterModel.value = $event,\n                            type: \"text\",\n                            onInput: ($event) => filterCallback(),\n                            class: \"p-column-filter\",\n                            placeholder: \"Поиск по имени\"\n                          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onInput\"])\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        field: \"email\",\n                        header: \"Почта\"\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createTextVNode(_toDisplayString(slotProps2.data.email), 1)\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        field: \"username\",\n                        header: \"Логин\"\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createTextVNode(_toDisplayString(slotProps2.data.username), 1)\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        exportable: false,\n                        style: { \"width\": \"2rem\" }\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createVNode(_component_Button, {\n                            icon: \"pi pi-trash\",\n                            outlined: \"\",\n                            rounded: \"\",\n                            severity: \"danger\",\n                            onClick: ($event) => removeUserFromGroup(slotProps2.data.group_id, [slotProps2.data.id])\n                          }, null, 8, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1032, [\"filters\", \"value\"])) : _createCommentVNode(\"\", true)\n                ])\n              ]),\n              default: _withCtx(() => [\n                _createVNode(_component_Column, {\n                  expander: \"\",\n                  style: { \"width\": \"3rem\" }\n                }),\n                _createVNode(_component_Column, {\n                  selectionMode: \"multiple\",\n                  style: { \"width\": \"3rem\" },\n                  exportable: false\n                }),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(selectedColumns), (col, index) => {\n                  return _openBlock(), _createBlock(_component_Column, {\n                    sortable: \"\",\n                    field: col.field,\n                    header: col.header,\n                    key: col.field + \"_\" + index\n                  }, null, 8, [\"field\", \"header\"]);\n                }), 128)),\n                _createVNode(_component_Column, {\n                  exportable: false,\n                  style: { \"min-width\": \"8rem\" }\n                }, {\n                  body: _withCtx((slotProps) => [\n                    _createVNode(_component_Button, {\n                      icon: \"pi pi-pencil\",\n                      outlined: \"\",\n                      rounded: \"\",\n                      class: \"mr-2\",\n                      onClick: ($event) => editGroup(slotProps.data)\n                    }, null, 8, [\"onClick\"]),\n                    _createVNode(_component_Button, {\n                      icon: \"pi pi-trash\",\n                      outlined: \"\",\n                      rounded: \"\",\n                      severity: \"danger\",\n                      onClick: ($event) => confirmDeleteGroup(slotProps.data)\n                    }, null, 8, [\"onClick\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }, 8, [\"expandedRows\", \"value\", \"selection\", \"loading\", \"filters\"])\n          ]),\n          _createElementVNode(\"div\", null, [\n            _hoisted_8,\n            _createElementVNode(\"div\", _hoisted_9, [\n              _createVNode(_component_Toolbar, { class: \"mb-4\" }, {\n                start: _withCtx(() => [\n                  _createVNode(_component_Button, {\n                    label: \"Добавить\",\n                    icon: \"pi pi-plus\",\n                    severity: \"success\",\n                    onClick: confirmAddSelectedUserToGroup,\n                    disabled: !_unref(selectedUsers) || !_unref(selectedUsers).length || !_unref(group).id\n                  }, null, 8, [\"disabled\"])\n                ]),\n                end: _withCtx(() => [\n                  _createVNode(_component_Dropdown, {\n                    modelValue: _unref(group),\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event) => _isRef(group) ? group.value = $event : null),\n                    options: _unref(groups),\n                    filter: \"\",\n                    optionLabel: \"abbreviation\",\n                    placeholder: \"Выберите группу\",\n                    class: \"w-full md:w-14rem\"\n                  }, {\n                    value: _withCtx((slotProps) => [\n                      slotProps.value.abbreviation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                        _createElementVNode(\"div\", null, _toDisplayString(slotProps.value.abbreviation), 1)\n                      ])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_11, _toDisplayString(slotProps.placeholder), 1))\n                    ]),\n                    option: _withCtx((slotProps) => [\n                      _createElementVNode(\"div\", _hoisted_12, [\n                        _createElementVNode(\"div\", null, _toDisplayString(slotProps.option.full_name), 1),\n                        _createElementVNode(\"div\", null, _toDisplayString(slotProps.option.abbreviation), 1)\n                      ])\n                    ]),\n                    _: 1\n                  }, 8, [\"modelValue\", \"options\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_DataTable, {\n                ref_key: \"dt\",\n                ref: dt,\n                value: _unref(users),\n                selection: _unref(selectedUsers),\n                \"onUpdate:selection\": _cache[9] || (_cache[9] = ($event) => _isRef(selectedUsers) ? selectedUsers.value = $event : null),\n                dataKey: \"id\",\n                loading: _unref(loading),\n                style: { \"max-width\": \"1500px\" },\n                tableStyle: \"min-width: 60rem\",\n                showGridlines: \"\",\n                resizableColumns: \"\",\n                columnResizeMode: \"fit\",\n                paginator: true,\n                rows: 10,\n                filters: _unref(filtersUserTable),\n                paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n                rowsPerPageOptions: [10, 25, 50],\n                currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n              }, {\n                header: _withCtx(() => [\n                  _createElementVNode(\"div\", _hoisted_13, [\n                    _createElementVNode(\"div\", _hoisted_14, [\n                      _hoisted_15,\n                      _createVNode(_component_Button, {\n                        icon: \"pi pi-refresh\",\n                        rounded: \"\",\n                        raised: \"\",\n                        onClick: getUsers\n                      })\n                    ]),\n                    _createVNode(_component_IconField, { iconPosition: \"left\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_InputIcon, null, {\n                          default: _withCtx(() => [\n                            _hoisted_16\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_InputText, {\n                          modelValue: _unref(filtersUserTable)[\"global\"].value,\n                          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event) => _unref(filtersUserTable)[\"global\"].value = $event),\n                          placeholder: \"Поиск...\"\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _createVNode(_component_MultiSelect, {\n                    modelValue: _unref(selectedColumnsUser),\n                    \"onUpdate:modelValue\": [\n                      _cache[8] || (_cache[8] = ($event) => _isRef(selectedColumnsUser) ? selectedColumnsUser.value = $event : null),\n                      onToggleColumns\n                    ],\n                    options: _unref(columnsUser),\n                    optionLabel: \"header\",\n                    display: \"chip\",\n                    placeholder: \"Выберите колонки\"\n                  }, null, 8, [\"modelValue\", \"options\"])\n                ]),\n                empty: _withCtx(() => [\n                  _createTextVNode(\" Пользователи не найдены\")\n                ]),\n                default: _withCtx(() => [\n                  _createVNode(_component_Column, {\n                    selectionMode: \"multiple\",\n                    style: { \"width\": \"3rem\" },\n                    exportable: false\n                  }),\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(selectedColumnsUser), (col, index) => {\n                    return _openBlock(), _createBlock(_component_Column, {\n                      sortable: \"\",\n                      field: col.field,\n                      header: col.header,\n                      key: col.field + \"_\" + index\n                    }, _createSlots({ _: 2 }, [\n                      col.field !== \"groups\" && col.field !== \"role.name\" ? {\n                        name: \"body\",\n                        fn: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data[col.field]), 1)\n                        ]),\n                        key: \"0\"\n                      } : col.field === \"role.name\" ? {\n                        name: \"body\",\n                        fn: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data.role.name), 1)\n                        ]),\n                        key: \"1\"\n                      } : col.field === \"groups\" ? {\n                        name: \"body\",\n                        fn: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(_unref(getGroupFullNames)(slotProps.data.groups)), 1)\n                        ]),\n                        key: \"2\"\n                      } : void 0\n                    ]), 1032, [\"field\", \"header\"]);\n                  }), 128)),\n                  _createVNode(_component_Column, {\n                    exportable: false,\n                    style: { \"min-width\": \"8rem\" }\n                  }, {\n                    body: _withCtx((slotProps) => [\n                      _createVNode(_component_Button, {\n                        icon: \"pi pi-plus\",\n                        outlined: \"\",\n                        rounded: \"\",\n                        class: \"mr-2\",\n                        severity: \"success\",\n                        disabled: !_unref(group).id,\n                        onClick: ($event) => addUserToGroup(_unref(group).id, [slotProps.data.id])\n                      }, null, 8, [\"disabled\", \"onClick\"]),\n                      _createVNode(_component_Button, {\n                        icon: \"pi pi-trash\",\n                        outlined: \"\",\n                        rounded: \"\",\n                        severity: \"danger\",\n                        disabled: isGroupInDataGroups(_unref(group).id, slotProps.data.groups),\n                        onClick: ($event) => removeUserFromGroup(_unref(group).id, [slotProps.data.id])\n                      }, null, 8, [\"disabled\", \"onClick\"])\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              }, 8, [\"value\", \"selection\", \"loading\", \"filters\"])\n            ])\n          ])\n        ]),\n        _createVNode(_component_Dialog, {\n          visible: _unref(groupDialog),\n          \"onUpdate:visible\": _cache[12] || (_cache[12] = ($event) => _isRef(groupDialog) ? groupDialog.value = $event : null),\n          style: { width: \"450px\" },\n          header: \"Сведения о группе\",\n          modal: true,\n          class: \"p-fluid\"\n        }, {\n          footer: _withCtx(() => [\n            _createVNode(_component_Button, {\n              label: \"Отмена\",\n              icon: \"pi pi-times\",\n              text: \"\",\n              onClick: hideDialog\n            }),\n            _createVNode(_component_Button, {\n              label: \"Сохранить\",\n              icon: \"pi pi-check\",\n              text: \"\",\n              onClick: saveGroup\n            })\n          ]),\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_17, [\n              _hoisted_18,\n              _createVNode(_component_InputText, {\n                class: \"mt-2\",\n                id: \"full_name\",\n                modelValue: _unref(group).full_name,\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event) => _unref(group).full_name = $event),\n                modelModifiers: { trim: true },\n                required: \"\",\n                invalid: _unref(submitted) && !_unref(group).full_name\n              }, null, 8, [\"modelValue\", \"invalid\"]),\n              _unref(submitted) && !_unref(group).full_name ? (_openBlock(), _createElementBlock(\"small\", _hoisted_19, \"Полное название обязательно для заполнения.\")) : _createCommentVNode(\"\", true)\n            ]),\n            _createElementVNode(\"div\", _hoisted_20, [\n              _hoisted_21,\n              _createVNode(_component_InputText, {\n                class: \"mt-2\",\n                id: \"abbreviation\",\n                modelValue: _unref(group).abbreviation,\n                \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event) => _unref(group).abbreviation = $event),\n                modelModifiers: { trim: true },\n                required: \"\",\n                invalid: _unref(submitted) && !_unref(group).abbreviation\n              }, null, 8, [\"modelValue\", \"invalid\"]),\n              _unref(submitted) && !_unref(group).abbreviation ? (_openBlock(), _createElementBlock(\"small\", _hoisted_22, \"Аббревиатура обязательна для заполнения.\")) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"visible\"]),\n        _createVNode(_component_Dialog, {\n          visible: _unref(deleteGroupDialog),\n          \"onUpdate:visible\": _cache[14] || (_cache[14] = ($event) => _isRef(deleteGroupDialog) ? deleteGroupDialog.value = $event : null),\n          style: { width: \"500px\" },\n          header: \"Подтверждение\",\n          modal: true\n        }, {\n          footer: _withCtx(() => [\n            _createVNode(_component_Button, {\n              label: \"Нет\",\n              icon: \"pi pi-times\",\n              text: \"\",\n              onClick: _cache[13] || (_cache[13] = ($event) => deleteGroupDialog.value = false)\n            }),\n            _createVNode(_component_Button, {\n              label: \"Да\",\n              icon: \"pi pi-check\",\n              text: \"\",\n              onClick: deleteGroup\n            })\n          ]),\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_23, [\n              _hoisted_24,\n              _unref(group) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_25, [\n                _createTextVNode(\"Вы действительно хотите удалить группу \"),\n                _createElementVNode(\"b\", null, _toDisplayString(_unref(group).full_name), 1)\n              ])) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"visible\"]),\n        _createVNode(_component_Dialog, {\n          visible: _unref(deleteGroupsDialog),\n          \"onUpdate:visible\": _cache[16] || (_cache[16] = ($event) => _isRef(deleteGroupsDialog) ? deleteGroupsDialog.value = $event : null),\n          style: { width: \"450px\" },\n          header: \"Подтверждение\",\n          modal: true\n        }, {\n          footer: _withCtx(() => [\n            _createVNode(_component_Button, {\n              label: \"Нет\",\n              icon: \"pi pi-times\",\n              text: \"\",\n              onClick: _cache[15] || (_cache[15] = ($event) => deleteGroupsDialog.value = false)\n            }),\n            _createVNode(_component_Button, {\n              label: \"Да\",\n              icon: \"pi pi-check\",\n              text: \"\",\n              onClick: deleteSelectedGroups\n            })\n          ]),\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_26, [\n              _hoisted_27,\n              _unref(group) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, \"Вы действительно хотите удалить выделенные группы?\")) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"visible\"])\n      ], 64);\n    };\n  }\n});\n",
      "start": 1715794737912,
      "end": 1715794737913,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "result": "import { default as __nuxt_component_0 } from \"primevue/toast\";\nimport { default as __nuxt_component_1 } from \"primevue/button\";\nimport { default as __nuxt_component_2 } from \"primevue/fileupload\";\nimport { default as __nuxt_component_3 } from \"primevue/toolbar\";\nimport { default as __nuxt_component_4 } from \"primevue/inputicon\";\nimport { default as __nuxt_component_5 } from \"primevue/inputtext\";\nimport { default as __nuxt_component_6 } from \"primevue/iconfield\";\nimport { default as __nuxt_component_7 } from \"primevue/multiselect\";\nimport { default as __nuxt_component_8 } from \"primevue/column\";\nimport { default as __nuxt_component_9 } from \"primevue/datatable\";\nimport { default as __nuxt_component_10 } from \"primevue/dropdown\";\nimport { default as __nuxt_component_11 } from \"primevue/dialog\";\nimport { definePageMeta } from 'E:/Stusy/web-client/node_modules/nuxt/dist/pages/runtime/composables';\nimport { useHead } from '@unhead/vue';\nimport { useRuntimeConfig, useNuxtApp } from '#app/nuxt';\nimport { useRouter } from '#app/composables/router';\nimport { ref, onMounted } from 'vue';\nimport { useToast } from 'primevue/usetoast';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, unref as _unref, withCtx as _withCtx, createElementVNode as _createElementVNode, isRef as _isRef, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, createSlots as _createSlots, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-8c1ca0b2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"main-content flex-col\" };\nconst _hoisted_2 = { class: \"card\" };\nconst _hoisted_3 = { class: \"flex flex-wrap gap-3 items-center justify-between mb-3\" };\nconst _hoisted_4 = { class: \"flex items-center gap-3\" };\nconst _hoisted_5 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"h4\", { class: \"m-0 text-xl text-900 font-bold\" }, \"Управление группами\", -1));\nconst _hoisted_6 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1));\nconst _hoisted_7 = { class: \"m-0 mb-2\" };\nconst _hoisted_8 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"h2\", null, \"Присоединение к группе\", -1));\nconst _hoisted_9 = { class: \"card\" };\nconst _hoisted_10 = {\n  key: 0,\n  class: \"flex align-items-center\"\n};\nconst _hoisted_11 = { key: 1 };\nconst _hoisted_12 = { class: \"flex flex-col justify-center flex-wrap\" };\nconst _hoisted_13 = { class: \"flex flex-wrap gap-3 items-center justify-between mb-3\" };\nconst _hoisted_14 = { class: \"flex items-center gap-3\" };\nconst _hoisted_15 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"h4\", { class: \"m-0 text-xl text-900 font-bold\" }, \"Пользователи\", -1));\nconst _hoisted_16 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1));\nconst _hoisted_17 = { class: \"field my-3\" };\nconst _hoisted_18 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"label\", { for: \"full_name\" }, \"Полное название\", -1));\nconst _hoisted_19 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_20 = { class: \"field my-3\" };\nconst _hoisted_21 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"label\", { for: \"abbreviation\" }, \"Аббревиатура\", -1));\nconst _hoisted_22 = {\n  key: 0,\n  class: \"p-error\"\n};\nconst _hoisted_23 = { class: \"confirmation-content p-3\" };\nconst _hoisted_24 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", {\n  class: \"pi pi-exclamation-triangle mr-3\",\n  style: { \"font-size\": \"2rem\" }\n}, null, -1));\nconst _hoisted_25 = { key: 0 };\nconst _hoisted_26 = { class: \"confirmation-content p-3\" };\nconst _hoisted_27 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"i\", {\n  class: \"pi pi-exclamation-triangle mr-3\",\n  style: { \"font-size\": \"2rem\" }\n}, null, -1));\nconst _hoisted_28 = { key: 0 };\nimport {\n  createGroup,\n  deleteGroups,\n  updateGroup,\n  deleteGroupUser,\n  formatGroupDates,\n  getGroupFullNames,\n  addUsersToGroup,\n  fetchGroupsWithUsers\n} from \"~/helpers/groups\";\nimport { FilterMatchMode } from \"primevue/api\";\nimport { fetchUsers } from \"~/helpers/user\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"index\",\n  setup(__props) {\n     false && /*@__PURE__*/ definePageMeta({\n      layout: \"home\",\n      middleware: [\n        \"admin\"\n      ]\n    });\n    useHead({\n      title: \"Администрирование групп\"\n    });\n    const runtimeConfig = useRuntimeConfig();\n    const nuxtApp = useNuxtApp();\n    const router = useRouter();\n    const loading = ref(true);\n    const toast = useToast();\n    const dt = ref();\n    const groups = ref();\n    const groupDialog = ref(false);\n    const deleteGroupDialog = ref(false);\n    const deleteGroupsDialog = ref(false);\n    const group = ref({});\n    const selectedGroups = ref();\n    const filters = ref({\n      \"global\": { value: null, matchMode: FilterMatchMode.CONTAINS }\n    });\n    const filtersUserTable = ref({\n      \"global\": { value: null, matchMode: FilterMatchMode.CONTAINS }\n    });\n    const filtersExpandedUsers = ref({\n      \"fullname\": { value: null, matchMode: FilterMatchMode.CONTAINS }\n    });\n    const submitted = ref(false);\n    const roles = ref([]);\n    const statuses = ref([\n      { label: \"ACTIVE\", value: \"active\" },\n      { label: \"INACTIVE\", value: \"inactive\" },\n      { label: \"BLOCKED\", value: \"blocked\" }\n    ]);\n    const columns = ref([\n      { field: \"full_name\", header: \"Наименование\" },\n      { field: \"abbreviation\", header: \"Аббревиатура\" },\n      { field: \"create_at\", header: \"Дата создания\" },\n      { field: \"updated_at\", header: \"Дата обновления\" }\n    ]);\n    const selectedColumns = ref(columns.value.filter((column) => column.field !== \"updated_at\"));\n    const expandedRows = ref({});\n    const selectedUsers = ref();\n    const users = ref();\n    const columnsUser = ref([\n      { field: \"email\", header: \"Почта\" },\n      { field: \"fullname\", header: \"ФИО\" },\n      { field: \"username\", header: \"Логин\" },\n      { field: \"about\", header: \"Описание\" },\n      { field: \"role.name\", header: \"Роль\" },\n      { field: \"groups\", header: \"Группы\" }\n    ]);\n    const selectedColumnsUser = ref(columnsUser.value.filter((column) => column.field !== \"about\"));\n    const openNew = () => {\n      group.value = {};\n      submitted.value = false;\n      groupDialog.value = true;\n    };\n    const hideDialog = () => {\n      groupDialog.value = false;\n      submitted.value = false;\n    };\n    const saveGroup = () => {\n      submitted.value = true;\n      if (group?.value.full_name?.trim()) {\n        if (group.value.id) {\n          console.log(group.value.id, group.value);\n          updateGroup(group.value.id, group.value).then((data) => {\n            groups.value[findIndexById(group.value.id)] = data;\n            toast.add({ severity: \"success\", summary: \"Successful\", detail: \"group Updated\", life: 3e3 });\n            groupDialog.value = false;\n            group.value = {};\n            getGroups();\n          }).catch((error) => console.error(\"Error updating group:\", error));\n        } else {\n          createGroup(group.value).then((data) => {\n            groups.value.push(data);\n            toast.add({ severity: \"success\", summary: \"Successful\", detail: \"group Created\", life: 3e3 });\n          }).catch((error) => console.error(\"Error creating group:\", error));\n        }\n        groupDialog.value = false;\n        group.value = {};\n      }\n    };\n    const editGroup = (usr) => {\n      group.value = { ...usr };\n      groupDialog.value = true;\n      console.log(group);\n    };\n    const confirmDeleteGroup = (usr) => {\n      group.value = usr;\n      deleteGroupDialog.value = true;\n    };\n    const deleteGroup = () => {\n      deleteGroups([group.value.id]).then((data) => {\n        groups.value = groups.value.filter((val) => val.id !== group.value.id);\n        deleteGroupDialog.value = false;\n        group.value = {};\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Группа удалена\", life: 3e3 });\n      }).catch((error) => console.error(\"Error delete group:\", error));\n    };\n    const removeUserFromGroup = (groupId, userIds) => {\n      deleteGroupUser(groupId, userIds).then(() => {\n        getGroups();\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Пользователь удален из группы\", life: 3e3 });\n      }).catch((error) => console.error(\"Ошибка удаления пользователя из группы:\", error)).finally(getUsers);\n    };\n    const addUserToGroup = (groupId, userIds) => {\n      addUsersToGroup(groupId, userIds).then(() => {\n        getGroups();\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Пользователь добавлен в группу\", life: 3e3 });\n      }).catch((error) => console.error(\"Ошибка добавления пользователя в группу:\", error));\n    };\n    const findIndexById = (id) => {\n      let index = -1;\n      for (let i = 0; i < groups.value.length; i++) {\n        if (groups.value[i].id === id) {\n          index = i;\n          break;\n        }\n      }\n      return index;\n    };\n    const createId = () => {\n      let id = \"\";\n      var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n      for (var i = 0; i < 5; i++) {\n        id += chars.charAt(Math.floor(Math.random() * chars.length));\n      }\n      return id;\n    };\n    const exportCSV = () => {\n      dt.value.exportCSV();\n    };\n    const confirmDeleteSelected = () => {\n      deleteGroupsDialog.value = true;\n    };\n    const confirmAddSelectedUserToGroup = () => {\n      console.log(selectedUsers.value);\n      addUserToGroup(group.value.id, selectedUsers.value.map((user) => user.id));\n      selectedUsers.value = null;\n    };\n    const deleteSelectedGroups = () => {\n      deleteGroups(selectedGroups.value.map((group2) => group2.id)).then((data) => {\n        groups.value = groups.value.filter((val) => !selectedGroups.value.includes(val));\n        deleteGroupsDialog.value = false;\n        selectedGroups.value = null;\n        toast.add({ severity: \"success\", summary: \"Успешно\", detail: \"Пользователи удалены\", life: 3e3 });\n      }).catch((error) => console.error(\"Error delete groups:\", error));\n    };\n    const isGroupInDataGroups = (groupId, groups2) => {\n      if (!groupId) {\n        return true;\n      }\n      const hasValidGroupId = groups2.some((group2) => {\n        return group2?.id === groupId || group2?.children?.some((child) => child?.id === groupId);\n      });\n      return !hasValidGroupId;\n    };\n    const onToggleColumns = (val) => {\n      selectedColumns.value = columns.value.filter((col) => val.includes(col));\n    };\n    const onRowExpand = (event) => {\n      toast.add({ severity: \"info\", summary: \"Product Expanded\", detail: event.data.name, life: 3e3 });\n    };\n    const onRowCollapse = (event) => {\n      toast.add({ severity: \"success\", summary: \"Product Collapsed\", detail: event.data.name, life: 3e3 });\n    };\n    function getGroups() {\n      fetchGroupsWithUsers().then((data) => {\n        data.forEach((group2) => {\n          if (group2.users) {\n            group2.users.forEach((user) => {\n              user.fullname = `${user.last_name} ${user.first_name} ${user.middle_name}`;\n              user.group_id = group2.id;\n            });\n          }\n        });\n        groups.value = data.map((group2) => ({\n          ...group2\n        }));\n        groups.value = formatGroupDates(groups.value);\n        console.log(groups.value);\n        loading.value = false;\n      }).catch((error) => console.error(\"Error fetching groups:\", error));\n    }\n    function getUsers() {\n      loading.value = true;\n      fetchUsers().then((data) => {\n        users.value = data.map((user) => ({\n          ...user,\n          fullname: `${user.last_name} ${user.first_name} ${user.middle_name}`\n        }));\n        loading.value = false;\n      }).catch((error) => console.error(\"Error fetching users:\", error)).finally(() => {\n        loading.value = false;\n      });\n    }\n    onMounted(() => {\n      getGroups();\n      getUsers();\n    });\n    return (_ctx, _cache) => {\n      const _component_Toast = __nuxt_component_0;\n      const _component_Button = __nuxt_component_1;\n      const _component_FileUpload = __nuxt_component_2;\n      const _component_Toolbar = __nuxt_component_3;\n      const _component_InputIcon = __nuxt_component_4;\n      const _component_InputText = __nuxt_component_5;\n      const _component_IconField = __nuxt_component_6;\n      const _component_MultiSelect = __nuxt_component_7;\n      const _component_Column = __nuxt_component_8;\n      const _component_DataTable = __nuxt_component_9;\n      const _component_Dropdown = __nuxt_component_10;\n      const _component_Dialog = __nuxt_component_11;\n      return _openBlock(), _createElementBlock(_Fragment, null, [\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createVNode(_component_Toast),\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createVNode(_component_Toolbar, { class: \"mb-4\" }, {\n              start: _withCtx(() => [\n                _createVNode(_component_Button, {\n                  label: \"Добавить\",\n                  icon: \"pi pi-plus\",\n                  severity: \"success\",\n                  class: \"mr-2\",\n                  onClick: openNew\n                }),\n                _createVNode(_component_Button, {\n                  label: \"Удалить\",\n                  icon: \"pi pi-trash\",\n                  severity: \"danger\",\n                  onClick: confirmDeleteSelected,\n                  disabled: !_unref(selectedGroups) || !_unref(selectedGroups).length\n                }, null, 8, [\"disabled\"])\n              ]),\n              end: _withCtx(() => [\n                _createVNode(_component_FileUpload, {\n                  mode: \"basic\",\n                  accept: \"image/*\",\n                  maxFileSize: 1e6,\n                  label: \"Import\",\n                  chooseLabel: \"Импорт\",\n                  class: \"mr-2 inline-block\"\n                }),\n                _createVNode(_component_Button, {\n                  label: \"Экспорт\",\n                  icon: \"pi pi-upload\",\n                  severity: \"help\",\n                  onClick: _cache[0] || (_cache[0] = ($event) => exportCSV($event))\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_DataTable, {\n              ref_key: \"dt\",\n              ref: dt,\n              expandedRows: _unref(expandedRows),\n              \"onUpdate:expandedRows\": _cache[4] || (_cache[4] = ($event) => _isRef(expandedRows) ? expandedRows.value = $event : null),\n              value: _unref(groups),\n              selection: _unref(selectedGroups),\n              \"onUpdate:selection\": _cache[5] || (_cache[5] = ($event) => _isRef(selectedGroups) ? selectedGroups.value = $event : null),\n              dataKey: \"id\",\n              style: { \"max-width\": \"1500px\" },\n              loading: _unref(loading),\n              onRowExpand,\n              onRowCollapse,\n              showGridlines: \"\",\n              resizableColumns: \"\",\n              columnResizeMode: \"fit\",\n              paginator: true,\n              rows: 10,\n              filters: _unref(filters),\n              paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n              rowsPerPageOptions: [10, 25, 50],\n              currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n            }, {\n              header: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  _createElementVNode(\"div\", _hoisted_4, [\n                    _hoisted_5,\n                    _createVNode(_component_Button, {\n                      icon: \"pi pi-refresh\",\n                      rounded: \"\",\n                      raised: \"\",\n                      onClick: getGroups\n                    })\n                  ]),\n                  _createVNode(_component_IconField, { iconPosition: \"left\" }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_InputIcon, null, {\n                        default: _withCtx(() => [\n                          _hoisted_6\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_InputText, {\n                        modelValue: _unref(filters)[\"global\"].value,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event) => _unref(filters)[\"global\"].value = $event),\n                        placeholder: \"Поиск...\"\n                      }, null, 8, [\"modelValue\"])\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _createVNode(_component_MultiSelect, {\n                  modelValue: _unref(selectedColumns),\n                  \"onUpdate:modelValue\": [\n                    _cache[2] || (_cache[2] = ($event) => _isRef(selectedColumns) ? selectedColumns.value = $event : null),\n                    onToggleColumns\n                  ],\n                  options: _unref(columns),\n                  optionLabel: \"header\",\n                  display: \"chip\",\n                  placeholder: \"Выберите колонки\"\n                }, null, 8, [\"modelValue\", \"options\"])\n              ]),\n              expansion: _withCtx((slotProps) => [\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"h4\", _hoisted_7, \"Участники группы \" + _toDisplayString(slotProps.data.abbreviation), 1),\n                  slotProps.data.users?.length !== 0 ? (_openBlock(), _createBlock(_component_DataTable, {\n                    key: 0,\n                    filters: _unref(filtersExpandedUsers),\n                    \"onUpdate:filters\": _cache[3] || (_cache[3] = ($event) => _isRef(filtersExpandedUsers) ? filtersExpandedUsers.value = $event : null),\n                    filterDisplay: \"row\",\n                    globalFilterFields: [\"fullname\"],\n                    value: slotProps.data.users,\n                    paginator: true,\n                    rows: 20,\n                    paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n                    rowsPerPageOptions: [20, 40, 80],\n                    currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_Column, {\n                        field: \"fullname\",\n                        header: \"ФИО\"\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createTextVNode(_toDisplayString(slotProps2.data.fullname), 1)\n                        ]),\n                        filter: _withCtx(({ filterModel, filterCallback }) => [\n                          _createVNode(_component_InputText, {\n                            modelValue: filterModel.value,\n                            \"onUpdate:modelValue\": ($event) => filterModel.value = $event,\n                            type: \"text\",\n                            onInput: ($event) => filterCallback(),\n                            class: \"p-column-filter\",\n                            placeholder: \"Поиск по имени\"\n                          }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onInput\"])\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        field: \"email\",\n                        header: \"Почта\"\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createTextVNode(_toDisplayString(slotProps2.data.email), 1)\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        field: \"username\",\n                        header: \"Логин\"\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createTextVNode(_toDisplayString(slotProps2.data.username), 1)\n                        ]),\n                        _: 2\n                      }, 1024),\n                      _createVNode(_component_Column, {\n                        exportable: false,\n                        style: { \"width\": \"2rem\" }\n                      }, {\n                        body: _withCtx((slotProps2) => [\n                          _createVNode(_component_Button, {\n                            icon: \"pi pi-trash\",\n                            outlined: \"\",\n                            rounded: \"\",\n                            severity: \"danger\",\n                            onClick: ($event) => removeUserFromGroup(slotProps2.data.group_id, [slotProps2.data.id])\n                          }, null, 8, [\"onClick\"])\n                        ]),\n                        _: 2\n                      }, 1024)\n                    ]),\n                    _: 2\n                  }, 1032, [\"filters\", \"value\"])) : _createCommentVNode(\"\", true)\n                ])\n              ]),\n              default: _withCtx(() => [\n                _createVNode(_component_Column, {\n                  expander: \"\",\n                  style: { \"width\": \"3rem\" }\n                }),\n                _createVNode(_component_Column, {\n                  selectionMode: \"multiple\",\n                  style: { \"width\": \"3rem\" },\n                  exportable: false\n                }),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(selectedColumns), (col, index) => {\n                  return _openBlock(), _createBlock(_component_Column, {\n                    sortable: \"\",\n                    field: col.field,\n                    header: col.header,\n                    key: col.field + \"_\" + index\n                  }, null, 8, [\"field\", \"header\"]);\n                }), 128)),\n                _createVNode(_component_Column, {\n                  exportable: false,\n                  style: { \"min-width\": \"8rem\" }\n                }, {\n                  body: _withCtx((slotProps) => [\n                    _createVNode(_component_Button, {\n                      icon: \"pi pi-pencil\",\n                      outlined: \"\",\n                      rounded: \"\",\n                      class: \"mr-2\",\n                      onClick: ($event) => editGroup(slotProps.data)\n                    }, null, 8, [\"onClick\"]),\n                    _createVNode(_component_Button, {\n                      icon: \"pi pi-trash\",\n                      outlined: \"\",\n                      rounded: \"\",\n                      severity: \"danger\",\n                      onClick: ($event) => confirmDeleteGroup(slotProps.data)\n                    }, null, 8, [\"onClick\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }, 8, [\"expandedRows\", \"value\", \"selection\", \"loading\", \"filters\"])\n          ]),\n          _createElementVNode(\"div\", null, [\n            _hoisted_8,\n            _createElementVNode(\"div\", _hoisted_9, [\n              _createVNode(_component_Toolbar, { class: \"mb-4\" }, {\n                start: _withCtx(() => [\n                  _createVNode(_component_Button, {\n                    label: \"Добавить\",\n                    icon: \"pi pi-plus\",\n                    severity: \"success\",\n                    onClick: confirmAddSelectedUserToGroup,\n                    disabled: !_unref(selectedUsers) || !_unref(selectedUsers).length || !_unref(group).id\n                  }, null, 8, [\"disabled\"])\n                ]),\n                end: _withCtx(() => [\n                  _createVNode(_component_Dropdown, {\n                    modelValue: _unref(group),\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event) => _isRef(group) ? group.value = $event : null),\n                    options: _unref(groups),\n                    filter: \"\",\n                    optionLabel: \"abbreviation\",\n                    placeholder: \"Выберите группу\",\n                    class: \"w-full md:w-14rem\"\n                  }, {\n                    value: _withCtx((slotProps) => [\n                      slotProps.value.abbreviation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                        _createElementVNode(\"div\", null, _toDisplayString(slotProps.value.abbreviation), 1)\n                      ])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_11, _toDisplayString(slotProps.placeholder), 1))\n                    ]),\n                    option: _withCtx((slotProps) => [\n                      _createElementVNode(\"div\", _hoisted_12, [\n                        _createElementVNode(\"div\", null, _toDisplayString(slotProps.option.full_name), 1),\n                        _createElementVNode(\"div\", null, _toDisplayString(slotProps.option.abbreviation), 1)\n                      ])\n                    ]),\n                    _: 1\n                  }, 8, [\"modelValue\", \"options\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_DataTable, {\n                ref_key: \"dt\",\n                ref: dt,\n                value: _unref(users),\n                selection: _unref(selectedUsers),\n                \"onUpdate:selection\": _cache[9] || (_cache[9] = ($event) => _isRef(selectedUsers) ? selectedUsers.value = $event : null),\n                dataKey: \"id\",\n                loading: _unref(loading),\n                style: { \"max-width\": \"1500px\" },\n                tableStyle: \"min-width: 60rem\",\n                showGridlines: \"\",\n                resizableColumns: \"\",\n                columnResizeMode: \"fit\",\n                paginator: true,\n                rows: 10,\n                filters: _unref(filtersUserTable),\n                paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n                rowsPerPageOptions: [10, 25, 50],\n                currentPageReportTemplate: \"Показаны {first} до {last} из {totalRecords}\"\n              }, {\n                header: _withCtx(() => [\n                  _createElementVNode(\"div\", _hoisted_13, [\n                    _createElementVNode(\"div\", _hoisted_14, [\n                      _hoisted_15,\n                      _createVNode(_component_Button, {\n                        icon: \"pi pi-refresh\",\n                        rounded: \"\",\n                        raised: \"\",\n                        onClick: getUsers\n                      })\n                    ]),\n                    _createVNode(_component_IconField, { iconPosition: \"left\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_InputIcon, null, {\n                          default: _withCtx(() => [\n                            _hoisted_16\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_InputText, {\n                          modelValue: _unref(filtersUserTable)[\"global\"].value,\n                          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event) => _unref(filtersUserTable)[\"global\"].value = $event),\n                          placeholder: \"Поиск...\"\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _createVNode(_component_MultiSelect, {\n                    modelValue: _unref(selectedColumnsUser),\n                    \"onUpdate:modelValue\": [\n                      _cache[8] || (_cache[8] = ($event) => _isRef(selectedColumnsUser) ? selectedColumnsUser.value = $event : null),\n                      onToggleColumns\n                    ],\n                    options: _unref(columnsUser),\n                    optionLabel: \"header\",\n                    display: \"chip\",\n                    placeholder: \"Выберите колонки\"\n                  }, null, 8, [\"modelValue\", \"options\"])\n                ]),\n                empty: _withCtx(() => [\n                  _createTextVNode(\" Пользователи не найдены\")\n                ]),\n                default: _withCtx(() => [\n                  _createVNode(_component_Column, {\n                    selectionMode: \"multiple\",\n                    style: { \"width\": \"3rem\" },\n                    exportable: false\n                  }),\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(selectedColumnsUser), (col, index) => {\n                    return _openBlock(), _createBlock(_component_Column, {\n                      sortable: \"\",\n                      field: col.field,\n                      header: col.header,\n                      key: col.field + \"_\" + index\n                    }, _createSlots({ _: 2 }, [\n                      col.field !== \"groups\" && col.field !== \"role.name\" ? {\n                        name: \"body\",\n                        fn: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data[col.field]), 1)\n                        ]),\n                        key: \"0\"\n                      } : col.field === \"role.name\" ? {\n                        name: \"body\",\n                        fn: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(slotProps.data.role.name), 1)\n                        ]),\n                        key: \"1\"\n                      } : col.field === \"groups\" ? {\n                        name: \"body\",\n                        fn: _withCtx((slotProps) => [\n                          _createTextVNode(_toDisplayString(_unref(getGroupFullNames)(slotProps.data.groups)), 1)\n                        ]),\n                        key: \"2\"\n                      } : void 0\n                    ]), 1032, [\"field\", \"header\"]);\n                  }), 128)),\n                  _createVNode(_component_Column, {\n                    exportable: false,\n                    style: { \"min-width\": \"8rem\" }\n                  }, {\n                    body: _withCtx((slotProps) => [\n                      _createVNode(_component_Button, {\n                        icon: \"pi pi-plus\",\n                        outlined: \"\",\n                        rounded: \"\",\n                        class: \"mr-2\",\n                        severity: \"success\",\n                        disabled: !_unref(group).id,\n                        onClick: ($event) => addUserToGroup(_unref(group).id, [slotProps.data.id])\n                      }, null, 8, [\"disabled\", \"onClick\"]),\n                      _createVNode(_component_Button, {\n                        icon: \"pi pi-trash\",\n                        outlined: \"\",\n                        rounded: \"\",\n                        severity: \"danger\",\n                        disabled: isGroupInDataGroups(_unref(group).id, slotProps.data.groups),\n                        onClick: ($event) => removeUserFromGroup(_unref(group).id, [slotProps.data.id])\n                      }, null, 8, [\"disabled\", \"onClick\"])\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              }, 8, [\"value\", \"selection\", \"loading\", \"filters\"])\n            ])\n          ])\n        ]),\n        _createVNode(_component_Dialog, {\n          visible: _unref(groupDialog),\n          \"onUpdate:visible\": _cache[12] || (_cache[12] = ($event) => _isRef(groupDialog) ? groupDialog.value = $event : null),\n          style: { width: \"450px\" },\n          header: \"Сведения о группе\",\n          modal: true,\n          class: \"p-fluid\"\n        }, {\n          footer: _withCtx(() => [\n            _createVNode(_component_Button, {\n              label: \"Отмена\",\n              icon: \"pi pi-times\",\n              text: \"\",\n              onClick: hideDialog\n            }),\n            _createVNode(_component_Button, {\n              label: \"Сохранить\",\n              icon: \"pi pi-check\",\n              text: \"\",\n              onClick: saveGroup\n            })\n          ]),\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_17, [\n              _hoisted_18,\n              _createVNode(_component_InputText, {\n                class: \"mt-2\",\n                id: \"full_name\",\n                modelValue: _unref(group).full_name,\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event) => _unref(group).full_name = $event),\n                modelModifiers: { trim: true },\n                required: \"\",\n                invalid: _unref(submitted) && !_unref(group).full_name\n              }, null, 8, [\"modelValue\", \"invalid\"]),\n              _unref(submitted) && !_unref(group).full_name ? (_openBlock(), _createElementBlock(\"small\", _hoisted_19, \"Полное название обязательно для заполнения.\")) : _createCommentVNode(\"\", true)\n            ]),\n            _createElementVNode(\"div\", _hoisted_20, [\n              _hoisted_21,\n              _createVNode(_component_InputText, {\n                class: \"mt-2\",\n                id: \"abbreviation\",\n                modelValue: _unref(group).abbreviation,\n                \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event) => _unref(group).abbreviation = $event),\n                modelModifiers: { trim: true },\n                required: \"\",\n                invalid: _unref(submitted) && !_unref(group).abbreviation\n              }, null, 8, [\"modelValue\", \"invalid\"]),\n              _unref(submitted) && !_unref(group).abbreviation ? (_openBlock(), _createElementBlock(\"small\", _hoisted_22, \"Аббревиатура обязательна для заполнения.\")) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"visible\"]),\n        _createVNode(_component_Dialog, {\n          visible: _unref(deleteGroupDialog),\n          \"onUpdate:visible\": _cache[14] || (_cache[14] = ($event) => _isRef(deleteGroupDialog) ? deleteGroupDialog.value = $event : null),\n          style: { width: \"500px\" },\n          header: \"Подтверждение\",\n          modal: true\n        }, {\n          footer: _withCtx(() => [\n            _createVNode(_component_Button, {\n              label: \"Нет\",\n              icon: \"pi pi-times\",\n              text: \"\",\n              onClick: _cache[13] || (_cache[13] = ($event) => deleteGroupDialog.value = false)\n            }),\n            _createVNode(_component_Button, {\n              label: \"Да\",\n              icon: \"pi pi-check\",\n              text: \"\",\n              onClick: deleteGroup\n            })\n          ]),\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_23, [\n              _hoisted_24,\n              _unref(group) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_25, [\n                _createTextVNode(\"Вы действительно хотите удалить группу \"),\n                _createElementVNode(\"b\", null, _toDisplayString(_unref(group).full_name), 1)\n              ])) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"visible\"]),\n        _createVNode(_component_Dialog, {\n          visible: _unref(deleteGroupsDialog),\n          \"onUpdate:visible\": _cache[16] || (_cache[16] = ($event) => _isRef(deleteGroupsDialog) ? deleteGroupsDialog.value = $event : null),\n          style: { width: \"450px\" },\n          header: \"Подтверждение\",\n          modal: true\n        }, {\n          footer: _withCtx(() => [\n            _createVNode(_component_Button, {\n              label: \"Нет\",\n              icon: \"pi pi-times\",\n              text: \"\",\n              onClick: _cache[15] || (_cache[15] = ($event) => deleteGroupsDialog.value = false)\n            }),\n            _createVNode(_component_Button, {\n              label: \"Да\",\n              icon: \"pi pi-check\",\n              text: \"\",\n              onClick: deleteSelectedGroups\n            })\n          ]),\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_26, [\n              _hoisted_27,\n              _unref(group) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, \"Вы действительно хотите удалить выделенные группы?\")) : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"visible\"])\n      ], 64);\n    };\n  }\n});\n",
      "start": 1715794737913,
      "end": 1715794737924,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1715794737924,
      "end": 1715794737924,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1715794737925,
      "end": 1715794737925,
      "order": "normal"
    }
  ]
}
